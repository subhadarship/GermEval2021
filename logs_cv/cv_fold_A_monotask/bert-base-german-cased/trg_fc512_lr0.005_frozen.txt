06/29/2021 10:02:14 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

06/29/2021 10:02:14 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	train_data_dir: ../data/cross_validation/fold_A
	dev_data_dir: ../data/cross_validation/fold_A
	test_data_dir: None
	label_col_names: Sub3_FactClaiming
	eval_label_col_names: Sub3_FactClaiming
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-german-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 512
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_cv/cv_fold_A_monotask/bert-base-german-cased/trg_fc512_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/GermEval2021/models/cv_fold_A_monotask/bert-base-german-cased/trg_fc512_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-german-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

06/29/2021 10:02:15 - INFO - __main__ -   device: cuda
06/29/2021 10:02:15 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-german-cased
06/29/2021 10:02:16 - WARNING - data_utils.bert_data -   trimming sentence 38 of length 2708 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:02:16 - WARNING - data_utils.bert_data -   trimming sentence 252 of length 667 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:02:16 - WARNING - data_utils.bert_data -   trimming sentence 332 of length 1615 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:02:16 - WARNING - data_utils.bert_data -   trimming sentence 1735 of length 2871 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:02:17 - WARNING - data_utils.bert_data -   trimming sentence 110 of length 1522 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:02:17 - INFO - data_utils.preprocess_bert -   num train samples: 2595
06/29/2021 10:02:17 - INFO - data_utils.preprocess_bert -   num val samples: 649
06/29/2021 10:02:17 - INFO - data_utils.preprocess_bert -   num test samples: None
06/29/2021 10:02:17 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
06/29/2021 10:02:17 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
06/29/2021 10:02:18 - INFO - data_utils.preprocess_bert -   train OOV: 567 (0.49%) out of 116734 running tokens are OOV
06/29/2021 10:02:18 - INFO - data_utils.preprocess_bert -   val OOV: 124 (0.42%) out of 29394 running tokens are OOV
06/29/2021 10:02:18 - INFO - data_utils.preprocess_bert -   look at some train samples üëÄ
06/29/2021 10:02:18 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: Es sollte doch hei√üen Sie wissen doch. Wissen ist Macht. Nichts wissen macht nix.Nun den quasseln kann Jeder. Handeln ist angesagt., text ids: [3, 482, 1547, 1575, 11619, 371, 5029, 1575, 26914, 6311, 127, 4129, 26914, 14838, 5029, 2241, 53, 2713, 26914, 4692, 86, 2510, 7731, 26898, 479, 8854, 26914, 11013, 127, 3452, 1063, 26914, 4], original labels: 0, label ids: [[0]]
06/29/2021 10:02:18 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: Das ist doch wieder eine l√§cherliches Gequatsche,wo nix bei rauskommt., text ids: [3, 295, 127, 1575, 525, 155, 1567, 1319, 2279, 241, 633, 15833, 26897, 26918, 743, 53, 2713, 178, 12227, 6886, 26914, 4], original labels: 0, label ids: [[0]]
06/29/2021 10:02:18 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Der Hank geht mir derma√üen auf die Eier., text ids: [3, 233, 5198, 26917, 1398, 3667, 21, 7012, 115, 30, 11903, 26914, 4], original labels: 0, label ids: [[0]]
06/29/2021 10:02:18 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: Verfassungsschonendere Variante? Seit wann hat unsere Verfassung G√ºltigkeit f√ºr Tote? Wir haben noch nicht mal Tierrecht in unserer Verfassung von rechten f√ºr Tote ganz zu Schweigen. Die Verfassung wird durch Spahn seinen Vorschlag ja nicht mal anger√ºhrt., text ids: [3, 5290, 25297, 6638, 26897, 10336, 26972, 1232, 10118, 193, 6712, 8178, 22699, 142, 16847, 26972, 655, 474, 357, 149, 2723, 3817, 652, 50, 8174, 8178, 88, 6642, 142, 16847, 1346, 81, 26551, 26914, 125, 8178, 292, 261, 276, 558, 800, 10021, 3278, 149, 2723, 19365, 8843, 26914, 4], original labels: 1, label ids: [[1]]
06/29/2021 10:02:18 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: @USER ......sag doch bitte einfach genau, WEN und WAS du ansprichst!, text ids: [3, 26991, 960, 8242, 26914, 26914, 26914, 26914, 26914, 26914, 24925, 26908, 1575, 18976, 2774, 2971, 26918, 79, 14972, 42, 79, 12312, 4547, 9460, 737, 20, 13, 26982, 4], original labels: 0, label ids: [[0]]
06/29/2021 10:02:19 - INFO - data_utils.preprocess_bert -   there are nearly 126 batches in an epoch
06/29/2021 10:02:22 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30000, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=512, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=512, out_features=2, bias=True)
  )
)
-----------------------------------------------------------------------------------------

06/29/2021 10:02:22 - INFO - __main__ -   the model has 394,754 trainable parameters
06/29/2021 10:02:22 - INFO - __main__ -   üåã  starting training..
06/29/2021 10:02:31 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:02:31 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:02:31 - INFO - __main__ -   Epoch: 0001 | Time: 0m_9s | train_loss: 0.646 | val_loss: 1.892
06/29/2021 10:02:31 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.35130970724191063, 'f1': 0.27382347703830096, 'precision': 0.6163194444444444, 'recall': 0.5070833509536093}
06/29/2021 10:02:31 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:02:32 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:02:41 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:02:41 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:02:41 - INFO - __main__ -   Epoch: 0002 | Time: 0m_9s | train_loss: 0.572 | val_loss: 0.686
06/29/2021 10:02:41 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.74884437596302, 'f1': 0.7399539332499182, 'precision': 0.7413594470046083, 'recall': 0.7679991119380893}
06/29/2021 10:02:41 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:02:45 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:02:54 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:02:54 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:02:54 - INFO - __main__ -   Epoch: 0003 | Time: 0m_9s | train_loss: 0.482 | val_loss: 0.849
06/29/2021 10:02:54 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7796610169491526, 'f1': 0.7197864740746556, 'precision': 0.7890999880038387, 'recall': 0.7038260667315093}
06/29/2021 10:02:54 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 10:03:04 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:03:04 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:03:04 - INFO - __main__ -   Epoch: 0004 | Time: 0m_9s | train_loss: 0.509 | val_loss: 0.576
06/29/2021 10:03:04 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7442218798151001, 'f1': 0.6571950412381631, 'precision': 0.7556641613066416, 'recall': 0.6496014293567894}
06/29/2021 10:03:04 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 10:03:14 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:03:14 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:03:14 - INFO - __main__ -   Epoch: 0005 | Time: 0m_9s | train_loss: 0.451 | val_loss: 0.531
06/29/2021 10:03:14 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.773497688751926, 'f1': 0.7317616296233815, 'precision': 0.7548327726585735, 'recall': 0.7210375523322197}
06/29/2021 10:03:14 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 10:03:23 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:03:23 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:03:23 - INFO - __main__ -   Epoch: 0006 | Time: 0m_9s | train_loss: 0.457 | val_loss: 0.581
06/29/2021 10:03:23 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7781201848998459, 'f1': 0.7152259763053971, 'precision': 0.7914850536338063, 'recall': 0.6993751850128981}
06/29/2021 10:03:23 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 10:03:33 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:03:33 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:03:33 - INFO - __main__ -   Epoch: 0007 | Time: 0m_9s | train_loss: 0.419 | val_loss: 0.510
06/29/2021 10:03:33 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7827426810477658, 'f1': 0.7246996814050668, 'precision': 0.792092781977175, 'recall': 0.7083509536093373}
06/29/2021 10:03:33 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 10:03:43 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:03:43 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:03:43 - INFO - __main__ -   Epoch: 0008 | Time: 0m_9s | train_loss: 0.415 | val_loss: 0.819
06/29/2021 10:03:43 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7457627118644068, 'f1': 0.638085742771685, 'precision': 0.8035370152761457, 'recall': 0.6365448048378229}
06/29/2021 10:03:43 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 10:03:52 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:03:52 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:03:52 - INFO - __main__ -   Epoch: 0009 | Time: 0m_9s | train_loss: 0.406 | val_loss: 0.523
06/29/2021 10:03:52 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.785824345146379, 'f1': 0.7562688280986152, 'precision': 0.7631182581345383, 'recall': 0.7511735103818666}
06/29/2021 10:03:52 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:04:00 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:04:10 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:04:10 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:04:10 - INFO - __main__ -   Epoch: 0010 | Time: 0m_9s | train_loss: 0.382 | val_loss: 0.645
06/29/2021 10:04:10 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.773497688751926, 'f1': 0.7260903643687501, 'precision': 0.7601639640104154, 'recall': 0.7133780183532795}
06/29/2021 10:04:10 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 10:04:19 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:04:19 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:04:19 - INFO - __main__ -   Epoch: 0011 | Time: 0m_9s | train_loss: 0.359 | val_loss: 0.650
06/29/2021 10:04:19 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7950693374422187, 'f1': 0.7606859170744555, 'precision': 0.7788020330846883, 'recall': 0.7505233221973189}
06/29/2021 10:04:19 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:04:23 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:04:32 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:04:32 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:04:32 - INFO - __main__ -   Epoch: 0012 | Time: 0m_9s | train_loss: 0.372 | val_loss: 0.597
06/29/2021 10:04:32 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7827426810477658, 'f1': 0.753361633313119, 'precision': 0.7592751707424543, 'recall': 0.7488370617837359}
06/29/2021 10:04:32 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 10:04:42 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:04:42 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:04:42 - INFO - __main__ -   Epoch: 0013 | Time: 0m_9s | train_loss: 0.340 | val_loss: 0.588
06/29/2021 10:04:42 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7812018489984591, 'f1': 0.723242600422833, 'precision': 0.7887942468095139, 'recall': 0.7071827293102719}
06/29/2021 10:04:42 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 10:04:52 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:04:52 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:04:52 - INFO - __main__ -   Epoch: 0014 | Time: 0m_9s | train_loss: 0.333 | val_loss: 0.803
06/29/2021 10:04:52 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.765793528505393, 'f1': 0.746510432726899, 'precision': 0.7417771084337349, 'recall': 0.7545883198714425}
06/29/2021 10:04:52 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 10:05:01 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:05:01 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:05:01 - INFO - __main__ -   Epoch: 0015 | Time: 0m_9s | train_loss: 0.297 | val_loss: 0.717
06/29/2021 10:05:01 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7642526964560863, 'f1': 0.7416407996107582, 'precision': 0.7384987893462469, 'recall': 0.7457605615934368}
06/29/2021 10:05:01 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 10:05:11 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:05:11 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:05:11 - INFO - __main__ -   Epoch: 0016 | Time: 0m_9s | train_loss: 0.295 | val_loss: 0.880
06/29/2021 10:05:11 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7195685670261941, 'f1': 0.6884876679958647, 'precision': 0.688088170277269, 'recall': 0.6889034549837189}
06/29/2021 10:05:11 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 10:05:21 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:05:21 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:05:21 - INFO - __main__ -   Epoch: 0017 | Time: 0m_9s | train_loss: 0.278 | val_loss: 0.692
06/29/2021 10:05:21 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.785824345146379, 'f1': 0.74635963617449, 'precision': 0.770653551752718, 'recall': 0.7347602232841375}
06/29/2021 10:05:21 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 10:05:30 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:05:30 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:05:30 - INFO - __main__ -   Epoch: 0018 | Time: 0m_9s | train_loss: 0.267 | val_loss: 0.827
06/29/2021 10:05:30 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7580893682588598, 'f1': 0.7219419012402953, 'precision': 0.7313753257052227, 'recall': 0.7159206241806572}
06/29/2021 10:05:30 - INFO - __main__ -   	current patience value: 7/10
06/29/2021 10:05:40 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:05:40 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:05:40 - INFO - __main__ -   Epoch: 0019 | Time: 0m_9s | train_loss: 0.267 | val_loss: 0.699
06/29/2021 10:05:40 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7796610169491526, 'f1': 0.7398068323590843, 'precision': 0.7620689655172415, 'recall': 0.7289931069480272}
06/29/2021 10:05:40 - INFO - __main__ -   	current patience value: 8/10
06/29/2021 10:05:49 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:05:49 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:05:49 - INFO - __main__ -   Epoch: 0020 | Time: 0m_9s | train_loss: 0.254 | val_loss: 0.765
06/29/2021 10:05:49 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.773497688751926, 'f1': 0.7269339424175031, 'precision': 0.7592855316973415, 'recall': 0.714472237493128}
06/29/2021 10:05:49 - INFO - __main__ -   	current patience value: 9/10
06/29/2021 10:05:59 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:05:59 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:05:59 - INFO - __main__ -   Epoch: 0021 | Time: 0m_9s | train_loss: 0.228 | val_loss: 0.722
06/29/2021 10:05:59 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7627118644067796, 'f1': 0.7407232541247276, 'precision': 0.7371568527400755, 'recall': 0.74568655643422}
06/29/2021 10:05:59 - INFO - __main__ -   	current patience value: 10/10
06/29/2021 10:05:59 - INFO - __main__ -   	--STOPPING EARLY
06/29/2021 10:05:59 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/GermEval2021/models/cv_fold_A_monotask/bert-base-german-cased/trg_fc512_lr0.005_frozen
06/29/2021 10:05:59 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/GermEval2021/models/cv_fold_A_monotask/bert-base-german-cased/trg_fc512_lr0.005_frozen
06/29/2021 10:06:03 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:06:03 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:06:03 - INFO - __main__ -   best_val_loss: 0.650
06/29/2021 10:06:03 - INFO - __main__ -   üî• best validation metrics üî• {'acc': 0.7950693374422187, 'f1': 0.7606859170744555, 'precision': 0.7788020330846883, 'recall': 0.7505233221973189}
