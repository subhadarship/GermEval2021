06/29/2021 09:44:57 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

06/29/2021 09:44:57 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	train_data_dir: ../data/cross_validation/fold_A
	dev_data_dir: ../data/cross_validation/fold_A
	test_data_dir: None
	label_col_names: Sub3_FactClaiming
	eval_label_col_names: Sub3_FactClaiming
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 256
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_cv/cv_fold_A_monotask/bert-base-multilingual-cased/trg_fc256_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/GermEval2021/models/cv_fold_A_monotask/bert-base-multilingual-cased/trg_fc256_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

06/29/2021 09:44:57 - INFO - __main__ -   device: cuda
06/29/2021 09:44:57 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
06/29/2021 09:44:57 - WARNING - data_utils.bert_data -   trimming sentence 38 of length 2491 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 09:44:58 - WARNING - data_utils.bert_data -   trimming sentence 252 of length 752 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 09:44:58 - WARNING - data_utils.bert_data -   trimming sentence 332 of length 1645 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 09:44:58 - WARNING - data_utils.bert_data -   trimming sentence 1735 of length 2626 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 09:44:59 - WARNING - data_utils.bert_data -   trimming sentence 2479 of length 516 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 09:44:59 - WARNING - data_utils.bert_data -   trimming sentence 110 of length 1550 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 09:44:59 - INFO - data_utils.preprocess_bert -   num train samples: 2595
06/29/2021 09:44:59 - INFO - data_utils.preprocess_bert -   num val samples: 649
06/29/2021 09:44:59 - INFO - data_utils.preprocess_bert -   num test samples: None
06/29/2021 09:44:59 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
06/29/2021 09:44:59 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
06/29/2021 09:45:00 - INFO - data_utils.preprocess_bert -   train OOV: 505 (0.39%) out of 130793 running tokens are OOV
06/29/2021 09:45:00 - INFO - data_utils.preprocess_bert -   val OOV: 112 (0.34%) out of 32806 running tokens are OOV
06/29/2021 09:45:00 - INFO - data_utils.preprocess_bert -   look at some train samples üëÄ
06/29/2021 09:45:00 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: Es sollte doch hei√üen Sie wissen doch. Wissen ist Macht. Nichts wissen macht nix.Nun den quasseln kann Jeder. Handeln ist angesagt., text ids: [101, 10912, 17799, 21131, 10261, 10116, 20284, 11583, 16512, 10917, 21131, 119, 77783, 10298, 42601, 119, 52397, 10107, 16512, 10917, 26433, 10414, 10686, 119, 34289, 10140, 14517, 49235, 10115, 12382, 105818, 119, 41077, 10115, 10298, 110576, 50804, 119, 102], original labels: 0, label ids: [[0]]
06/29/2021 09:45:00 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: Das ist doch wieder eine l√§cherliches Gequatsche,wo nix bei rauskommt., text ids: [101, 10672, 10298, 21131, 12426, 10359, 180, 105623, 37179, 144, 10112, 32973, 41290, 10112, 117, 12796, 10414, 10686, 10492, 11859, 106239, 45011, 119, 102], original labels: 0, label ids: [[0]]
06/29/2021 09:45:00 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Der Hank geht mir derma√üen auf die Eier., text ids: [101, 10445, 42342, 21952, 36077, 10118, 10369, 20284, 10329, 10128, 35278, 10165, 119, 102], original labels: 0, label ids: [[0]]
06/29/2021 09:45:00 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: Verfassungsschonendere Variante? Seit wann hat unsere Verfassung G√ºltigkeit f√ºr Tote? Wir haben noch nicht mal Tierrecht in unserer Verfassung von rechten f√ºr Tote ganz zu Schweigen. Die Verfassung wird durch Spahn seinen Vorschlag ja nicht mal anger√ºhrt., text ids: [101, 61585, 13420, 56238, 27323, 10112, 57674, 136, 14050, 11471, 13538, 11250, 15826, 12122, 61585, 144, 23389, 25425, 10307, 22768, 10112, 136, 51732, 13289, 11230, 10726, 15189, 66655, 20913, 10106, 15826, 22981, 61585, 10166, 35320, 10307, 22768, 10112, 22762, 10304, 55260, 10237, 61512, 11280, 119, 10236, 61585, 10790, 10714, 64766, 15797, 12724, 28099, 51429, 10201, 10726, 15189, 46464, 12369, 30525, 119, 102], original labels: 1, label ids: [[1]]
06/29/2021 09:45:00 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: @USER ......sag doch bitte einfach genau, WEN und WAS du ansprichst!, text ids: [101, 137, 10808, 24093, 119, 119, 119, 119, 119, 119, 10148, 10240, 21131, 17684, 10216, 54068, 46871, 117, 160, 50655, 10130, 160, 38025, 10168, 11744, 101319, 42008, 10123, 106, 102], original labels: 0, label ids: [[0]]
06/29/2021 09:45:02 - INFO - data_utils.preprocess_bert -   there are nearly 141 batches in an epoch
06/29/2021 09:45:05 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=256, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=256, out_features=2, bias=True)
  )
)
-----------------------------------------------------------------------------------------

06/29/2021 09:45:05 - INFO - __main__ -   the model has 197,378 trainable parameters
06/29/2021 09:45:05 - INFO - __main__ -   üåã  starting training..
06/29/2021 09:45:16 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:45:16 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:45:16 - INFO - __main__ -   Epoch: 0001 | Time: 0m_11s | train_loss: 0.648 | val_loss: 0.514
06/29/2021 09:45:16 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7457627118644068, 'f1': 0.7219300910670188, 'precision': 0.7187991985115214, 'recall': 0.7262707743054087}
06/29/2021 09:45:16 - INFO - __main__ -   	--Found new best val f1
06/29/2021 09:45:17 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 09:45:29 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:45:29 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:45:29 - INFO - __main__ -   Epoch: 0002 | Time: 0m_11s | train_loss: 0.557 | val_loss: 0.626
06/29/2021 09:45:29 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7010785824345146, 'f1': 0.6899416852183851, 'precision': 0.6921892870758674, 'recall': 0.713182433289635}
06/29/2021 09:45:29 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 09:45:40 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:45:40 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:45:40 - INFO - __main__ -   Epoch: 0003 | Time: 0m_11s | train_loss: 0.582 | val_loss: 0.760
06/29/2021 09:45:40 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6332819722650231, 'f1': 0.6331765935214211, 'precision': 0.7165093827963988, 'recall': 0.7110204254239438}
06/29/2021 09:45:40 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 09:45:52 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:45:52 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:45:52 - INFO - __main__ -   Epoch: 0004 | Time: 0m_11s | train_loss: 0.563 | val_loss: 0.544
06/29/2021 09:45:52 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7473035439137135, 'f1': 0.7302904984897322, 'precision': 0.7256485849056604, 'recall': 0.7427580665623545}
06/29/2021 09:45:52 - INFO - __main__ -   	--Found new best val f1
06/29/2021 09:45:58 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 09:46:10 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:46:10 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:46:10 - INFO - __main__ -   Epoch: 0005 | Time: 0m_11s | train_loss: 0.538 | val_loss: 0.606
06/29/2021 09:46:10 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7534668721109399, 'f1': 0.740514173763544, 'precision': 0.7369470350846705, 'recall': 0.759467374296951}
06/29/2021 09:46:10 - INFO - __main__ -   	--Found new best val f1
06/29/2021 09:46:17 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 09:46:28 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:46:28 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:46:28 - INFO - __main__ -   Epoch: 0006 | Time: 0m_11s | train_loss: 0.510 | val_loss: 0.729
06/29/2021 09:46:28 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7072419106317411, 'f1': 0.7028388278388279, 'precision': 0.7205396370582617, 'recall': 0.7441165898422633}
06/29/2021 09:46:28 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 09:46:40 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:46:40 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:46:40 - INFO - __main__ -   Epoch: 0007 | Time: 0m_11s | train_loss: 0.512 | val_loss: 0.608
06/29/2021 09:46:40 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7349768875192604, 'f1': 0.7229909473517033, 'precision': 0.7215841546190129, 'recall': 0.7443544635683174}
06/29/2021 09:46:40 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 09:46:51 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:46:51 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:46:51 - INFO - __main__ -   Epoch: 0008 | Time: 0m_11s | train_loss: 0.524 | val_loss: 0.505
06/29/2021 09:46:51 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7596302003081664, 'f1': 0.7247607655502392, 'precision': 0.7329297875207763, 'recall': 0.7192772867594198}
06/29/2021 09:46:51 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 09:47:03 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:47:03 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:47:03 - INFO - __main__ -   Epoch: 0009 | Time: 0m_11s | train_loss: 0.511 | val_loss: 0.508
06/29/2021 09:47:03 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7642526964560863, 'f1': 0.7411208009072778, 'precision': 0.7383122232519823, 'recall': 0.7446663424535882}
06/29/2021 09:47:03 - INFO - __main__ -   	--Found new best val f1
06/29/2021 09:47:14 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 09:47:25 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:47:25 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:47:25 - INFO - __main__ -   Epoch: 0010 | Time: 0m_11s | train_loss: 0.509 | val_loss: 0.560
06/29/2021 09:47:25 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7580893682588598, 'f1': 0.7420149535265863, 'precision': 0.7370433263314946, 'recall': 0.755312513215207}
06/29/2021 09:47:25 - INFO - __main__ -   	--Found new best val f1
06/29/2021 09:47:32 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 09:47:43 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:47:43 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:47:43 - INFO - __main__ -   Epoch: 0011 | Time: 0m_11s | train_loss: 0.523 | val_loss: 0.631
06/29/2021 09:47:43 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6825885978428351, 'f1': 0.6811890726644918, 'precision': 0.7199675324675324, 'recall': 0.7363671924557027}
06/29/2021 09:47:43 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 09:47:54 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:47:54 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:47:54 - INFO - __main__ -   Epoch: 0012 | Time: 0m_11s | train_loss: 0.490 | val_loss: 0.597
06/29/2021 09:47:54 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7473035439137135, 'f1': 0.735154772568926, 'precision': 0.732641291810842, 'recall': 0.7558886962405379}
06/29/2021 09:47:54 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 09:48:06 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:48:06 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:48:06 - INFO - __main__ -   Epoch: 0013 | Time: 0m_11s | train_loss: 0.510 | val_loss: 0.502
06/29/2021 09:48:06 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7719568567026194, 'f1': 0.7482914046121594, 'precision': 0.7463609898107715, 'recall': 0.7505074639489153}
06/29/2021 09:48:06 - INFO - __main__ -   	--Found new best val f1
06/29/2021 09:48:13 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 09:48:24 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:48:24 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:48:24 - INFO - __main__ -   Epoch: 0014 | Time: 0m_11s | train_loss: 0.486 | val_loss: 0.497
06/29/2021 09:48:24 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7673343605546995, 'f1': 0.727551244519693, 'precision': 0.7448768064439706, 'recall': 0.7185530934156552}
06/29/2021 09:48:24 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 09:48:36 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:48:36 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:48:36 - INFO - __main__ -   Epoch: 0015 | Time: 0m_11s | train_loss: 0.504 | val_loss: 0.540
06/29/2021 09:48:36 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7473035439137135, 'f1': 0.7324330303274074, 'precision': 0.7282887700534759, 'recall': 0.7482291622615977}
06/29/2021 09:48:36 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 09:48:47 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:48:47 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:48:47 - INFO - __main__ -   Epoch: 0016 | Time: 0m_11s | train_loss: 0.472 | val_loss: 0.543
06/29/2021 09:48:47 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.74884437596302, 'f1': 0.7303422627013442, 'precision': 0.7256388905410496, 'recall': 0.7406436334418742}
06/29/2021 09:48:47 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 09:48:59 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:48:59 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:48:59 - INFO - __main__ -   Epoch: 0017 | Time: 0m_11s | train_loss: 0.468 | val_loss: 0.492
06/29/2021 09:48:59 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7719568567026194, 'f1': 0.7354813835646618, 'precision': 0.749108734402852, 'recall': 0.7275288620120945}
06/29/2021 09:48:59 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 09:49:11 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:49:11 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:49:11 - INFO - __main__ -   Epoch: 0018 | Time: 0m_11s | train_loss: 0.475 | val_loss: 0.482
06/29/2021 09:49:11 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7719568567026194, 'f1': 0.7193431510051427, 'precision': 0.7635918909396429, 'recall': 0.7056444792151224}
06/29/2021 09:49:11 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 09:49:22 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:49:22 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:49:22 - INFO - __main__ -   Epoch: 0019 | Time: 0m_11s | train_loss: 0.463 | val_loss: 0.531
06/29/2021 09:49:22 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7704160246533128, 'f1': 0.7463254293666597, 'precision': 0.7446243280410052, 'recall': 0.7482450205100013}
06/29/2021 09:49:22 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 09:49:34 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:49:34 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:49:34 - INFO - __main__ -   Epoch: 0020 | Time: 0m_11s | train_loss: 0.470 | val_loss: 0.507
06/29/2021 09:49:34 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7842835130970724, 'f1': 0.763355836146185, 'precision': 0.7600832562442184, 'recall': 0.7675127923203788}
06/29/2021 09:49:34 - INFO - __main__ -   	--Found new best val f1
06/29/2021 09:49:41 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 09:49:53 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:49:53 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:49:53 - INFO - __main__ -   Epoch: 0021 | Time: 0m_11s | train_loss: 0.478 | val_loss: 0.546
06/29/2021 09:49:53 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7627118644067796, 'f1': 0.7369786732352259, 'precision': 0.7360010482180293, 'recall': 0.7380270224552797}
06/29/2021 09:49:53 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 09:50:04 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:50:04 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:50:04 - INFO - __main__ -   Epoch: 0022 | Time: 0m_11s | train_loss: 0.464 | val_loss: 0.564
06/29/2021 09:50:04 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.74884437596302, 'f1': 0.7330208940608777, 'precision': 0.7285058145216456, 'recall': 0.7472089482809658}
06/29/2021 09:50:04 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 09:50:16 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:50:16 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:50:16 - INFO - __main__ -   Epoch: 0023 | Time: 0m_11s | train_loss: 0.480 | val_loss: 0.486
06/29/2021 09:50:16 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.773497688751926, 'f1': 0.7087509349289454, 'precision': 0.7849410520421812, 'recall': 0.6936820738360046}
06/29/2021 09:50:16 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 09:50:27 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:50:27 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:50:27 - INFO - __main__ -   Epoch: 0024 | Time: 0m_11s | train_loss: 0.459 | val_loss: 0.492
06/29/2021 09:50:27 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7873651771956857, 'f1': 0.749966499162479, 'precision': 0.7708333333333333, 'recall': 0.7392111050027488}
06/29/2021 09:50:27 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 09:50:39 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:50:39 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:50:39 - INFO - __main__ -   Epoch: 0025 | Time: 0m_11s | train_loss: 0.473 | val_loss: 0.561
06/29/2021 09:50:39 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7750385208012327, 'f1': 0.7240389095992544, 'precision': 0.7668389261744967, 'recall': 0.7101693660929504}
06/29/2021 09:50:39 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 09:50:51 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:50:51 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:50:51 - INFO - __main__ -   Epoch: 0026 | Time: 0m_11s | train_loss: 0.459 | val_loss: 0.487
06/29/2021 09:50:51 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.785824345146379, 'f1': 0.7492028012466048, 'precision': 0.767940061596778, 'recall': 0.7391370998435319}
06/29/2021 09:50:51 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 09:51:02 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:51:02 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:51:02 - INFO - __main__ -   Epoch: 0027 | Time: 0m_11s | train_loss: 0.454 | val_loss: 0.571
06/29/2021 09:51:02 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7565485362095532, 'f1': 0.7379265574843076, 'precision': 0.7330845028366677, 'recall': 0.74757897407705}
06/29/2021 09:51:02 - INFO - __main__ -   	current patience value: 7/10
06/29/2021 09:51:14 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:51:14 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:51:14 - INFO - __main__ -   Epoch: 0028 | Time: 0m_11s | train_loss: 0.476 | val_loss: 0.494
06/29/2021 09:51:14 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7750385208012327, 'f1': 0.7522071591455888, 'precision': 0.7498291182501708, 'recall': 0.7550323508267434}
06/29/2021 09:51:14 - INFO - __main__ -   	current patience value: 8/10
06/29/2021 09:51:26 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:51:26 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:51:26 - INFO - __main__ -   Epoch: 0029 | Time: 0m_11s | train_loss: 0.452 | val_loss: 0.498
06/29/2021 09:51:26 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7765793528505393, 'f1': 0.7338667028656594, 'precision': 0.7601846351846352, 'recall': 0.722279781790502}
06/29/2021 09:51:26 - INFO - __main__ -   	current patience value: 9/10
06/29/2021 09:51:37 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:51:37 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:51:37 - INFO - __main__ -   Epoch: 0030 | Time: 0m_11s | train_loss: 0.464 | val_loss: 0.604
06/29/2021 09:51:37 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7627118644067796, 'f1': 0.7407232541247276, 'precision': 0.7371568527400755, 'recall': 0.74568655643422}
06/29/2021 09:51:37 - INFO - __main__ -   	current patience value: 10/10
06/29/2021 09:51:37 - INFO - __main__ -   	--STOPPING EARLY
06/29/2021 09:51:37 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/GermEval2021/models/cv_fold_A_monotask/bert-base-multilingual-cased/trg_fc256_lr0.005_frozen
06/29/2021 09:51:38 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/GermEval2021/models/cv_fold_A_monotask/bert-base-multilingual-cased/trg_fc256_lr0.005_frozen
06/29/2021 09:51:42 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:51:42 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:51:42 - INFO - __main__ -   best_val_loss: 0.507
06/29/2021 09:51:42 - INFO - __main__ -   üî• best validation metrics üî• {'acc': 0.7842835130970724, 'f1': 0.763355836146185, 'precision': 0.7600832562442184, 'recall': 0.7675127923203788}
