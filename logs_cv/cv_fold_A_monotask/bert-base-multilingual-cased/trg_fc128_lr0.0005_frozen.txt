06/29/2021 08:29:40 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

06/29/2021 08:29:40 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	train_data_dir: ../data/cross_validation/fold_A
	dev_data_dir: ../data/cross_validation/fold_A
	test_data_dir: None
	label_col_names: Sub3_FactClaiming
	eval_label_col_names: Sub3_FactClaiming
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 128
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_cv/cv_fold_A_monotask/bert-base-multilingual-cased/trg_fc128_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/GermEval2021/models/cv_fold_A_monotask/bert-base-multilingual-cased/trg_fc128_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

06/29/2021 08:29:41 - INFO - __main__ -   device: cuda
06/29/2021 08:29:41 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
06/29/2021 08:29:42 - WARNING - data_utils.bert_data -   trimming sentence 38 of length 2491 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 08:29:42 - WARNING - data_utils.bert_data -   trimming sentence 252 of length 752 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 08:29:42 - WARNING - data_utils.bert_data -   trimming sentence 332 of length 1645 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 08:29:43 - WARNING - data_utils.bert_data -   trimming sentence 1735 of length 2626 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 08:29:43 - WARNING - data_utils.bert_data -   trimming sentence 2479 of length 516 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 08:29:43 - WARNING - data_utils.bert_data -   trimming sentence 110 of length 1550 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 08:29:43 - INFO - data_utils.preprocess_bert -   num train samples: 2595
06/29/2021 08:29:43 - INFO - data_utils.preprocess_bert -   num val samples: 649
06/29/2021 08:29:43 - INFO - data_utils.preprocess_bert -   num test samples: None
06/29/2021 08:29:43 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
06/29/2021 08:29:43 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
06/29/2021 08:29:44 - INFO - data_utils.preprocess_bert -   train OOV: 505 (0.39%) out of 130793 running tokens are OOV
06/29/2021 08:29:44 - INFO - data_utils.preprocess_bert -   val OOV: 112 (0.34%) out of 32806 running tokens are OOV
06/29/2021 08:29:44 - INFO - data_utils.preprocess_bert -   look at some train samples üëÄ
06/29/2021 08:29:44 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: Es sollte doch hei√üen Sie wissen doch. Wissen ist Macht. Nichts wissen macht nix.Nun den quasseln kann Jeder. Handeln ist angesagt., text ids: [101, 10912, 17799, 21131, 10261, 10116, 20284, 11583, 16512, 10917, 21131, 119, 77783, 10298, 42601, 119, 52397, 10107, 16512, 10917, 26433, 10414, 10686, 119, 34289, 10140, 14517, 49235, 10115, 12382, 105818, 119, 41077, 10115, 10298, 110576, 50804, 119, 102], original labels: 0, label ids: [[0]]
06/29/2021 08:29:44 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: Das ist doch wieder eine l√§cherliches Gequatsche,wo nix bei rauskommt., text ids: [101, 10672, 10298, 21131, 12426, 10359, 180, 105623, 37179, 144, 10112, 32973, 41290, 10112, 117, 12796, 10414, 10686, 10492, 11859, 106239, 45011, 119, 102], original labels: 0, label ids: [[0]]
06/29/2021 08:29:44 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Der Hank geht mir derma√üen auf die Eier., text ids: [101, 10445, 42342, 21952, 36077, 10118, 10369, 20284, 10329, 10128, 35278, 10165, 119, 102], original labels: 0, label ids: [[0]]
06/29/2021 08:29:44 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: Verfassungsschonendere Variante? Seit wann hat unsere Verfassung G√ºltigkeit f√ºr Tote? Wir haben noch nicht mal Tierrecht in unserer Verfassung von rechten f√ºr Tote ganz zu Schweigen. Die Verfassung wird durch Spahn seinen Vorschlag ja nicht mal anger√ºhrt., text ids: [101, 61585, 13420, 56238, 27323, 10112, 57674, 136, 14050, 11471, 13538, 11250, 15826, 12122, 61585, 144, 23389, 25425, 10307, 22768, 10112, 136, 51732, 13289, 11230, 10726, 15189, 66655, 20913, 10106, 15826, 22981, 61585, 10166, 35320, 10307, 22768, 10112, 22762, 10304, 55260, 10237, 61512, 11280, 119, 10236, 61585, 10790, 10714, 64766, 15797, 12724, 28099, 51429, 10201, 10726, 15189, 46464, 12369, 30525, 119, 102], original labels: 1, label ids: [[1]]
06/29/2021 08:29:44 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: @USER ......sag doch bitte einfach genau, WEN und WAS du ansprichst!, text ids: [101, 137, 10808, 24093, 119, 119, 119, 119, 119, 119, 10148, 10240, 21131, 17684, 10216, 54068, 46871, 117, 160, 50655, 10130, 160, 38025, 10168, 11744, 101319, 42008, 10123, 106, 102], original labels: 0, label ids: [[0]]
06/29/2021 08:29:46 - INFO - data_utils.preprocess_bert -   there are nearly 141 batches in an epoch
06/29/2021 08:29:49 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=128, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=128, out_features=2, bias=True)
  )
)
-----------------------------------------------------------------------------------------

06/29/2021 08:29:49 - INFO - __main__ -   the model has 98,690 trainable parameters
06/29/2021 08:29:49 - INFO - __main__ -   üåã  starting training..
06/29/2021 08:30:00 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:30:00 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:30:00 - INFO - __main__ -   Epoch: 0001 | Time: 0m_10s | train_loss: 0.615 | val_loss: 0.612
06/29/2021 08:30:00 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6687211093990755, 'f1': 0.6673278704549193, 'precision': 0.7063574932524281, 'recall': 0.7214762972047194}
06/29/2021 08:30:00 - INFO - __main__ -   	--Found new best val f1
06/29/2021 08:30:01 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 08:30:11 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:30:11 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:30:11 - INFO - __main__ -   Epoch: 0002 | Time: 0m_10s | train_loss: 0.559 | val_loss: 0.702
06/29/2021 08:30:11 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.5963020030816641, 'f1': 0.596024822290645, 'precision': 0.6803976646838511, 'recall': 0.6731350699877363}
06/29/2021 08:30:11 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 08:30:22 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:30:22 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:30:22 - INFO - __main__ -   Epoch: 0003 | Time: 0m_10s | train_loss: 0.566 | val_loss: 0.607
06/29/2021 08:30:22 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6825885978428351, 'f1': 0.6807688634192933, 'precision': 0.7154500146584579, 'recall': 0.7330845350361568}
06/29/2021 08:30:22 - INFO - __main__ -   	--Found new best val f1
06/29/2021 08:30:29 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 08:30:40 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:30:40 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:30:40 - INFO - __main__ -   Epoch: 0004 | Time: 0m_10s | train_loss: 0.543 | val_loss: 0.600
06/29/2021 08:30:40 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6825885978428351, 'f1': 0.6802925084175084, 'precision': 0.7111405758246883, 'recall': 0.729801877616611}
06/29/2021 08:30:40 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 08:30:51 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:30:51 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:30:51 - INFO - __main__ -   Epoch: 0005 | Time: 0m_10s | train_loss: 0.532 | val_loss: 0.526
06/29/2021 08:30:51 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7457627118644068, 'f1': 0.7333547476226403, 'precision': 0.7307440751000307, 'recall': 0.7536262528016239}
06/29/2021 08:30:51 - INFO - __main__ -   	--Found new best val f1
06/29/2021 08:30:57 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 08:31:08 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:31:08 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:31:08 - INFO - __main__ -   Epoch: 0006 | Time: 0m_10s | train_loss: 0.502 | val_loss: 0.820
06/29/2021 08:31:08 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.5963020030816641, 'f1': 0.5952555509007122, 'precision': 0.6985104075321918, 'recall': 0.6818888231065251}
06/29/2021 08:31:08 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 08:31:19 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:31:19 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:31:19 - INFO - __main__ -   Epoch: 0007 | Time: 0m_10s | train_loss: 0.520 | val_loss: 0.549
06/29/2021 08:31:19 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7473035439137135, 'f1': 0.7369092347241448, 'precision': 0.7362302914476828, 'recall': 0.761359791939781}
06/29/2021 08:31:19 - INFO - __main__ -   	--Found new best val f1
06/29/2021 08:31:26 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 08:31:37 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:31:37 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:31:37 - INFO - __main__ -   Epoch: 0008 | Time: 0m_10s | train_loss: 0.524 | val_loss: 0.480
06/29/2021 08:31:37 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7704160246533128, 'f1': 0.7424088650923669, 'precision': 0.7444569771189171, 'recall': 0.740585486531061}
06/29/2021 08:31:37 - INFO - __main__ -   	--Found new best val f1
06/29/2021 08:31:47 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 08:31:57 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:31:57 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:31:57 - INFO - __main__ -   Epoch: 0009 | Time: 0m_10s | train_loss: 0.503 | val_loss: 0.466
06/29/2021 08:31:57 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.773497688751926, 'f1': 0.7309840766755866, 'precision': 0.7554832371361906, 'recall': 0.7199433331923711}
06/29/2021 08:31:57 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 08:32:08 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:32:08 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:32:08 - INFO - __main__ -   Epoch: 0010 | Time: 0m_10s | train_loss: 0.509 | val_loss: 0.603
06/29/2021 08:32:08 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7195685670261941, 'f1': 0.714905674950279, 'precision': 0.7305635011441647, 'recall': 0.7556508225144839}
06/29/2021 08:32:08 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 08:32:19 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:32:19 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:32:19 - INFO - __main__ -   Epoch: 0011 | Time: 0m_10s | train_loss: 0.516 | val_loss: 0.479
06/29/2021 08:32:19 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.773497688751926, 'f1': 0.7502519653295707, 'precision': 0.7480958804607243, 'recall': 0.7527699073878293}
06/29/2021 08:32:19 - INFO - __main__ -   	--Found new best val f1
06/29/2021 08:32:25 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 08:32:36 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:32:36 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:32:36 - INFO - __main__ -   Epoch: 0012 | Time: 0m_10s | train_loss: 0.479 | val_loss: 0.643
06/29/2021 08:32:36 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6949152542372882, 'f1': 0.6916287507919139, 'precision': 0.715580755617113, 'recall': 0.7369592337294372}
06/29/2021 08:32:36 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 08:32:47 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:32:47 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:32:47 - INFO - __main__ -   Epoch: 0013 | Time: 0m_11s | train_loss: 0.515 | val_loss: 0.467
06/29/2021 08:32:47 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7719568567026194, 'f1': 0.7237980216241087, 'precision': 0.7585184609807881, 'recall': 0.7111155749143655}
06/29/2021 08:32:47 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 08:32:58 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:32:58 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:32:58 - INFO - __main__ -   Epoch: 0014 | Time: 0m_11s | train_loss: 0.477 | val_loss: 0.540
06/29/2021 08:32:58 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7380585516178737, 'f1': 0.7265756656555443, 'precision': 0.7254237288135593, 'recall': 0.7488793504461454}
06/29/2021 08:32:58 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 08:33:10 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:33:10 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:33:10 - INFO - __main__ -   Epoch: 0015 | Time: 0m_11s | train_loss: 0.501 | val_loss: 0.506
06/29/2021 08:33:10 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7473035439137135, 'f1': 0.7302904984897322, 'precision': 0.7256485849056604, 'recall': 0.7427580665623545}
06/29/2021 08:33:10 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 08:33:21 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:33:21 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:33:21 - INFO - __main__ -   Epoch: 0016 | Time: 0m_11s | train_loss: 0.470 | val_loss: 0.553
06/29/2021 08:33:21 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7411402157164869, 'f1': 0.7297924225301851, 'precision': 0.7285310734463277, 'recall': 0.7523100181841249}
06/29/2021 08:33:21 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 08:33:33 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:33:33 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:33:33 - INFO - __main__ -   Epoch: 0017 | Time: 0m_11s | train_loss: 0.466 | val_loss: 0.472
06/29/2021 08:33:33 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7812018489984591, 'f1': 0.7366252086238825, 'precision': 0.7691872008960391, 'recall': 0.723596016408001}
06/29/2021 08:33:33 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 08:33:44 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:33:44 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:33:44 - INFO - __main__ -   Epoch: 0018 | Time: 0m_11s | train_loss: 0.472 | val_loss: 0.472
06/29/2021 08:33:44 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7842835130970724, 'f1': 0.7353797763280523, 'precision': 0.7799060402684563, 'recall': 0.7204613693068889}
06/29/2021 08:33:44 - INFO - __main__ -   	current patience value: 7/10
06/29/2021 08:33:56 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:33:56 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:33:56 - INFO - __main__ -   Epoch: 0019 | Time: 0m_11s | train_loss: 0.465 | val_loss: 0.522
06/29/2021 08:33:56 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7411402157164869, 'f1': 0.725481902229742, 'precision': 0.7214071389603305, 'recall': 0.7402736076457902}
06/29/2021 08:33:56 - INFO - __main__ -   	current patience value: 8/10
06/29/2021 08:34:07 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:34:07 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:34:07 - INFO - __main__ -   Epoch: 0020 | Time: 0m_11s | train_loss: 0.461 | val_loss: 0.474
06/29/2021 08:34:07 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7719568567026194, 'f1': 0.7395270636728495, 'precision': 0.7472640982691234, 'recall': 0.7340941768511862}
06/29/2021 08:34:07 - INFO - __main__ -   	current patience value: 9/10
06/29/2021 08:34:19 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:34:19 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:34:19 - INFO - __main__ -   Epoch: 0021 | Time: 0m_11s | train_loss: 0.474 | val_loss: 0.539
06/29/2021 08:34:19 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7550077041602465, 'f1': 0.7304204710215916, 'precision': 0.7280813280410154, 'recall': 0.7332801200998011}
06/29/2021 08:34:19 - INFO - __main__ -   	current patience value: 10/10
06/29/2021 08:34:19 - INFO - __main__ -   	--STOPPING EARLY
06/29/2021 08:34:19 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/GermEval2021/models/cv_fold_A_monotask/bert-base-multilingual-cased/trg_fc128_lr0.0005_frozen
06/29/2021 08:34:19 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/GermEval2021/models/cv_fold_A_monotask/bert-base-multilingual-cased/trg_fc128_lr0.0005_frozen
06/29/2021 08:34:23 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:34:23 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:34:23 - INFO - __main__ -   best_val_loss: 0.479
06/29/2021 08:34:23 - INFO - __main__ -   üî• best validation metrics üî• {'acc': 0.773497688751926, 'f1': 0.7502519653295707, 'precision': 0.7480958804607243, 'recall': 0.7527699073878293}
