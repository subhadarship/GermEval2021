06/29/2021 08:58:19 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

06/29/2021 08:58:19 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	train_data_dir: ../data/cross_validation/fold_A
	dev_data_dir: ../data/cross_validation/fold_A
	test_data_dir: None
	label_col_names: Sub3_FactClaiming
	eval_label_col_names: Sub3_FactClaiming
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 128
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_cv/cv_fold_A_monotask/bert-base-multilingual-cased/trg_fc128_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/GermEval2021/models/cv_fold_A_monotask/bert-base-multilingual-cased/trg_fc128_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

06/29/2021 08:58:20 - INFO - __main__ -   device: cuda
06/29/2021 08:58:20 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
06/29/2021 08:58:20 - WARNING - data_utils.bert_data -   trimming sentence 38 of length 2491 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 08:58:21 - WARNING - data_utils.bert_data -   trimming sentence 252 of length 752 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 08:58:21 - WARNING - data_utils.bert_data -   trimming sentence 332 of length 1645 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 08:58:21 - WARNING - data_utils.bert_data -   trimming sentence 1735 of length 2626 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 08:58:22 - WARNING - data_utils.bert_data -   trimming sentence 2479 of length 516 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 08:58:22 - WARNING - data_utils.bert_data -   trimming sentence 110 of length 1550 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 08:58:22 - INFO - data_utils.preprocess_bert -   num train samples: 2595
06/29/2021 08:58:22 - INFO - data_utils.preprocess_bert -   num val samples: 649
06/29/2021 08:58:22 - INFO - data_utils.preprocess_bert -   num test samples: None
06/29/2021 08:58:22 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
06/29/2021 08:58:22 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
06/29/2021 08:58:23 - INFO - data_utils.preprocess_bert -   train OOV: 505 (0.39%) out of 130793 running tokens are OOV
06/29/2021 08:58:23 - INFO - data_utils.preprocess_bert -   val OOV: 112 (0.34%) out of 32806 running tokens are OOV
06/29/2021 08:58:23 - INFO - data_utils.preprocess_bert -   look at some train samples üëÄ
06/29/2021 08:58:23 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: Es sollte doch hei√üen Sie wissen doch. Wissen ist Macht. Nichts wissen macht nix.Nun den quasseln kann Jeder. Handeln ist angesagt., text ids: [101, 10912, 17799, 21131, 10261, 10116, 20284, 11583, 16512, 10917, 21131, 119, 77783, 10298, 42601, 119, 52397, 10107, 16512, 10917, 26433, 10414, 10686, 119, 34289, 10140, 14517, 49235, 10115, 12382, 105818, 119, 41077, 10115, 10298, 110576, 50804, 119, 102], original labels: 0, label ids: [[0]]
06/29/2021 08:58:23 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: Das ist doch wieder eine l√§cherliches Gequatsche,wo nix bei rauskommt., text ids: [101, 10672, 10298, 21131, 12426, 10359, 180, 105623, 37179, 144, 10112, 32973, 41290, 10112, 117, 12796, 10414, 10686, 10492, 11859, 106239, 45011, 119, 102], original labels: 0, label ids: [[0]]
06/29/2021 08:58:23 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Der Hank geht mir derma√üen auf die Eier., text ids: [101, 10445, 42342, 21952, 36077, 10118, 10369, 20284, 10329, 10128, 35278, 10165, 119, 102], original labels: 0, label ids: [[0]]
06/29/2021 08:58:23 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: Verfassungsschonendere Variante? Seit wann hat unsere Verfassung G√ºltigkeit f√ºr Tote? Wir haben noch nicht mal Tierrecht in unserer Verfassung von rechten f√ºr Tote ganz zu Schweigen. Die Verfassung wird durch Spahn seinen Vorschlag ja nicht mal anger√ºhrt., text ids: [101, 61585, 13420, 56238, 27323, 10112, 57674, 136, 14050, 11471, 13538, 11250, 15826, 12122, 61585, 144, 23389, 25425, 10307, 22768, 10112, 136, 51732, 13289, 11230, 10726, 15189, 66655, 20913, 10106, 15826, 22981, 61585, 10166, 35320, 10307, 22768, 10112, 22762, 10304, 55260, 10237, 61512, 11280, 119, 10236, 61585, 10790, 10714, 64766, 15797, 12724, 28099, 51429, 10201, 10726, 15189, 46464, 12369, 30525, 119, 102], original labels: 1, label ids: [[1]]
06/29/2021 08:58:23 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: @USER ......sag doch bitte einfach genau, WEN und WAS du ansprichst!, text ids: [101, 137, 10808, 24093, 119, 119, 119, 119, 119, 119, 10148, 10240, 21131, 17684, 10216, 54068, 46871, 117, 160, 50655, 10130, 160, 38025, 10168, 11744, 101319, 42008, 10123, 106, 102], original labels: 0, label ids: [[0]]
06/29/2021 08:58:24 - INFO - data_utils.preprocess_bert -   there are nearly 141 batches in an epoch
06/29/2021 08:58:28 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=128, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=128, out_features=2, bias=True)
  )
)
-----------------------------------------------------------------------------------------

06/29/2021 08:58:28 - INFO - __main__ -   the model has 98,690 trainable parameters
06/29/2021 08:58:28 - INFO - __main__ -   üåã  starting training..
06/29/2021 08:58:39 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:58:39 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:58:39 - INFO - __main__ -   Epoch: 0001 | Time: 0m_11s | train_loss: 0.634 | val_loss: 0.527
06/29/2021 08:58:39 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7303543913713405, 'f1': 0.7119615526052168, 'precision': 0.7078463203463203, 'recall': 0.7233422844335433}
06/29/2021 08:58:39 - INFO - __main__ -   	--Found new best val f1
06/29/2021 08:58:40 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 08:58:52 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:58:52 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:58:52 - INFO - __main__ -   Epoch: 0002 | Time: 0m_11s | train_loss: 0.569 | val_loss: 0.681
06/29/2021 08:58:52 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6486902927580893, 'f1': 0.6478869217589949, 'precision': 0.6940046379592979, 'recall': 0.7051951621770203}
06/29/2021 08:58:52 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 08:59:03 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:59:03 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:59:03 - INFO - __main__ -   Epoch: 0003 | Time: 0m_11s | train_loss: 0.597 | val_loss: 0.666
06/29/2021 08:59:03 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6533127889060092, 'f1': 0.6526662813349603, 'precision': 0.7013152610441766, 'recall': 0.7119824924937624}
06/29/2021 08:59:03 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 08:59:15 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:59:15 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:59:15 - INFO - __main__ -   Epoch: 0004 | Time: 0m_11s | train_loss: 0.561 | val_loss: 0.562
06/29/2021 08:59:15 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7519260400616333, 'f1': 0.729202787561195, 'precision': 0.72570293398533, 'recall': 0.7342263289212163}
06/29/2021 08:59:15 - INFO - __main__ -   	--Found new best val f1
06/29/2021 08:59:24 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 08:59:35 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:59:35 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:59:35 - INFO - __main__ -   Epoch: 0005 | Time: 0m_11s | train_loss: 0.528 | val_loss: 0.555
06/29/2021 08:59:35 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7565485362095532, 'f1': 0.7426154618473896, 'precision': 0.7383108186793991, 'recall': 0.7596153846153846}
06/29/2021 08:59:35 - INFO - __main__ -   	--Found new best val f1
06/29/2021 08:59:45 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 08:59:57 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 08:59:57 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 08:59:57 - INFO - __main__ -   Epoch: 0006 | Time: 0m_11s | train_loss: 0.507 | val_loss: 0.832
06/29/2021 08:59:57 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.613251155624037, 'f1': 0.6128835245163391, 'precision': 0.7034081823027719, 'recall': 0.6936450712563962}
06/29/2021 08:59:57 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 09:00:08 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:00:08 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:00:08 - INFO - __main__ -   Epoch: 0007 | Time: 0m_11s | train_loss: 0.520 | val_loss: 0.585
06/29/2021 09:00:08 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.74884437596302, 'f1': 0.7365868112878204, 'precision': 0.7338652277623885, 'recall': 0.7570569205396034}
06/29/2021 09:00:08 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 09:00:20 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:00:20 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:00:20 - INFO - __main__ -   Epoch: 0008 | Time: 0m_11s | train_loss: 0.520 | val_loss: 0.498
06/29/2021 09:00:20 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7642526964560863, 'f1': 0.737265734765318, 'precision': 0.7375291375291375, 'recall': 0.737006808474648}
06/29/2021 09:00:20 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 09:00:31 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:00:31 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:00:31 - INFO - __main__ -   Epoch: 0009 | Time: 0m_11s | train_loss: 0.507 | val_loss: 0.505
06/29/2021 09:00:31 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7611710323574731, 'f1': 0.7431291287150454, 'precision': 0.7381172471374046, 'recall': 0.7532720852539434}
06/29/2021 09:00:31 - INFO - __main__ -   	--Found new best val f1
06/29/2021 09:00:38 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 09:00:49 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:00:49 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:00:49 - INFO - __main__ -   Epoch: 0010 | Time: 0m_11s | train_loss: 0.505 | val_loss: 0.549
06/29/2021 09:00:49 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7580893682588598, 'f1': 0.7374412809828977, 'precision': 0.7331547943270996, 'recall': 0.7443703218167209}
06/29/2021 09:00:49 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 09:01:01 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:01:01 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:01:01 - INFO - __main__ -   Epoch: 0011 | Time: 0m_11s | train_loss: 0.522 | val_loss: 0.614
06/29/2021 09:01:01 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6348228043143297, 'f1': 0.6348089319420207, 'precision': 0.7027882599580713, 'recall': 0.7045291157440691}
06/29/2021 09:01:01 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 09:01:12 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:01:12 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:01:12 - INFO - __main__ -   Epoch: 0012 | Time: 0m_11s | train_loss: 0.493 | val_loss: 0.664
06/29/2021 09:01:12 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7318952234206472, 'f1': 0.7241131632952214, 'precision': 0.7292580982236154, 'recall': 0.7551486446483697}
06/29/2021 09:01:12 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 09:01:24 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:01:24 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:01:24 - INFO - __main__ -   Epoch: 0013 | Time: 0m_11s | train_loss: 0.530 | val_loss: 0.483
06/29/2021 09:01:24 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7781201848998459, 'f1': 0.7426305353602115, 'precision': 0.756620830150242, 'recall': 0.7343901974880535}
06/29/2021 09:01:24 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 09:01:36 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:01:36 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:01:36 - INFO - __main__ -   Epoch: 0014 | Time: 0m_11s | train_loss: 0.482 | val_loss: 0.579
06/29/2021 09:01:36 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6718027734976888, 'f1': 0.6698431577665207, 'precision': 0.7036304886858392, 'recall': 0.7205300883833045}
06/29/2021 09:01:36 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 09:01:47 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:01:47 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:01:47 - INFO - __main__ -   Epoch: 0015 | Time: 0m_11s | train_loss: 0.509 | val_loss: 0.517
06/29/2021 09:01:47 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7565485362095532, 'f1': 0.7307195378151261, 'precision': 0.7293358665469654, 'recall': 0.7322599061191695}
06/29/2021 09:01:47 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 09:01:59 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:01:59 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:01:59 - INFO - __main__ -   Epoch: 0016 | Time: 0m_11s | train_loss: 0.477 | val_loss: 0.579
06/29/2021 09:01:59 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7565485362095532, 'f1': 0.7397252624525352, 'precision': 0.7347563978801789, 'recall': 0.7519558506364443}
06/29/2021 09:01:59 - INFO - __main__ -   	current patience value: 7/10
06/29/2021 09:02:11 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:02:11 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:02:11 - INFO - __main__ -   Epoch: 0017 | Time: 0m_11s | train_loss: 0.478 | val_loss: 0.500
06/29/2021 09:02:11 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7627118644067796, 'f1': 0.7391642482827736, 'precision': 0.7365518735556289, 'recall': 0.7424038990146742}
06/29/2021 09:02:11 - INFO - __main__ -   	current patience value: 8/10
06/29/2021 09:02:22 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:02:22 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:02:22 - INFO - __main__ -   Epoch: 0018 | Time: 0m_11s | train_loss: 0.479 | val_loss: 0.526
06/29/2021 09:02:22 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7580893682588598, 'f1': 0.6829171140051968, 'precision': 0.7690210162277201, 'recall': 0.6710576394468643}
06/29/2021 09:02:22 - INFO - __main__ -   	current patience value: 9/10
06/29/2021 09:02:34 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:02:34 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:02:34 - INFO - __main__ -   Epoch: 0019 | Time: 0m_11s | train_loss: 0.474 | val_loss: 0.619
06/29/2021 09:02:34 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7519260400616333, 'f1': 0.7375287932338098, 'precision': 0.7333022496794499, 'recall': 0.7539222734384912}
06/29/2021 09:02:34 - INFO - __main__ -   	current patience value: 10/10
06/29/2021 09:02:34 - INFO - __main__ -   	--STOPPING EARLY
06/29/2021 09:02:34 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/GermEval2021/models/cv_fold_A_monotask/bert-base-multilingual-cased/trg_fc128_lr0.005_frozen
06/29/2021 09:02:34 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/GermEval2021/models/cv_fold_A_monotask/bert-base-multilingual-cased/trg_fc128_lr0.005_frozen
06/29/2021 09:02:38 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 09:02:38 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 09:02:38 - INFO - __main__ -   best_val_loss: 0.505
06/29/2021 09:02:38 - INFO - __main__ -   üî• best validation metrics üî• {'acc': 0.7611710323574731, 'f1': 0.7431291287150454, 'precision': 0.7381172471374046, 'recall': 0.7532720852539434}
