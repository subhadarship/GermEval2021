06/29/2021 12:01:08 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

06/29/2021 12:01:08 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	train_data_dir: ../data/cross_validation/fold_A
	dev_data_dir: ../data/cross_validation/fold_A
	test_data_dir: None
	label_col_names: Sub1_Toxic,Sub2_Engaging,Sub3_FactClaiming
	eval_label_col_names: Sub3_FactClaiming
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 256
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_cv/cv_fold_A_multitask/bert-base-multilingual-cased/trg_fc256_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/GermEval2021/models/cv_fold_A_multitask/bert-base-multilingual-cased/trg_fc256_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

06/29/2021 12:01:09 - INFO - __main__ -   device: cuda
06/29/2021 12:01:09 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
06/29/2021 12:01:09 - WARNING - data_utils.bert_data -   trimming sentence 38 of length 2491 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 12:01:09 - WARNING - data_utils.bert_data -   trimming sentence 252 of length 752 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 12:01:09 - WARNING - data_utils.bert_data -   trimming sentence 332 of length 1645 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 12:01:10 - WARNING - data_utils.bert_data -   trimming sentence 1735 of length 2626 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 12:01:10 - WARNING - data_utils.bert_data -   trimming sentence 2479 of length 516 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 12:01:10 - WARNING - data_utils.bert_data -   trimming sentence 110 of length 1550 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 12:01:11 - INFO - data_utils.preprocess_bert -   num train samples: 2595
06/29/2021 12:01:11 - INFO - data_utils.preprocess_bert -   num val samples: 649
06/29/2021 12:01:11 - INFO - data_utils.preprocess_bert -   num test samples: None
06/29/2021 12:01:11 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
06/29/2021 12:01:11 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
06/29/2021 12:01:11 - INFO - data_utils.preprocess_bert -   train OOV: 505 (0.39%) out of 130793 running tokens are OOV
06/29/2021 12:01:11 - INFO - data_utils.preprocess_bert -   val OOV: 112 (0.34%) out of 32806 running tokens are OOV
06/29/2021 12:01:11 - INFO - data_utils.preprocess_bert -   look at some train samples üëÄ
06/29/2021 12:01:11 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: Es sollte doch hei√üen Sie wissen doch. Wissen ist Macht. Nichts wissen macht nix.Nun den quasseln kann Jeder. Handeln ist angesagt., text ids: [101, 10912, 17799, 21131, 10261, 10116, 20284, 11583, 16512, 10917, 21131, 119, 77783, 10298, 42601, 119, 52397, 10107, 16512, 10917, 26433, 10414, 10686, 119, 34289, 10140, 14517, 49235, 10115, 12382, 105818, 119, 41077, 10115, 10298, 110576, 50804, 119, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 12:01:11 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: Das ist doch wieder eine l√§cherliches Gequatsche,wo nix bei rauskommt., text ids: [101, 10672, 10298, 21131, 12426, 10359, 180, 105623, 37179, 144, 10112, 32973, 41290, 10112, 117, 12796, 10414, 10686, 10492, 11859, 106239, 45011, 119, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 12:01:11 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Der Hank geht mir derma√üen auf die Eier., text ids: [101, 10445, 42342, 21952, 36077, 10118, 10369, 20284, 10329, 10128, 35278, 10165, 119, 102], original labels: 1 0 0, label ids: [[1], [0], [0]]
06/29/2021 12:01:11 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: Verfassungsschonendere Variante? Seit wann hat unsere Verfassung G√ºltigkeit f√ºr Tote? Wir haben noch nicht mal Tierrecht in unserer Verfassung von rechten f√ºr Tote ganz zu Schweigen. Die Verfassung wird durch Spahn seinen Vorschlag ja nicht mal anger√ºhrt., text ids: [101, 61585, 13420, 56238, 27323, 10112, 57674, 136, 14050, 11471, 13538, 11250, 15826, 12122, 61585, 144, 23389, 25425, 10307, 22768, 10112, 136, 51732, 13289, 11230, 10726, 15189, 66655, 20913, 10106, 15826, 22981, 61585, 10166, 35320, 10307, 22768, 10112, 22762, 10304, 55260, 10237, 61512, 11280, 119, 10236, 61585, 10790, 10714, 64766, 15797, 12724, 28099, 51429, 10201, 10726, 15189, 46464, 12369, 30525, 119, 102], original labels: 0 1 1, label ids: [[0], [1], [1]]
06/29/2021 12:01:11 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: @USER ......sag doch bitte einfach genau, WEN und WAS du ansprichst!, text ids: [101, 137, 10808, 24093, 119, 119, 119, 119, 119, 119, 10148, 10240, 21131, 17684, 10216, 54068, 46871, 117, 160, 50655, 10130, 160, 38025, 10168, 11744, 101319, 42008, 10123, 106, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 12:01:13 - INFO - data_utils.preprocess_bert -   there are nearly 141 batches in an epoch
06/29/2021 12:01:16 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=256, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=256, out_features=2, bias=True)
    (1): Linear(in_features=256, out_features=2, bias=True)
    (2): Linear(in_features=256, out_features=2, bias=True)
  )
)
-----------------------------------------------------------------------------------------

06/29/2021 12:01:16 - INFO - __main__ -   the model has 198,406 trainable parameters
06/29/2021 12:01:16 - INFO - __main__ -   üåã  starting training..
06/29/2021 12:01:28 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:01:28 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:01:28 - INFO - __main__ -   Epoch: 0001 | Time: 0m_11s | train_loss: 1.879 | val_loss: 2.214
06/29/2021 12:01:28 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6302003081664098, 'f1': 0.6300518725417545, 'precision': 0.6894089177221707, 'recall': 0.6944591280077812}
06/29/2021 12:01:28 - INFO - __main__ -   	--Found new best val f1
06/29/2021 12:01:29 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 12:01:40 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:01:40 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:01:41 - INFO - __main__ -   Epoch: 0002 | Time: 0m_11s | train_loss: 1.738 | val_loss: 2.045
06/29/2021 12:01:41 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6363636363636364, 'f1': 0.6361139620633293, 'precision': 0.6925565846776667, 'recall': 0.6991320252040428}
06/29/2021 12:01:41 - INFO - __main__ -   	--Found new best val f1
06/29/2021 12:01:48 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 12:01:59 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:01:59 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:01:59 - INFO - __main__ -   Epoch: 0003 | Time: 0m_11s | train_loss: 1.695 | val_loss: 1.919
06/29/2021 12:01:59 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7041602465331279, 'f1': 0.6989970433068584, 'precision': 0.713947483755407, 'recall': 0.737403264684738}
06/29/2021 12:01:59 - INFO - __main__ -   	--Found new best val f1
06/29/2021 12:02:07 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 12:02:18 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:02:18 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:02:18 - INFO - __main__ -   Epoch: 0004 | Time: 0m_11s | train_loss: 1.651 | val_loss: 1.723
06/29/2021 12:02:18 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7596302003081664, 'f1': 0.7466315641954794, 'precision': 0.7426117901903141, 'recall': 0.7652344906330613}
06/29/2021 12:02:18 - INFO - __main__ -   	--Found new best val f1
06/29/2021 12:02:25 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 12:02:37 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:02:37 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:02:37 - INFO - __main__ -   Epoch: 0005 | Time: 0m_11s | train_loss: 1.622 | val_loss: 1.581
06/29/2021 12:02:37 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.773497688751926, 'f1': 0.7507660958501507, 'precision': 0.7482066071280906, 'recall': 0.753864126527678}
06/29/2021 12:02:37 - INFO - __main__ -   	--Found new best val f1
06/29/2021 12:02:44 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 12:02:56 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:02:56 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:02:56 - INFO - __main__ -   Epoch: 0006 | Time: 0m_11s | train_loss: 1.572 | val_loss: 1.907
06/29/2021 12:02:56 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6594761171032357, 'f1': 0.6591524259685695, 'precision': 0.7147302904564315, 'recall': 0.7232207045291157}
06/29/2021 12:02:56 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 12:03:07 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:03:07 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:03:07 - INFO - __main__ -   Epoch: 0007 | Time: 0m_11s | train_loss: 1.582 | val_loss: 1.620
06/29/2021 12:03:07 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7503852080123267, 'f1': 0.7352861200072511, 'precision': 0.7308910061569636, 'recall': 0.7505656108597285}
06/29/2021 12:03:07 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 12:03:19 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:03:19 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:03:19 - INFO - __main__ -   Epoch: 0008 | Time: 0m_11s | train_loss: 1.586 | val_loss: 1.572
06/29/2021 12:03:19 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7704160246533128, 'f1': 0.7354317998385795, 'precision': 0.7463758205689278, 'recall': 0.7285490759927263}
06/29/2021 12:03:19 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 12:03:31 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:03:31 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:03:31 - INFO - __main__ -   Epoch: 0009 | Time: 0m_11s | train_loss: 1.549 | val_loss: 1.512
06/29/2021 12:03:31 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7781201848998459, 'f1': 0.7345241341696209, 'precision': 0.7633608815426998, 'recall': 0.7223537869497187}
06/29/2021 12:03:31 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 12:03:43 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:03:43 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:03:43 - INFO - __main__ -   Epoch: 0010 | Time: 0m_11s | train_loss: 1.539 | val_loss: 1.575
06/29/2021 12:03:43 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7580893682588598, 'f1': 0.7424349281220219, 'precision': 0.7375230148470246, 'recall': 0.7564067323550556}
06/29/2021 12:03:43 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 12:03:55 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:03:55 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:03:55 - INFO - __main__ -   Epoch: 0011 | Time: 0m_11s | train_loss: 1.552 | val_loss: 1.631
06/29/2021 12:03:55 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7519260400616333, 'f1': 0.7387023769333685, 'precision': 0.7350715983535278, 'recall': 0.757204930858037}
06/29/2021 12:03:55 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 12:04:06 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:04:06 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:04:06 - INFO - __main__ -   Epoch: 0012 | Time: 0m_11s | train_loss: 1.511 | val_loss: 1.678
06/29/2021 12:04:06 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7226502311248074, 'f1': 0.7163130901037418, 'precision': 0.7259353208307207, 'recall': 0.7514219562735232}
06/29/2021 12:04:06 - INFO - __main__ -   	current patience value: 7/10
06/29/2021 12:04:18 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:04:18 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:04:18 - INFO - __main__ -   Epoch: 0013 | Time: 0m_11s | train_loss: 1.541 | val_loss: 1.541
06/29/2021 12:04:18 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7642526964560863, 'f1': 0.7360926175459859, 'precision': 0.7374796852279532, 'recall': 0.7348183701949508}
06/29/2021 12:04:18 - INFO - __main__ -   	current patience value: 8/10
06/29/2021 12:04:30 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:04:30 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:04:30 - INFO - __main__ -   Epoch: 0014 | Time: 0m_11s | train_loss: 1.490 | val_loss: 1.702
06/29/2021 12:04:30 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7457627118644068, 'f1': 0.736449619385849, 'precision': 0.7374425960860534, 'recall': 0.7634742250602613}
06/29/2021 12:04:30 - INFO - __main__ -   	current patience value: 9/10
06/29/2021 12:04:42 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:04:42 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:04:42 - INFO - __main__ -   Epoch: 0015 | Time: 0m_11s | train_loss: 1.518 | val_loss: 1.533
06/29/2021 12:04:42 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7565485362095532, 'f1': 0.7397252624525352, 'precision': 0.7347563978801789, 'recall': 0.7519558506364443}
06/29/2021 12:04:42 - INFO - __main__ -   	current patience value: 10/10
06/29/2021 12:04:42 - INFO - __main__ -   	--STOPPING EARLY
06/29/2021 12:04:42 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/GermEval2021/models/cv_fold_A_multitask/bert-base-multilingual-cased/trg_fc256_lr0.0005_frozen
06/29/2021 12:04:42 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/GermEval2021/models/cv_fold_A_multitask/bert-base-multilingual-cased/trg_fc256_lr0.0005_frozen
06/29/2021 12:04:46 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:04:46 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:04:46 - INFO - __main__ -   best_val_loss: 1.581
06/29/2021 12:04:46 - INFO - __main__ -   üî• best validation metrics üî• {'acc': 0.773497688751926, 'f1': 0.7507660958501507, 'precision': 0.7482066071280906, 'recall': 0.753864126527678}
