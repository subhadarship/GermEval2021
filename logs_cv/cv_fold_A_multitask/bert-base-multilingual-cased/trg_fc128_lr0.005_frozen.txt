06/29/2021 11:27:46 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

06/29/2021 11:27:46 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	train_data_dir: ../data/cross_validation/fold_A
	dev_data_dir: ../data/cross_validation/fold_A
	test_data_dir: None
	label_col_names: Sub1_Toxic,Sub2_Engaging,Sub3_FactClaiming
	eval_label_col_names: Sub3_FactClaiming
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 128
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_cv/cv_fold_A_multitask/bert-base-multilingual-cased/trg_fc128_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/GermEval2021/models/cv_fold_A_multitask/bert-base-multilingual-cased/trg_fc128_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

06/29/2021 11:27:47 - INFO - __main__ -   device: cuda
06/29/2021 11:27:47 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
06/29/2021 11:27:47 - WARNING - data_utils.bert_data -   trimming sentence 38 of length 2491 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 11:27:47 - WARNING - data_utils.bert_data -   trimming sentence 252 of length 752 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 11:27:47 - WARNING - data_utils.bert_data -   trimming sentence 332 of length 1645 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 11:27:48 - WARNING - data_utils.bert_data -   trimming sentence 1735 of length 2626 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 11:27:48 - WARNING - data_utils.bert_data -   trimming sentence 2479 of length 516 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 11:27:48 - WARNING - data_utils.bert_data -   trimming sentence 110 of length 1550 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 11:27:49 - INFO - data_utils.preprocess_bert -   num train samples: 2595
06/29/2021 11:27:49 - INFO - data_utils.preprocess_bert -   num val samples: 649
06/29/2021 11:27:49 - INFO - data_utils.preprocess_bert -   num test samples: None
06/29/2021 11:27:49 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
06/29/2021 11:27:49 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
06/29/2021 11:27:49 - INFO - data_utils.preprocess_bert -   train OOV: 505 (0.39%) out of 130793 running tokens are OOV
06/29/2021 11:27:49 - INFO - data_utils.preprocess_bert -   val OOV: 112 (0.34%) out of 32806 running tokens are OOV
06/29/2021 11:27:49 - INFO - data_utils.preprocess_bert -   look at some train samples üëÄ
06/29/2021 11:27:49 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: Es sollte doch hei√üen Sie wissen doch. Wissen ist Macht. Nichts wissen macht nix.Nun den quasseln kann Jeder. Handeln ist angesagt., text ids: [101, 10912, 17799, 21131, 10261, 10116, 20284, 11583, 16512, 10917, 21131, 119, 77783, 10298, 42601, 119, 52397, 10107, 16512, 10917, 26433, 10414, 10686, 119, 34289, 10140, 14517, 49235, 10115, 12382, 105818, 119, 41077, 10115, 10298, 110576, 50804, 119, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 11:27:49 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: Das ist doch wieder eine l√§cherliches Gequatsche,wo nix bei rauskommt., text ids: [101, 10672, 10298, 21131, 12426, 10359, 180, 105623, 37179, 144, 10112, 32973, 41290, 10112, 117, 12796, 10414, 10686, 10492, 11859, 106239, 45011, 119, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 11:27:49 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Der Hank geht mir derma√üen auf die Eier., text ids: [101, 10445, 42342, 21952, 36077, 10118, 10369, 20284, 10329, 10128, 35278, 10165, 119, 102], original labels: 1 0 0, label ids: [[1], [0], [0]]
06/29/2021 11:27:49 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: Verfassungsschonendere Variante? Seit wann hat unsere Verfassung G√ºltigkeit f√ºr Tote? Wir haben noch nicht mal Tierrecht in unserer Verfassung von rechten f√ºr Tote ganz zu Schweigen. Die Verfassung wird durch Spahn seinen Vorschlag ja nicht mal anger√ºhrt., text ids: [101, 61585, 13420, 56238, 27323, 10112, 57674, 136, 14050, 11471, 13538, 11250, 15826, 12122, 61585, 144, 23389, 25425, 10307, 22768, 10112, 136, 51732, 13289, 11230, 10726, 15189, 66655, 20913, 10106, 15826, 22981, 61585, 10166, 35320, 10307, 22768, 10112, 22762, 10304, 55260, 10237, 61512, 11280, 119, 10236, 61585, 10790, 10714, 64766, 15797, 12724, 28099, 51429, 10201, 10726, 15189, 46464, 12369, 30525, 119, 102], original labels: 0 1 1, label ids: [[0], [1], [1]]
06/29/2021 11:27:49 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: @USER ......sag doch bitte einfach genau, WEN und WAS du ansprichst!, text ids: [101, 137, 10808, 24093, 119, 119, 119, 119, 119, 119, 10148, 10240, 21131, 17684, 10216, 54068, 46871, 117, 160, 50655, 10130, 160, 38025, 10168, 11744, 101319, 42008, 10123, 106, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 11:27:51 - INFO - data_utils.preprocess_bert -   there are nearly 141 batches in an epoch
06/29/2021 11:27:54 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=128, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=128, out_features=2, bias=True)
    (1): Linear(in_features=128, out_features=2, bias=True)
    (2): Linear(in_features=128, out_features=2, bias=True)
  )
)
-----------------------------------------------------------------------------------------

06/29/2021 11:27:54 - INFO - __main__ -   the model has 99,206 trainable parameters
06/29/2021 11:27:54 - INFO - __main__ -   üåã  starting training..
06/29/2021 11:28:06 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:28:06 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:28:06 - INFO - __main__ -   Epoch: 0001 | Time: 0m_11s | train_loss: 1.867 | val_loss: 1.871
06/29/2021 11:28:06 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7272727272727273, 'f1': 0.691865096928388, 'precision': 0.695174864817722, 'recall': 0.6892734807798029}
06/29/2021 11:28:06 - INFO - __main__ -   	--Found new best val f1
06/29/2021 11:28:07 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 11:28:18 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:28:18 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:28:19 - INFO - __main__ -   Epoch: 0002 | Time: 0m_11s | train_loss: 1.725 | val_loss: 2.913
06/29/2021 11:28:19 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.5531587057010786, 'f1': 0.5508028792912514, 'precision': 0.6619600725952813, 'recall': 0.6415190087537531}
06/29/2021 11:28:19 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 11:28:30 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:28:30 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:28:30 - INFO - __main__ -   Epoch: 0003 | Time: 0m_11s | train_loss: 1.760 | val_loss: 2.087
06/29/2021 11:28:30 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.5901386748844376, 'f1': 0.5888021875416833, 'precision': 0.6959151472650771, 'recall': 0.6772159259102635}
06/29/2021 11:28:30 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 11:28:42 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:28:42 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:28:42 - INFO - __main__ -   Epoch: 0004 | Time: 0m_11s | train_loss: 1.675 | val_loss: 1.892
06/29/2021 11:28:42 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7457627118644068, 'f1': 0.710678824721378, 'precision': 0.7163986532881477, 'recall': 0.7065748297881338}
06/29/2021 11:28:42 - INFO - __main__ -   	--Found new best val f1
06/29/2021 11:28:52 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 11:29:03 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:29:03 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:29:03 - INFO - __main__ -   Epoch: 0005 | Time: 0m_11s | train_loss: 1.665 | val_loss: 1.609
06/29/2021 11:29:03 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7550077041602465, 'f1': 0.7161971501728543, 'precision': 0.7283253334564084, 'recall': 0.709207299023132}
06/29/2021 11:29:03 - INFO - __main__ -   	--Found new best val f1
06/29/2021 11:29:10 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 11:29:22 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:29:22 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:29:22 - INFO - __main__ -   Epoch: 0006 | Time: 0m_11s | train_loss: 1.613 | val_loss: 2.010
06/29/2021 11:29:22 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6810477657935285, 'f1': 0.6792934778716486, 'precision': 0.7146008608882801, 'recall': 0.7319163107370914}
06/29/2021 11:29:22 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 11:29:33 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:29:33 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:29:33 - INFO - __main__ -   Epoch: 0007 | Time: 0m_11s | train_loss: 1.597 | val_loss: 1.629
06/29/2021 11:29:33 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7596302003081664, 'f1': 0.7219182597231378, 'precision': 0.7338049229353577, 'recall': 0.7149004102000254}
06/29/2021 11:29:33 - INFO - __main__ -   	--Found new best val f1
06/29/2021 11:29:40 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 11:29:52 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:29:52 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:29:52 - INFO - __main__ -   Epoch: 0008 | Time: 0m_11s | train_loss: 1.631 | val_loss: 1.647
06/29/2021 11:29:52 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7750385208012327, 'f1': 0.7417527908599337, 'precision': 0.7514401897661809, 'recall': 0.7353364063094685}
06/29/2021 11:29:52 - INFO - __main__ -   	--Found new best val f1
06/29/2021 11:29:59 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 11:30:11 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:30:11 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:30:11 - INFO - __main__ -   Epoch: 0009 | Time: 0m_11s | train_loss: 1.583 | val_loss: 1.603
06/29/2021 11:30:11 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7457627118644068, 'f1': 0.6706100565670361, 'precision': 0.742467043314501, 'recall': 0.6606176259144924}
06/29/2021 11:30:11 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 11:30:22 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:30:22 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:30:22 - INFO - __main__ -   Epoch: 0010 | Time: 0m_11s | train_loss: 1.570 | val_loss: 1.551
06/29/2021 11:30:22 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7627118644067796, 'f1': 0.7193915367683392, 'precision': 0.740728372273765, 'recall': 0.7095773248192159}
06/29/2021 11:30:22 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 11:30:34 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:30:34 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:30:34 - INFO - __main__ -   Epoch: 0011 | Time: 0m_11s | train_loss: 1.575 | val_loss: 1.745
06/29/2021 11:30:34 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7750385208012327, 'f1': 0.7231358111266948, 'precision': 0.7679892674201154, 'recall': 0.7090751469531018}
06/29/2021 11:30:34 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 11:30:46 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:30:46 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:30:46 - INFO - __main__ -   Epoch: 0012 | Time: 0m_11s | train_loss: 1.553 | val_loss: 1.814
06/29/2021 11:30:46 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6733436055469953, 'f1': 0.6713139034878165, 'precision': 0.7044975815259791, 'recall': 0.7216983126823698}
06/29/2021 11:30:46 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 11:30:58 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:30:58 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:30:58 - INFO - __main__ -   Epoch: 0013 | Time: 0m_11s | train_loss: 1.599 | val_loss: 1.516
06/29/2021 11:30:58 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7596302003081664, 'f1': 0.6959566596194503, 'precision': 0.7553199328008489, 'recall': 0.6831680551444157}
06/29/2021 11:30:58 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 11:31:09 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:31:09 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:31:10 - INFO - __main__ -   Epoch: 0014 | Time: 0m_11s | train_loss: 1.524 | val_loss: 1.558
06/29/2021 11:31:10 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.74884437596302, 'f1': 0.7058996877927812, 'precision': 0.7218135512911632, 'recall': 0.6979690869877786}
06/29/2021 11:31:10 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 11:31:21 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:31:21 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:31:21 - INFO - __main__ -   Epoch: 0015 | Time: 0m_11s | train_loss: 1.576 | val_loss: 1.770
06/29/2021 11:31:21 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6887519260400616, 'f1': 0.6810267639902676, 'precision': 0.6899918323931089, 'recall': 0.7114961728760519}
06/29/2021 11:31:21 - INFO - __main__ -   	current patience value: 7/10
06/29/2021 11:31:33 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:31:33 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:31:33 - INFO - __main__ -   Epoch: 0016 | Time: 0m_11s | train_loss: 1.499 | val_loss: 1.649
06/29/2021 11:31:33 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7642526964560863, 'f1': 0.7269066916757655, 'precision': 0.7395578529561084, 'recall': 0.7194993022370703}
06/29/2021 11:31:33 - INFO - __main__ -   	current patience value: 8/10
06/29/2021 11:31:45 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:31:45 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:31:45 - INFO - __main__ -   Epoch: 0017 | Time: 0m_11s | train_loss: 1.531 | val_loss: 1.634
06/29/2021 11:31:45 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7596302003081664, 'f1': 0.685554202797724, 'precision': 0.7706709813763043, 'recall': 0.6733200828857784}
06/29/2021 11:31:45 - INFO - __main__ -   	current patience value: 9/10
06/29/2021 11:31:57 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:31:57 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:31:57 - INFO - __main__ -   Epoch: 0018 | Time: 0m_11s | train_loss: 1.488 | val_loss: 1.705
06/29/2021 11:31:57 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7534668721109399, 'f1': 0.690355208855173, 'precision': 0.7433131575154921, 'recall': 0.6784951579481541}
06/29/2021 11:31:57 - INFO - __main__ -   	current patience value: 10/10
06/29/2021 11:31:57 - INFO - __main__ -   	--STOPPING EARLY
06/29/2021 11:31:57 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/GermEval2021/models/cv_fold_A_multitask/bert-base-multilingual-cased/trg_fc128_lr0.005_frozen
06/29/2021 11:31:57 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/GermEval2021/models/cv_fold_A_multitask/bert-base-multilingual-cased/trg_fc128_lr0.005_frozen
06/29/2021 11:32:01 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:32:01 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:32:01 - INFO - __main__ -   best_val_loss: 1.647
06/29/2021 11:32:01 - INFO - __main__ -   üî• best validation metrics üî• {'acc': 0.7750385208012327, 'f1': 0.7417527908599337, 'precision': 0.7514401897661809, 'recall': 0.7353364063094685}
