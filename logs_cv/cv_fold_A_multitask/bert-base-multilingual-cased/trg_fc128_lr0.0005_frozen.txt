06/29/2021 10:55:45 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

06/29/2021 10:55:45 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	train_data_dir: ../data/cross_validation/fold_A
	dev_data_dir: ../data/cross_validation/fold_A
	test_data_dir: None
	label_col_names: Sub1_Toxic,Sub2_Engaging,Sub3_FactClaiming
	eval_label_col_names: Sub3_FactClaiming
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 128
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_cv/cv_fold_A_multitask/bert-base-multilingual-cased/trg_fc128_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/GermEval2021/models/cv_fold_A_multitask/bert-base-multilingual-cased/trg_fc128_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

06/29/2021 10:55:45 - INFO - __main__ -   device: cuda
06/29/2021 10:55:45 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
06/29/2021 10:55:46 - WARNING - data_utils.bert_data -   trimming sentence 38 of length 2491 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:55:46 - WARNING - data_utils.bert_data -   trimming sentence 252 of length 752 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:55:46 - WARNING - data_utils.bert_data -   trimming sentence 332 of length 1645 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:55:47 - WARNING - data_utils.bert_data -   trimming sentence 1735 of length 2626 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:55:47 - WARNING - data_utils.bert_data -   trimming sentence 2479 of length 516 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:55:47 - WARNING - data_utils.bert_data -   trimming sentence 110 of length 1550 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:55:47 - INFO - data_utils.preprocess_bert -   num train samples: 2595
06/29/2021 10:55:47 - INFO - data_utils.preprocess_bert -   num val samples: 649
06/29/2021 10:55:47 - INFO - data_utils.preprocess_bert -   num test samples: None
06/29/2021 10:55:47 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
06/29/2021 10:55:47 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
06/29/2021 10:55:48 - INFO - data_utils.preprocess_bert -   train OOV: 505 (0.39%) out of 130793 running tokens are OOV
06/29/2021 10:55:48 - INFO - data_utils.preprocess_bert -   val OOV: 112 (0.34%) out of 32806 running tokens are OOV
06/29/2021 10:55:48 - INFO - data_utils.preprocess_bert -   look at some train samples üëÄ
06/29/2021 10:55:48 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: Es sollte doch hei√üen Sie wissen doch. Wissen ist Macht. Nichts wissen macht nix.Nun den quasseln kann Jeder. Handeln ist angesagt., text ids: [101, 10912, 17799, 21131, 10261, 10116, 20284, 11583, 16512, 10917, 21131, 119, 77783, 10298, 42601, 119, 52397, 10107, 16512, 10917, 26433, 10414, 10686, 119, 34289, 10140, 14517, 49235, 10115, 12382, 105818, 119, 41077, 10115, 10298, 110576, 50804, 119, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 10:55:48 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: Das ist doch wieder eine l√§cherliches Gequatsche,wo nix bei rauskommt., text ids: [101, 10672, 10298, 21131, 12426, 10359, 180, 105623, 37179, 144, 10112, 32973, 41290, 10112, 117, 12796, 10414, 10686, 10492, 11859, 106239, 45011, 119, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 10:55:48 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Der Hank geht mir derma√üen auf die Eier., text ids: [101, 10445, 42342, 21952, 36077, 10118, 10369, 20284, 10329, 10128, 35278, 10165, 119, 102], original labels: 1 0 0, label ids: [[1], [0], [0]]
06/29/2021 10:55:48 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: Verfassungsschonendere Variante? Seit wann hat unsere Verfassung G√ºltigkeit f√ºr Tote? Wir haben noch nicht mal Tierrecht in unserer Verfassung von rechten f√ºr Tote ganz zu Schweigen. Die Verfassung wird durch Spahn seinen Vorschlag ja nicht mal anger√ºhrt., text ids: [101, 61585, 13420, 56238, 27323, 10112, 57674, 136, 14050, 11471, 13538, 11250, 15826, 12122, 61585, 144, 23389, 25425, 10307, 22768, 10112, 136, 51732, 13289, 11230, 10726, 15189, 66655, 20913, 10106, 15826, 22981, 61585, 10166, 35320, 10307, 22768, 10112, 22762, 10304, 55260, 10237, 61512, 11280, 119, 10236, 61585, 10790, 10714, 64766, 15797, 12724, 28099, 51429, 10201, 10726, 15189, 46464, 12369, 30525, 119, 102], original labels: 0 1 1, label ids: [[0], [1], [1]]
06/29/2021 10:55:48 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: @USER ......sag doch bitte einfach genau, WEN und WAS du ansprichst!, text ids: [101, 137, 10808, 24093, 119, 119, 119, 119, 119, 119, 10148, 10240, 21131, 17684, 10216, 54068, 46871, 117, 160, 50655, 10130, 160, 38025, 10168, 11744, 101319, 42008, 10123, 106, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 10:55:50 - INFO - data_utils.preprocess_bert -   there are nearly 141 batches in an epoch
06/29/2021 10:55:53 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=128, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=128, out_features=2, bias=True)
    (1): Linear(in_features=128, out_features=2, bias=True)
    (2): Linear(in_features=128, out_features=2, bias=True)
  )
)
-----------------------------------------------------------------------------------------

06/29/2021 10:55:53 - INFO - __main__ -   the model has 99,206 trainable parameters
06/29/2021 10:55:53 - INFO - __main__ -   üåã  starting training..
06/29/2021 10:56:05 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:56:05 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:56:05 - INFO - __main__ -   Epoch: 0001 | Time: 0m_11s | train_loss: 1.914 | val_loss: 2.438
06/29/2021 10:56:05 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.39599383667180277, 'f1': 0.34505200288332816, 'precision': 0.6548029556650246, 'recall': 0.5398676364866579}
06/29/2021 10:56:05 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:56:05 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:56:17 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:56:17 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:56:17 - INFO - __main__ -   Epoch: 0002 | Time: 0m_11s | train_loss: 1.795 | val_loss: 1.981
06/29/2021 10:56:17 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6548536209553159, 'f1': 0.6538468864887517, 'precision': 0.6973103530534351, 'recall': 0.709868059373282}
06/29/2021 10:56:17 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:56:32 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:56:43 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:56:43 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:56:43 - INFO - __main__ -   Epoch: 0003 | Time: 0m_11s | train_loss: 1.697 | val_loss: 1.935
06/29/2021 10:56:43 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6918335901386748, 'f1': 0.6889020976339303, 'precision': 0.7150877869959483, 'recall': 0.7357170042711549}
06/29/2021 10:56:43 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:56:50 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:57:01 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:57:01 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:57:01 - INFO - __main__ -   Epoch: 0004 | Time: 0m_11s | train_loss: 1.664 | val_loss: 1.741
06/29/2021 10:57:01 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7596302003081664, 'f1': 0.7462556390977444, 'precision': 0.7420275113823501, 'recall': 0.7641402714932126}
06/29/2021 10:57:01 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:57:08 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:57:20 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:57:20 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:57:20 - INFO - __main__ -   Epoch: 0005 | Time: 0m_11s | train_loss: 1.635 | val_loss: 1.600
06/29/2021 10:57:20 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.765793528505393, 'f1': 0.7414884696016771, 'precision': 0.7396132252027449, 'recall': 0.7436461284729564}
06/29/2021 10:57:20 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 10:57:31 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:57:31 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:57:31 - INFO - __main__ -   Epoch: 0006 | Time: 0m_11s | train_loss: 1.592 | val_loss: 1.923
06/29/2021 10:57:31 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6486902927580893, 'f1': 0.6484490819933858, 'precision': 0.7058261260708663, 'recall': 0.7128546961559605}
06/29/2021 10:57:31 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 10:57:43 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:57:43 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:57:43 - INFO - __main__ -   Epoch: 0007 | Time: 0m_11s | train_loss: 1.601 | val_loss: 1.634
06/29/2021 10:57:43 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7457627118644068, 'f1': 0.729745076810091, 'precision': 0.7253347014560735, 'recall': 0.7437782805429864}
06/29/2021 10:57:43 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 10:57:55 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:57:55 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:57:55 - INFO - __main__ -   Epoch: 0008 | Time: 0m_11s | train_loss: 1.600 | val_loss: 1.575
06/29/2021 10:57:55 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7688751926040062, 'f1': 0.7409746908193022, 'precision': 0.7426963883828099, 'recall': 0.7394172622319957}
06/29/2021 10:57:55 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 10:58:07 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:58:07 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:58:07 - INFO - __main__ -   Epoch: 0009 | Time: 0m_11s | train_loss: 1.569 | val_loss: 1.501
06/29/2021 10:58:07 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.773497688751926, 'f1': 0.7317616296233815, 'precision': 0.7548327726585735, 'recall': 0.7210375523322197}
06/29/2021 10:58:07 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 10:58:18 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:58:18 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:58:18 - INFO - __main__ -   Epoch: 0010 | Time: 0m_11s | train_loss: 1.547 | val_loss: 1.580
06/29/2021 10:58:18 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7457627118644068, 'f1': 0.7329797499981299, 'precision': 0.7300805255350711, 'recall': 0.7525320336617753}
06/29/2021 10:58:18 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 10:58:30 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:58:30 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:58:30 - INFO - __main__ -   Epoch: 0011 | Time: 0m_11s | train_loss: 1.565 | val_loss: 1.583
06/29/2021 10:58:30 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.765793528505393, 'f1': 0.749609113245477, 'precision': 0.7443458302961051, 'recall': 0.7622478538503827}
06/29/2021 10:58:30 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:58:37 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:58:49 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:58:49 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:58:49 - INFO - __main__ -   Epoch: 0012 | Time: 0m_11s | train_loss: 1.528 | val_loss: 1.646
06/29/2021 10:58:49 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7195685670261941, 'f1': 0.7136894258178363, 'precision': 0.7249643502234053, 'recall': 0.7501797268152408}
06/29/2021 10:58:49 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 10:59:01 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:59:01 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:59:01 - INFO - __main__ -   Epoch: 0013 | Time: 0m_11s | train_loss: 1.551 | val_loss: 1.561
06/29/2021 10:59:01 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7704160246533128, 'f1': 0.7483952885098235, 'precision': 0.7451573849878934, 'recall': 0.7526218970693956}
06/29/2021 10:59:01 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 10:59:13 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:59:13 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:59:13 - INFO - __main__ -   Epoch: 0014 | Time: 0m_11s | train_loss: 1.511 | val_loss: 1.677
06/29/2021 10:59:13 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7457627118644068, 'f1': 0.7354730656074226, 'precision': 0.735062082139446, 'recall': 0.7601915676407156}
06/29/2021 10:59:13 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 10:59:24 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:59:24 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:59:24 - INFO - __main__ -   Epoch: 0015 | Time: 0m_11s | train_loss: 1.539 | val_loss: 1.518
06/29/2021 10:59:24 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7580893682588598, 'f1': 0.7411551016779078, 'precision': 0.7361333017732805, 'recall': 0.7531240749355098}
06/29/2021 10:59:24 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 10:59:36 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:59:36 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:59:36 - INFO - __main__ -   Epoch: 0016 | Time: 0m_11s | train_loss: 1.493 | val_loss: 1.587
06/29/2021 10:59:36 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7565485362095532, 'f1': 0.7418222651922572, 'precision': 0.7372135842880524, 'recall': 0.7574269463356873}
06/29/2021 10:59:36 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 10:59:48 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:59:48 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:59:48 - INFO - __main__ -   Epoch: 0017 | Time: 0m_11s | train_loss: 1.504 | val_loss: 1.518
06/29/2021 10:59:48 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.773497688751926, 'f1': 0.7225987665628626, 'precision': 0.7641148964595859, 'recall': 0.7090011417938851}
06/29/2021 10:59:48 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 11:00:00 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:00:00 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:00:00 - INFO - __main__ -   Epoch: 0018 | Time: 0m_11s | train_loss: 1.477 | val_loss: 1.507
06/29/2021 11:00:00 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7827426810477658, 'f1': 0.7364501162097479, 'precision': 0.7737426535600977, 'recall': 0.7225758024273692}
06/29/2021 11:00:00 - INFO - __main__ -   	current patience value: 7/10
06/29/2021 11:00:12 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:00:12 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:00:12 - INFO - __main__ -   Epoch: 0019 | Time: 0m_11s | train_loss: 1.497 | val_loss: 1.572
06/29/2021 11:00:12 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7704160246533128, 'f1': 0.7498713156839667, 'precision': 0.7457560866651776, 'recall': 0.7559045544889416}
06/29/2021 11:00:12 - INFO - __main__ -   	--Found new best val f1
06/29/2021 11:00:19 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 11:00:30 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:00:30 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:00:30 - INFO - __main__ -   Epoch: 0020 | Time: 0m_11s | train_loss: 1.454 | val_loss: 1.514
06/29/2021 11:00:30 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7750385208012327, 'f1': 0.7417527908599337, 'precision': 0.7514401897661809, 'recall': 0.7353364063094685}
06/29/2021 11:00:30 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 11:00:42 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:00:42 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:00:42 - INFO - __main__ -   Epoch: 0021 | Time: 0m_11s | train_loss: 1.489 | val_loss: 1.630
06/29/2021 11:00:42 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7673343605546995, 'f1': 0.7514639682479298, 'precision': 0.7461580086580086, 'recall': 0.7645102972892968}
06/29/2021 11:00:42 - INFO - __main__ -   	--Found new best val f1
06/29/2021 11:00:49 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 11:01:00 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:01:00 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:01:00 - INFO - __main__ -   Epoch: 0022 | Time: 0m_11s | train_loss: 1.460 | val_loss: 1.577
06/29/2021 11:01:00 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7503852080123267, 'f1': 0.7413961038961039, 'precision': 0.7424900470503076, 'recall': 0.7691673362371547}
06/29/2021 11:01:00 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 11:01:12 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:01:12 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:01:12 - INFO - __main__ -   Epoch: 0023 | Time: 0m_11s | train_loss: 1.458 | val_loss: 1.497
06/29/2021 11:01:12 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.773497688751926, 'f1': 0.7198520019380699, 'precision': 0.7675811331133113, 'recall': 0.7057184843743393}
06/29/2021 11:01:12 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 11:01:24 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:01:24 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:01:24 - INFO - __main__ -   Epoch: 0024 | Time: 0m_11s | train_loss: 1.447 | val_loss: 1.539
06/29/2021 11:01:24 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7919876733436055, 'f1': 0.7676617139705277, 'precision': 0.7685774494987122, 'recall': 0.7667885989766143}
06/29/2021 11:01:24 - INFO - __main__ -   	--Found new best val f1
06/29/2021 11:01:31 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 11:01:42 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:01:42 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:01:42 - INFO - __main__ -   Epoch: 0025 | Time: 0m_11s | train_loss: 1.443 | val_loss: 1.531
06/29/2021 11:01:42 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.773497688751926, 'f1': 0.7497304571603955, 'precision': 0.7480049589532025, 'recall': 0.7516756882479807}
06/29/2021 11:01:42 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 11:01:54 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:01:54 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:01:54 - INFO - __main__ -   Epoch: 0026 | Time: 0m_11s | train_loss: 1.427 | val_loss: 1.535
06/29/2021 11:01:54 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7765793528505393, 'f1': 0.7498916963671107, 'precision': 0.7513578821315542, 'recall': 0.7485410411468685}
06/29/2021 11:01:54 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 11:02:06 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:02:06 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:02:06 - INFO - __main__ -   Epoch: 0027 | Time: 0m_11s | train_loss: 1.406 | val_loss: 1.594
06/29/2021 11:02:06 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7349768875192604, 'f1': 0.7254329004329004, 'precision': 0.7270367830542698, 'recall': 0.7520139975472576}
06/29/2021 11:02:06 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 11:02:18 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:02:18 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:02:18 - INFO - __main__ -   Epoch: 0028 | Time: 0m_11s | train_loss: 1.435 | val_loss: 1.606
06/29/2021 11:02:18 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7750385208012327, 'f1': 0.7541921759883781, 'precision': 0.7504031023573834, 'recall': 0.7594092273861378}
06/29/2021 11:02:18 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 11:02:30 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:02:30 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:02:30 - INFO - __main__ -   Epoch: 0029 | Time: 0m_11s | train_loss: 1.415 | val_loss: 1.565
06/29/2021 11:02:30 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7642526964560863, 'f1': 0.7489970955584035, 'precision': 0.7438790300466174, 'recall': 0.7632680678310144}
06/29/2021 11:02:30 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 11:02:41 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:02:41 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:02:41 - INFO - __main__ -   Epoch: 0030 | Time: 0m_11s | train_loss: 1.395 | val_loss: 1.556
06/29/2021 11:02:41 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.773497688751926, 'f1': 0.7512729263618942, 'precision': 0.748336937493564, 'recall': 0.7549583456675265}
06/29/2021 11:02:41 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 11:02:53 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:02:53 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:02:53 - INFO - __main__ -   Epoch: 0031 | Time: 0m_11s | train_loss: 1.389 | val_loss: 1.707
06/29/2021 11:02:53 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7395993836671803, 'f1': 0.7310058982942771, 'precision': 0.7338031651829872, 'recall': 0.7598955470038482}
06/29/2021 11:02:53 - INFO - __main__ -   	current patience value: 7/10
06/29/2021 11:03:05 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:03:05 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:03:05 - INFO - __main__ -   Epoch: 0032 | Time: 0m_11s | train_loss: 1.389 | val_loss: 1.519
06/29/2021 11:03:05 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.773497688751926, 'f1': 0.7285870755750273, 'precision': 0.7576502388735227, 'recall': 0.7166606757728253}
06/29/2021 11:03:05 - INFO - __main__ -   	current patience value: 8/10
06/29/2021 11:03:17 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:03:17 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:03:17 - INFO - __main__ -   Epoch: 0033 | Time: 0m_11s | train_loss: 1.370 | val_loss: 1.567
06/29/2021 11:03:17 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7812018489984591, 'f1': 0.7448390812235586, 'precision': 0.7613569736626093, 'recall': 0.7356324269463357}
06/29/2021 11:03:17 - INFO - __main__ -   	current patience value: 9/10
06/29/2021 11:03:28 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:03:28 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:03:28 - INFO - __main__ -   Epoch: 0034 | Time: 0m_11s | train_loss: 1.378 | val_loss: 1.550
06/29/2021 11:03:28 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7673343605546995, 'f1': 0.7141227709370743, 'precision': 0.7564667961374548, 'recall': 0.7010455871780776}
06/29/2021 11:03:28 - INFO - __main__ -   	current patience value: 10/10
06/29/2021 11:03:28 - INFO - __main__ -   	--STOPPING EARLY
06/29/2021 11:03:28 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/GermEval2021/models/cv_fold_A_multitask/bert-base-multilingual-cased/trg_fc128_lr0.0005_frozen
06/29/2021 11:03:29 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/GermEval2021/models/cv_fold_A_multitask/bert-base-multilingual-cased/trg_fc128_lr0.0005_frozen
06/29/2021 11:03:33 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 11:03:33 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 11:03:33 - INFO - __main__ -   best_val_loss: 1.539
06/29/2021 11:03:33 - INFO - __main__ -   üî• best validation metrics üî• {'acc': 0.7919876733436055, 'f1': 0.7676617139705277, 'precision': 0.7685774494987122, 'recall': 0.7667885989766143}
