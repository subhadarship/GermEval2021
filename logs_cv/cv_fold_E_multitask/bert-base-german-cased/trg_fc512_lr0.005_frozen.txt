06/29/2021 12:16:30 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

06/29/2021 12:16:30 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	train_data_dir: ../data/cross_validation/fold_E
	dev_data_dir: ../data/cross_validation/fold_E
	test_data_dir: None
	label_col_names: Sub1_Toxic,Sub2_Engaging,Sub3_FactClaiming
	eval_label_col_names: Sub3_FactClaiming
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-german-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 512
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_cv/cv_fold_E_multitask/bert-base-german-cased/trg_fc512_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/GermEval2021/models/cv_fold_E_multitask/bert-base-german-cased/trg_fc512_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-german-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

06/29/2021 12:16:31 - INFO - __main__ -   device: cuda
06/29/2021 12:16:31 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-german-cased
06/29/2021 12:16:32 - WARNING - data_utils.bert_data -   trimming sentence 110 of length 1522 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 12:16:32 - WARNING - data_utils.bert_data -   trimming sentence 688 of length 2871 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 12:16:32 - WARNING - data_utils.bert_data -   trimming sentence 1546 of length 1615 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 12:16:32 - WARNING - data_utils.bert_data -   trimming sentence 1896 of length 2708 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 12:16:33 - WARNING - data_utils.bert_data -   trimming sentence 22 of length 667 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 12:16:33 - INFO - data_utils.preprocess_bert -   num train samples: 2595
06/29/2021 12:16:33 - INFO - data_utils.preprocess_bert -   num val samples: 649
06/29/2021 12:16:33 - INFO - data_utils.preprocess_bert -   num test samples: None
06/29/2021 12:16:33 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
06/29/2021 12:16:33 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
06/29/2021 12:16:34 - INFO - data_utils.preprocess_bert -   train OOV: 535 (0.46%) out of 115087 running tokens are OOV
06/29/2021 12:16:34 - INFO - data_utils.preprocess_bert -   val OOV: 156 (0.50%) out of 31041 running tokens are OOV
06/29/2021 12:16:34 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
06/29/2021 12:16:34 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: @USER beim korrupten Erdogan oder hier?, text ids: [3, 26991, 960, 8242, 785, 6059, 16261, 47, 17671, 309, 702, 26972, 4], original labels: 0 0 1, label ids: [[0], [0], [1]]
06/29/2021 12:16:34 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: Mietpreisbremse? 2 StÃ¼hle und ein Tisch in die Butze, wird als mÃ¶bliert vermietet. Mietpreisbremse greift nicht. Ich habe eine zeitlang Mietangebote Ã¼ber 15 Euro kalt (wenn offensichtlich nicht modernisiert) zur Anzeige gebracht.... Habe die Anbieter auch darÃ¼ber informiert. Von Staatsanwalt und Wohnungsant nur Einstellungen gekommen. Is ja nicht so als hÃ¤tte ich mir irgend etwas erwartet... Aber irgend etwas will ich tun... Erbsen unter die Matratze... Etwas... HERR GOTT! Oft 20,- kalt in einer Stadt mit niederem Durchschnittseinkommen., text ids: [3, 5721, 3359, 20690, 26972, 99, 130, 6294, 42, 39, 7461, 50, 30, 17286, 416, 26918, 292, 153, 2480, 4601, 335, 1423, 3382, 26914, 5721, 3359, 20690, 10356, 149, 26914, 1671, 555, 155, 2527, 1941, 5721, 24231, 204, 659, 918, 19807, 26954, 557, 6587, 149, 20166, 321, 26955, 252, 13377, 4048, 26914, 26914, 26914, 26914, 9689, 26897, 30, 11760, 194, 2683, 10867, 26914, 1073, 5406, 42, 7926, 415, 356, 9207, 7, 3934, 26914, 1851, 3278, 149, 181, 153, 1807, 1169, 3667, 5337, 1835, 6303, 26914, 26914, 26914, 1882, 5337, 1835, 1279, 1169, 4013, 26914, 26914, 26914, 5697, 138, 267, 30, 3554, 24370, 26897, 26914, 26914, 26914, 15615, 26914, 26914, 26914, 84, 8242, 26938, 61, 26962, 26943, 26943, 26982, 13157, 148, 26918, 26935, 19807, 50, 225, 560, 114, 2702, 49, 15059, 9914, 26914, 4], original labels: 1 0 1, label ids: [[1], [0], [1]]
06/29/2021 12:16:34 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Ach so, ich trage auch keine Jeans, da bin ich sicher schon in den 80ern indoktriniert worden ...VOM ISLAM. ðŸ˜‚, text ids: [3, 5534, 181, 26918, 1169, 26031, 194, 668, 6095, 26902, 26918, 348, 4058, 1169, 2386, 764, 50, 86, 4029, 212, 2519, 493, 15146, 24357, 257, 671, 26914, 26914, 26914, 12965, 26929, 8699, 18112, 26929, 26914, 2, 4], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 12:16:34 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: @USER Sie meinen, so wie 1933? Intessant ðŸ¤”, text ids: [3, 26991, 960, 8242, 371, 9685, 26918, 181, 246, 5175, 26972, 12491, 19125, 4053, 2, 4], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 12:16:34 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: Jeder Motorrad fahrer sollte automatisch Organspender werden., text ids: [3, 8854, 13809, 5137, 6, 1547, 12494, 4774, 4780, 21748, 26900, 266, 26914, 4], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 12:16:36 - INFO - data_utils.preprocess_bert -   there are nearly 125 batches in an epoch
06/29/2021 12:16:38 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30000, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=512, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=512, out_features=2, bias=True)
    (1): Linear(in_features=512, out_features=2, bias=True)
    (2): Linear(in_features=512, out_features=2, bias=True)
  )
)
-----------------------------------------------------------------------------------------

06/29/2021 12:16:38 - INFO - __main__ -   the model has 396,806 trainable parameters
06/29/2021 12:16:38 - INFO - __main__ -   ðŸŒ‹  starting training..
06/29/2021 12:16:48 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:16:48 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:16:48 - INFO - __main__ -   Epoch: 0001 | Time: 0m_10s | train_loss: 1.858 | val_loss: 1.705
06/29/2021 12:16:48 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7627118644067796, 'f1': 0.7369786732352259, 'precision': 0.7355384003849452, 'recall': 0.7385780885780886}
06/29/2021 12:16:48 - INFO - __main__ -   	--Found new best val f1
06/29/2021 12:16:48 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 12:16:58 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:16:58 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:16:58 - INFO - __main__ -   Epoch: 0002 | Time: 0m_9s | train_loss: 1.563 | val_loss: 1.692
06/29/2021 12:16:58 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7796610169491526, 'f1': 0.7274750767152652, 'precision': 0.7746237000547345, 'recall': 0.7126456876456877}
06/29/2021 12:16:58 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 12:17:08 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:17:08 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:17:08 - INFO - __main__ -   Epoch: 0003 | Time: 0m_9s | train_loss: 1.494 | val_loss: 1.498
06/29/2021 12:17:08 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7812018489984591, 'f1': 0.743435412026726, 'precision': 0.761318407960199, 'recall': 0.7337412587412587}
06/29/2021 12:17:08 - INFO - __main__ -   	--Found new best val f1
06/29/2021 12:17:12 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 12:17:22 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:17:22 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:17:22 - INFO - __main__ -   Epoch: 0004 | Time: 0m_9s | train_loss: 1.428 | val_loss: 1.541
06/29/2021 12:17:22 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7642526964560863, 'f1': 0.7317203647416413, 'precision': 0.7372208354503081, 'recall': 0.7275641025641026}
06/29/2021 12:17:22 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 12:17:32 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:17:32 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:17:32 - INFO - __main__ -   Epoch: 0005 | Time: 0m_9s | train_loss: 1.374 | val_loss: 1.822
06/29/2021 12:17:32 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7719568567026194, 'f1': 0.7303243340371053, 'precision': 0.7513430127041743, 'recall': 0.7201048951048952}
06/29/2021 12:17:32 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 12:17:42 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:17:42 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:17:42 - INFO - __main__ -   Epoch: 0006 | Time: 0m_9s | train_loss: 1.370 | val_loss: 1.730
06/29/2021 12:17:42 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.674884437596302, 'f1': 0.6666504380509108, 'precision': 0.6761353923300473, 'recall': 0.6965034965034965}
06/29/2021 12:17:42 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 12:17:52 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:17:52 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:17:52 - INFO - __main__ -   Epoch: 0007 | Time: 0m_9s | train_loss: 1.300 | val_loss: 1.736
06/29/2021 12:17:52 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7781201848998459, 'f1': 0.7329157045199937, 'precision': 0.7635878520546556, 'recall': 0.7203379953379954}
06/29/2021 12:17:52 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 12:18:01 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:18:01 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:18:02 - INFO - __main__ -   Epoch: 0008 | Time: 0m_9s | train_loss: 1.301 | val_loss: 1.626
06/29/2021 12:18:02 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7180277349768875, 'f1': 0.7058599177268641, 'precision': 0.7058606902356903, 'recall': 0.728030303030303}
06/29/2021 12:18:02 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 12:18:11 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:18:11 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:18:11 - INFO - __main__ -   Epoch: 0009 | Time: 0m_9s | train_loss: 1.260 | val_loss: 1.683
06/29/2021 12:18:11 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7580893682588598, 'f1': 0.7247065180682202, 'precision': 0.7300525746095562, 'recall': 0.7206876456876457}
06/29/2021 12:18:11 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 12:18:21 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:18:21 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:18:21 - INFO - __main__ -   Epoch: 0010 | Time: 0m_9s | train_loss: 1.233 | val_loss: 1.697
06/29/2021 12:18:21 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7842835130970724, 'f1': 0.7251663641863278, 'precision': 0.7949256238003839, 'recall': 0.7083916083916084}
06/29/2021 12:18:21 - INFO - __main__ -   	current patience value: 7/10
06/29/2021 12:18:31 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:18:31 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:18:31 - INFO - __main__ -   Epoch: 0011 | Time: 0m_9s | train_loss: 1.154 | val_loss: 1.703
06/29/2021 12:18:31 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.785824345146379, 'f1': 0.7235649037651263, 'precision': 0.8046659779614325, 'recall': 0.7062354312354313}
06/29/2021 12:18:31 - INFO - __main__ -   	current patience value: 8/10
06/29/2021 12:18:41 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:18:41 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:18:41 - INFO - __main__ -   Epoch: 0012 | Time: 0m_10s | train_loss: 1.214 | val_loss: 1.894
06/29/2021 12:18:41 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7781201848998459, 'f1': 0.7251100077652539, 'precision': 0.7730335533553355, 'recall': 0.7103729603729604}
06/29/2021 12:18:41 - INFO - __main__ -   	current patience value: 9/10
06/29/2021 12:18:51 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:18:51 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:18:51 - INFO - __main__ -   Epoch: 0013 | Time: 0m_9s | train_loss: 1.150 | val_loss: 1.647
06/29/2021 12:18:51 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7704160246533128, 'f1': 0.7257152744095281, 'precision': 0.7515156409173354, 'recall': 0.7145104895104895}
06/29/2021 12:18:51 - INFO - __main__ -   	current patience value: 10/10
06/29/2021 12:18:51 - INFO - __main__ -   	--STOPPING EARLY
06/29/2021 12:18:51 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/GermEval2021/models/cv_fold_E_multitask/bert-base-german-cased/trg_fc512_lr0.005_frozen
06/29/2021 12:18:51 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/GermEval2021/models/cv_fold_E_multitask/bert-base-german-cased/trg_fc512_lr0.005_frozen
06/29/2021 12:18:55 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:18:55 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:18:55 - INFO - __main__ -   best_val_loss: 1.498
06/29/2021 12:18:55 - INFO - __main__ -   ðŸ”¥ best validation metrics ðŸ”¥ {'acc': 0.7812018489984591, 'f1': 0.743435412026726, 'precision': 0.761318407960199, 'recall': 0.7337412587412587}
