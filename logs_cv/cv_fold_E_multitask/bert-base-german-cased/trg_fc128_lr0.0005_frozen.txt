06/29/2021 10:35:43 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

06/29/2021 10:35:43 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	train_data_dir: ../data/cross_validation/fold_E
	dev_data_dir: ../data/cross_validation/fold_E
	test_data_dir: None
	label_col_names: Sub1_Toxic,Sub2_Engaging,Sub3_FactClaiming
	eval_label_col_names: Sub3_FactClaiming
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-german-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 128
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_cv/cv_fold_E_multitask/bert-base-german-cased/trg_fc128_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/GermEval2021/models/cv_fold_E_multitask/bert-base-german-cased/trg_fc128_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-german-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

06/29/2021 10:35:44 - INFO - __main__ -   device: cuda
06/29/2021 10:35:44 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-german-cased
06/29/2021 10:35:44 - WARNING - data_utils.bert_data -   trimming sentence 110 of length 1522 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:35:45 - WARNING - data_utils.bert_data -   trimming sentence 688 of length 2871 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:35:45 - WARNING - data_utils.bert_data -   trimming sentence 1546 of length 1615 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:35:45 - WARNING - data_utils.bert_data -   trimming sentence 1896 of length 2708 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:35:46 - WARNING - data_utils.bert_data -   trimming sentence 22 of length 667 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:35:46 - INFO - data_utils.preprocess_bert -   num train samples: 2595
06/29/2021 10:35:46 - INFO - data_utils.preprocess_bert -   num val samples: 649
06/29/2021 10:35:46 - INFO - data_utils.preprocess_bert -   num test samples: None
06/29/2021 10:35:46 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
06/29/2021 10:35:46 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
06/29/2021 10:35:46 - INFO - data_utils.preprocess_bert -   train OOV: 535 (0.46%) out of 115087 running tokens are OOV
06/29/2021 10:35:46 - INFO - data_utils.preprocess_bert -   val OOV: 156 (0.50%) out of 31041 running tokens are OOV
06/29/2021 10:35:46 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
06/29/2021 10:35:46 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: @USER beim korrupten Erdogan oder hier?, text ids: [3, 26991, 960, 8242, 785, 6059, 16261, 47, 17671, 309, 702, 26972, 4], original labels: 0 0 1, label ids: [[0], [0], [1]]
06/29/2021 10:35:46 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: Mietpreisbremse? 2 StÃ¼hle und ein Tisch in die Butze, wird als mÃ¶bliert vermietet. Mietpreisbremse greift nicht. Ich habe eine zeitlang Mietangebote Ã¼ber 15 Euro kalt (wenn offensichtlich nicht modernisiert) zur Anzeige gebracht.... Habe die Anbieter auch darÃ¼ber informiert. Von Staatsanwalt und Wohnungsant nur Einstellungen gekommen. Is ja nicht so als hÃ¤tte ich mir irgend etwas erwartet... Aber irgend etwas will ich tun... Erbsen unter die Matratze... Etwas... HERR GOTT! Oft 20,- kalt in einer Stadt mit niederem Durchschnittseinkommen., text ids: [3, 5721, 3359, 20690, 26972, 99, 130, 6294, 42, 39, 7461, 50, 30, 17286, 416, 26918, 292, 153, 2480, 4601, 335, 1423, 3382, 26914, 5721, 3359, 20690, 10356, 149, 26914, 1671, 555, 155, 2527, 1941, 5721, 24231, 204, 659, 918, 19807, 26954, 557, 6587, 149, 20166, 321, 26955, 252, 13377, 4048, 26914, 26914, 26914, 26914, 9689, 26897, 30, 11760, 194, 2683, 10867, 26914, 1073, 5406, 42, 7926, 415, 356, 9207, 7, 3934, 26914, 1851, 3278, 149, 181, 153, 1807, 1169, 3667, 5337, 1835, 6303, 26914, 26914, 26914, 1882, 5337, 1835, 1279, 1169, 4013, 26914, 26914, 26914, 5697, 138, 267, 30, 3554, 24370, 26897, 26914, 26914, 26914, 15615, 26914, 26914, 26914, 84, 8242, 26938, 61, 26962, 26943, 26943, 26982, 13157, 148, 26918, 26935, 19807, 50, 225, 560, 114, 2702, 49, 15059, 9914, 26914, 4], original labels: 1 0 1, label ids: [[1], [0], [1]]
06/29/2021 10:35:46 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Ach so, ich trage auch keine Jeans, da bin ich sicher schon in den 80ern indoktriniert worden ...VOM ISLAM. ðŸ˜‚, text ids: [3, 5534, 181, 26918, 1169, 26031, 194, 668, 6095, 26902, 26918, 348, 4058, 1169, 2386, 764, 50, 86, 4029, 212, 2519, 493, 15146, 24357, 257, 671, 26914, 26914, 26914, 12965, 26929, 8699, 18112, 26929, 26914, 2, 4], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 10:35:46 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: @USER Sie meinen, so wie 1933? Intessant ðŸ¤”, text ids: [3, 26991, 960, 8242, 371, 9685, 26918, 181, 246, 5175, 26972, 12491, 19125, 4053, 2, 4], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 10:35:46 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: Jeder Motorrad fahrer sollte automatisch Organspender werden., text ids: [3, 8854, 13809, 5137, 6, 1547, 12494, 4774, 4780, 21748, 26900, 266, 26914, 4], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 10:35:48 - INFO - data_utils.preprocess_bert -   there are nearly 125 batches in an epoch
06/29/2021 10:35:51 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30000, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=128, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=128, out_features=2, bias=True)
    (1): Linear(in_features=128, out_features=2, bias=True)
    (2): Linear(in_features=128, out_features=2, bias=True)
  )
)
-----------------------------------------------------------------------------------------

06/29/2021 10:35:51 - INFO - __main__ -   the model has 99,206 trainable parameters
06/29/2021 10:35:51 - INFO - __main__ -   ðŸŒ‹  starting training..
06/29/2021 10:36:01 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:36:01 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:36:01 - INFO - __main__ -   Epoch: 0001 | Time: 0m_10s | train_loss: 1.696 | val_loss: 1.664
06/29/2021 10:36:01 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.6964560862865947, 'f1': 0.6860785165869911, 'precision': 0.690086379116802, 'recall': 0.7117132867132867}
06/29/2021 10:36:01 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:36:03 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:36:13 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:36:13 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:36:13 - INFO - __main__ -   Epoch: 0002 | Time: 0m_9s | train_loss: 1.514 | val_loss: 1.542
06/29/2021 10:36:13 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7611710323574731, 'f1': 0.7326428478407045, 'precision': 0.7334496074415429, 'recall': 0.7318764568764569}
06/29/2021 10:36:13 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:36:16 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:36:26 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:36:26 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:36:26 - INFO - __main__ -   Epoch: 0003 | Time: 0m_9s | train_loss: 1.495 | val_loss: 1.458
06/29/2021 10:36:26 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7704160246533128, 'f1': 0.7367799290646938, 'precision': 0.7449687794798078, 'recall': 0.7311188811188811}
06/29/2021 10:36:26 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:36:29 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:36:39 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:36:39 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:36:39 - INFO - __main__ -   Epoch: 0004 | Time: 0m_9s | train_loss: 1.416 | val_loss: 1.440
06/29/2021 10:36:39 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7873651771956857, 'f1': 0.7440442168316606, 'precision': 0.7759271934494385, 'recall': 0.7306526806526807}
06/29/2021 10:36:39 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:36:49 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:36:59 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:36:59 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:36:59 - INFO - __main__ -   Epoch: 0005 | Time: 0m_9s | train_loss: 1.347 | val_loss: 1.557
06/29/2021 10:36:59 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.773497688751926, 'f1': 0.7340319653416076, 'precision': 0.7519553072625699, 'recall': 0.7245920745920746}
06/29/2021 10:36:59 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 10:37:09 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:37:09 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:37:09 - INFO - __main__ -   Epoch: 0006 | Time: 0m_9s | train_loss: 1.366 | val_loss: 1.496
06/29/2021 10:37:09 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7781201848998459, 'f1': 0.7426305353602115, 'precision': 0.7556191443208566, 'recall': 0.7347319347319348}
06/29/2021 10:37:09 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 10:37:19 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:37:19 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:37:19 - INFO - __main__ -   Epoch: 0007 | Time: 0m_10s | train_loss: 1.312 | val_loss: 1.527
06/29/2021 10:37:19 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7611710323574731, 'f1': 0.7387828128205328, 'precision': 0.7350648025308705, 'recall': 0.744055944055944}
06/29/2021 10:37:19 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 10:37:29 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:37:29 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:37:29 - INFO - __main__ -   Epoch: 0008 | Time: 0m_10s | train_loss: 1.303 | val_loss: 1.575
06/29/2021 10:37:29 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7226502311248074, 'f1': 0.7119652050417185, 'precision': 0.7133295194508009, 'recall': 0.7370629370629371}
06/29/2021 10:37:29 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 10:37:39 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:37:39 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:37:39 - INFO - __main__ -   Epoch: 0009 | Time: 0m_9s | train_loss: 1.249 | val_loss: 1.462
06/29/2021 10:37:39 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7919876733436055, 'f1': 0.7529445602122733, 'precision': 0.7780346962245223, 'recall': 0.7407925407925408}
06/29/2021 10:37:39 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:37:42 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:37:52 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:37:52 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:37:52 - INFO - __main__ -   Epoch: 0010 | Time: 0m_9s | train_loss: 1.219 | val_loss: 1.487
06/29/2021 10:37:52 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7781201848998459, 'f1': 0.7312629399585922, 'precision': 0.7653651808502411, 'recall': 0.7181235431235431}
06/29/2021 10:37:52 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 10:38:02 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:38:02 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:38:02 - INFO - __main__ -   Epoch: 0011 | Time: 0m_9s | train_loss: 1.170 | val_loss: 1.519
06/29/2021 10:38:02 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7873651771956857, 'f1': 0.7365637574417018, 'precision': 0.7864205170517051, 'recall': 0.7206876456876457}
06/29/2021 10:38:02 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 10:38:12 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:38:12 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:38:12 - INFO - __main__ -   Epoch: 0012 | Time: 0m_10s | train_loss: 1.163 | val_loss: 1.556
06/29/2021 10:38:12 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7704160246533128, 'f1': 0.7399930629683504, 'precision': 0.7441198329945133, 'recall': 0.7366550116550117}
06/29/2021 10:38:12 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 10:38:22 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:38:22 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:38:22 - INFO - __main__ -   Epoch: 0013 | Time: 0m_9s | train_loss: 1.134 | val_loss: 1.488
06/29/2021 10:38:22 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7827426810477658, 'f1': 0.7412083110624686, 'precision': 0.7668639053254438, 'recall': 0.7293706293706294}
06/29/2021 10:38:22 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 10:38:32 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:38:32 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:38:32 - INFO - __main__ -   Epoch: 0014 | Time: 0m_9s | train_loss: 1.096 | val_loss: 1.537
06/29/2021 10:38:32 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7873651771956857, 'f1': 0.7440442168316606, 'precision': 0.7759271934494385, 'recall': 0.7306526806526807}
06/29/2021 10:38:32 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 10:38:42 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:38:42 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:38:42 - INFO - __main__ -   Epoch: 0015 | Time: 0m_10s | train_loss: 1.084 | val_loss: 1.501
06/29/2021 10:38:42 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7904468412942989, 'f1': 0.7485184172137126, 'precision': 0.7790797083228564, 'recall': 0.7351981351981351}
06/29/2021 10:38:42 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 10:38:52 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:38:52 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:38:52 - INFO - __main__ -   Epoch: 0016 | Time: 0m_9s | train_loss: 1.039 | val_loss: 1.594
06/29/2021 10:38:52 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7996918335901386, 'f1': 0.7526618823143132, 'precision': 0.8027179389416923, 'recall': 0.7355477855477855}
06/29/2021 10:38:52 - INFO - __main__ -   	current patience value: 7/10
06/29/2021 10:39:02 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:39:02 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:39:02 - INFO - __main__ -   Epoch: 0017 | Time: 0m_9s | train_loss: 1.006 | val_loss: 1.589
06/29/2021 10:39:02 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7565485362095532, 'f1': 0.725905611153879, 'precision': 0.7281475324899616, 'recall': 0.723951048951049}
06/29/2021 10:39:02 - INFO - __main__ -   	current patience value: 8/10
06/29/2021 10:39:12 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:39:12 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:39:12 - INFO - __main__ -   Epoch: 0018 | Time: 0m_9s | train_loss: 0.979 | val_loss: 1.557
06/29/2021 10:39:12 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7827426810477658, 'f1': 0.7515374652797575, 'precision': 0.7592462311557788, 'recall': 0.7459790209790209}
06/29/2021 10:39:12 - INFO - __main__ -   	current patience value: 9/10
06/29/2021 10:39:22 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:39:22 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:39:22 - INFO - __main__ -   Epoch: 0019 | Time: 0m_10s | train_loss: 0.948 | val_loss: 1.846
06/29/2021 10:39:22 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7103235747303543, 'f1': 0.7012672856191484, 'precision': 0.7062473866271335, 'recall': 0.7299533799533799}
06/29/2021 10:39:22 - INFO - __main__ -   	current patience value: 10/10
06/29/2021 10:39:22 - INFO - __main__ -   	--STOPPING EARLY
06/29/2021 10:39:22 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/GermEval2021/models/cv_fold_E_multitask/bert-base-german-cased/trg_fc128_lr0.0005_frozen
06/29/2021 10:39:22 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/GermEval2021/models/cv_fold_E_multitask/bert-base-german-cased/trg_fc128_lr0.0005_frozen
06/29/2021 10:39:26 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:39:26 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:39:26 - INFO - __main__ -   best_val_loss: 1.462
06/29/2021 10:39:26 - INFO - __main__ -   ðŸ”¥ best validation metrics ðŸ”¥ {'acc': 0.7919876733436055, 'f1': 0.7529445602122733, 'precision': 0.7780346962245223, 'recall': 0.7407925407925408}
