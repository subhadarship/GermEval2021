06/29/2021 13:05:44 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

06/29/2021 13:05:44 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	train_data_dir: ../data/cross_validation/fold_C
	dev_data_dir: ../data/cross_validation/fold_C
	test_data_dir: None
	label_col_names: Sub1_Toxic,Sub2_Engaging,Sub3_FactClaiming
	eval_label_col_names: Sub3_FactClaiming
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 512
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_cv/cv_fold_C_multitask/bert-base-multilingual-cased/trg_fc512_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/GermEval2021/models/cv_fold_C_multitask/bert-base-multilingual-cased/trg_fc512_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

06/29/2021 13:05:46 - INFO - __main__ -   device: cuda
06/29/2021 13:05:46 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
06/29/2021 13:05:46 - WARNING - data_utils.bert_data -   trimming sentence 110 of length 1550 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 13:05:47 - WARNING - data_utils.bert_data -   trimming sentence 688 of length 2626 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 13:05:47 - WARNING - data_utils.bert_data -   trimming sentence 1807 of length 516 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 13:05:47 - WARNING - data_utils.bert_data -   trimming sentence 1968 of length 752 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 13:05:48 - WARNING - data_utils.bert_data -   trimming sentence 249 of length 1645 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 13:05:48 - WARNING - data_utils.bert_data -   trimming sentence 599 of length 2491 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 13:05:48 - INFO - data_utils.preprocess_bert -   num train samples: 2595
06/29/2021 13:05:48 - INFO - data_utils.preprocess_bert -   num val samples: 649
06/29/2021 13:05:48 - INFO - data_utils.preprocess_bert -   num test samples: None
06/29/2021 13:05:48 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
06/29/2021 13:05:48 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
06/29/2021 13:05:48 - INFO - data_utils.preprocess_bert -   train OOV: 487 (0.37%) out of 131667 running tokens are OOV
06/29/2021 13:05:49 - INFO - data_utils.preprocess_bert -   val OOV: 130 (0.41%) out of 31932 running tokens are OOV
06/29/2021 13:05:49 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
06/29/2021 13:05:49 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: @USER beim korrupten Erdogan oder hier?, text ids: [101, 137, 10808, 24093, 12632, 33705, 46791, 10136, 10915, 62039, 10206, 10760, 13329, 136, 102], original labels: 0 0 1, label ids: [[0], [0], [1]]
06/29/2021 13:05:49 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: Mietpreisbremse? 2 StÃ¼hle und ein Tisch in die Butze, wird als mÃ¶bliert vermietet. Mietpreisbremse greift nicht. Ich habe eine zeitlang Mietangebote Ã¼ber 15 Euro kalt (wenn offensichtlich nicht modernisiert) zur Anzeige gebracht.... Habe die Anbieter auch darÃ¼ber informiert. Von Staatsanwalt und Wohnungsant nur Einstellungen gekommen. Is ja nicht so als hÃ¤tte ich mir irgend etwas erwartet... Aber irgend etwas will ich tun... Erbsen unter die Matratze... Etwas... HERR GOTT! Oft 20,- kalt in einer Stadt mit niederem Durchschnittseinkommen., text ids: [101, 19803, 10308, 27516, 13724, 71799, 136, 123, 10838, 94284, 10130, 10290, 29033, 12044, 10106, 10128, 16976, 10870, 117, 10790, 10223, 11522, 48850, 11605, 16719, 18485, 12392, 119, 19803, 10308, 27516, 13724, 71799, 30518, 11998, 12961, 10726, 119, 21023, 21404, 10359, 10941, 10486, 17356, 19803, 18451, 10525, 25022, 10112, 10848, 10208, 17526, 32383, 113, 16082, 84646, 65381, 10726, 84984, 56109, 114, 10736, 10313, 53228, 10525, 28989, 119, 119, 119, 119, 13740, 11044, 10128, 10313, 93760, 10165, 10515, 35159, 26978, 76936, 11605, 119, 12273, 28435, 14434, 57710, 10130, 79427, 31271, 11354, 104731, 10136, 70195, 119, 12034, 10201, 10726, 10380, 10223, 43667, 12979, 36077, 10478, 62589, 23942, 10163, 102775, 119, 119, 119, 52567, 10478, 62589, 23942, 11337, 12979, 53100, 119, 119, 119, 10915, 19528, 10136, 11124, 10128, 57471, 12553, 10870, 119, 119, 119, 76195, 10107, 119, 119, 119, 145, 24093, 11273, 41525, 11090, 11090, 106, 12610, 10123, 10197, 117, 118, 32383, 10106, 10599, 11878, 10221, 63694, 10451, 17400, 51577, 83866, 20271, 119, 102], original labels: 1 0 1, label ids: [[1], [0], [1]]
06/29/2021 13:05:49 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Ach so, ich trage auch keine Jeans, da bin ich sicher schon in den 80ern indoktriniert worden ...VOM ISLAM. ðŸ˜‚, text ids: [101, 138, 10269, 10380, 117, 12979, 11264, 10525, 10515, 14618, 10766, 10107, 117, 10143, 16292, 12979, 78963, 16363, 10106, 10140, 10832, 13979, 74502, 12495, 24387, 11605, 11425, 119, 119, 119, 159, 37079, 40214, 44376, 11517, 119, 100, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 13:05:49 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: @USER Sie meinen, so wie 1933? Intessant ðŸ¤”, text ids: [101, 137, 10808, 24093, 11583, 99864, 10115, 117, 10380, 10953, 11247, 136, 81687, 18621, 10368, 100, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 13:05:49 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: Jeder Motorrad fahrer sollte automatisch Organspender werden., text ids: [101, 105818, 19440, 18599, 12211, 50935, 17799, 51055, 72154, 54609, 27323, 10615, 119, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 13:05:50 - INFO - data_utils.preprocess_bert -   there are nearly 143 batches in an epoch
06/29/2021 13:05:54 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=512, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=512, out_features=2, bias=True)
    (1): Linear(in_features=512, out_features=2, bias=True)
    (2): Linear(in_features=512, out_features=2, bias=True)
  )
)
-----------------------------------------------------------------------------------------

06/29/2021 13:05:54 - INFO - __main__ -   the model has 396,806 trainable parameters
06/29/2021 13:05:54 - INFO - __main__ -   ðŸŒ‹  starting training..
06/29/2021 13:06:05 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:06:05 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:06:05 - INFO - __main__ -   Epoch: 0001 | Time: 0m_11s | train_loss: 1.846 | val_loss: 2.329
06/29/2021 13:06:05 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.4699537750385208, 'f1': 0.45151336477987414, 'precision': 0.6496666308205183, 'recall': 0.5882828688628579}
06/29/2021 13:06:05 - INFO - __main__ -   	--Found new best val f1
06/29/2021 13:06:06 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 13:06:17 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:06:17 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:06:17 - INFO - __main__ -   Epoch: 0002 | Time: 0m_11s | train_loss: 1.768 | val_loss: 2.162
06/29/2021 13:06:17 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.50231124807396, 'f1': 0.49164696324857826, 'precision': 0.6578423386731831, 'recall': 0.6106271408635344}
06/29/2021 13:06:17 - INFO - __main__ -   	--Found new best val f1
06/29/2021 13:06:27 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 13:06:38 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:06:38 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:06:38 - INFO - __main__ -   Epoch: 0003 | Time: 0m_11s | train_loss: 1.699 | val_loss: 2.059
06/29/2021 13:06:38 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.5454545454545454, 'f1': 0.5427405236672469, 'precision': 0.6557415155741515, 'recall': 0.6345836681185774}
06/29/2021 13:06:38 - INFO - __main__ -   	--Found new best val f1
06/29/2021 13:06:46 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 13:06:57 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:06:57 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:06:57 - INFO - __main__ -   Epoch: 0004 | Time: 0m_11s | train_loss: 1.687 | val_loss: 1.892
06/29/2021 13:06:57 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.6979969183359014, 'f1': 0.691096475890741, 'precision': 0.7012721123335044, 'recall': 0.7239766143696875}
06/29/2021 13:06:57 - INFO - __main__ -   	--Found new best val f1
06/29/2021 13:07:05 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 13:07:16 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:07:16 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:07:16 - INFO - __main__ -   Epoch: 0005 | Time: 0m_11s | train_loss: 1.670 | val_loss: 1.756
06/29/2021 13:07:16 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.6517719568567026, 'f1': 0.6496082178690874, 'precision': 0.6823461148385084, 'recall': 0.6976836385165137}
06/29/2021 13:07:16 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 13:07:27 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:07:27 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:07:27 - INFO - __main__ -   Epoch: 0006 | Time: 0m_11s | train_loss: 1.612 | val_loss: 1.606
06/29/2021 13:07:27 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7596302003081664, 'f1': 0.71891657782516, 'precision': 0.7350781508240072, 'recall': 0.710523533640631}
06/29/2021 13:07:27 - INFO - __main__ -   	--Found new best val f1
06/29/2021 13:07:35 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 13:07:47 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:07:47 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:07:47 - INFO - __main__ -   Epoch: 0007 | Time: 0m_11s | train_loss: 1.596 | val_loss: 1.601
06/29/2021 13:07:47 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7303543913713405, 'f1': 0.7163921940743885, 'precision': 0.7137806289793556, 'recall': 0.7342844758320295}
06/29/2021 13:07:47 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 13:07:58 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:07:58 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:07:58 - INFO - __main__ -   Epoch: 0008 | Time: 0m_11s | train_loss: 1.597 | val_loss: 1.493
06/29/2021 13:07:58 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7642526964560863, 'f1': 0.7200038349072431, 'precision': 0.7435281837160752, 'recall': 0.7096513299784328}
06/29/2021 13:07:58 - INFO - __main__ -   	--Found new best val f1
06/29/2021 13:08:06 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 13:08:17 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:08:17 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:08:17 - INFO - __main__ -   Epoch: 0009 | Time: 0m_11s | train_loss: 1.562 | val_loss: 1.501
06/29/2021 13:08:17 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7473035439137135, 'f1': 0.7227882651998165, 'precision': 0.7200585877274128, 'recall': 0.7263447794646255}
06/29/2021 13:08:17 - INFO - __main__ -   	--Found new best val f1
06/29/2021 13:08:25 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 13:08:36 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:08:36 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:08:36 - INFO - __main__ -   Epoch: 0010 | Time: 0m_11s | train_loss: 1.565 | val_loss: 1.551
06/29/2021 13:08:36 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7473035439137135, 'f1': 0.7254766424562561, 'precision': 0.7215296019397858, 'recall': 0.7318158751638686}
06/29/2021 13:08:36 - INFO - __main__ -   	--Found new best val f1
06/29/2021 13:08:44 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 13:08:55 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:08:55 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:08:55 - INFO - __main__ -   Epoch: 0011 | Time: 0m_11s | train_loss: 1.516 | val_loss: 1.602
06/29/2021 13:08:55 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7334360554699538, 'f1': 0.7152534205754429, 'precision': 0.7110389610389611, 'recall': 0.7267729521715228}
06/29/2021 13:08:55 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 13:09:07 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:09:07 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:09:07 - INFO - __main__ -   Epoch: 0012 | Time: 0m_11s | train_loss: 1.517 | val_loss: 1.510
06/29/2021 13:09:07 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7503852080123267, 'f1': 0.7227197923919235, 'precision': 0.7222467841428241, 'recall': 0.7232101323635134}
06/29/2021 13:09:07 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 13:09:18 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:09:18 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:09:18 - INFO - __main__ -   Epoch: 0013 | Time: 0m_11s | train_loss: 1.540 | val_loss: 1.483
06/29/2021 13:09:18 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7627118644067796, 'f1': 0.7185824660990223, 'precision': 0.741258655704813, 'recall': 0.7084831056793673}
06/29/2021 13:09:18 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 13:09:30 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:09:30 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:09:30 - INFO - __main__ -   Epoch: 0014 | Time: 0m_11s | train_loss: 1.515 | val_loss: 1.536
06/29/2021 13:09:30 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7673343605546995, 'f1': 0.7122289271608744, 'precision': 0.7586564906490649, 'recall': 0.6988571488983804}
06/29/2021 13:09:30 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 13:09:41 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:09:41 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:09:41 - INFO - __main__ -   Epoch: 0015 | Time: 0m_11s | train_loss: 1.516 | val_loss: 1.577
06/29/2021 13:09:41 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7380585516178737, 'f1': 0.7242963096237656, 'precision': 0.7212825117302901, 'recall': 0.7423140356070537}
06/29/2021 13:09:41 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 13:09:53 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:09:53 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:09:53 - INFO - __main__ -   Epoch: 0016 | Time: 0m_11s | train_loss: 1.524 | val_loss: 1.504
06/29/2021 13:09:53 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.765793528505393, 'f1': 0.7381119252415844, 'precision': 0.739215309779826, 'recall': 0.7370808136338648}
06/29/2021 13:09:53 - INFO - __main__ -   	--Found new best val f1
06/29/2021 13:10:01 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 13:10:12 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:10:12 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:10:13 - INFO - __main__ -   Epoch: 0017 | Time: 0m_11s | train_loss: 1.480 | val_loss: 1.713
06/29/2021 13:10:13 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7519260400616333, 'f1': 0.7331857401491763, 'precision': 0.7284410782442747, 'recall': 0.7429800820400051}
06/29/2021 13:10:13 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 13:10:24 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:10:24 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:10:24 - INFO - __main__ -   Epoch: 0018 | Time: 0m_11s | train_loss: 1.440 | val_loss: 1.523
06/29/2021 13:10:24 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7673343605546995, 'f1': 0.7290337743491906, 'precision': 0.7440334268349695, 'recall': 0.7207415316953525}
06/29/2021 13:10:24 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 13:10:35 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:10:35 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:10:36 - INFO - __main__ -   Epoch: 0019 | Time: 0m_11s | train_loss: 1.442 | val_loss: 1.517
06/29/2021 13:10:36 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7534668721109399, 'f1': 0.7177033492822966, 'precision': 0.7256412560082656, 'recall': 0.7124159512834609}
06/29/2021 13:10:36 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 13:10:47 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:10:47 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:10:47 - INFO - __main__ -   Epoch: 0020 | Time: 0m_11s | train_loss: 1.465 | val_loss: 1.487
06/29/2021 13:10:47 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7642526964560863, 'f1': 0.7216115059506287, 'precision': 0.7424379915305506, 'recall': 0.71183976825813}
06/29/2021 13:10:47 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 13:10:59 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:10:59 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:10:59 - INFO - __main__ -   Epoch: 0021 | Time: 0m_11s | train_loss: 1.431 | val_loss: 1.522
06/29/2021 13:10:59 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7473035439137135, 'f1': 0.7216573568484697, 'precision': 0.7195830485304169, 'recall': 0.7241563411849283}
06/29/2021 13:10:59 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 13:11:10 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:11:10 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:11:10 - INFO - __main__ -   Epoch: 0022 | Time: 0m_11s | train_loss: 1.403 | val_loss: 1.516
06/29/2021 13:11:10 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7534668721109399, 'f1': 0.6749311294765841, 'precision': 0.7639823309548079, 'recall': 0.6642703091301222}
06/29/2021 13:11:10 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 13:11:22 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:11:22 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:11:22 - INFO - __main__ -   Epoch: 0023 | Time: 0m_11s | train_loss: 1.424 | val_loss: 1.559
06/29/2021 13:11:22 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.765793528505393, 'f1': 0.7403945346217815, 'precision': 0.7394025157232704, 'recall': 0.7414576901932592}
06/29/2021 13:11:22 - INFO - __main__ -   	--Found new best val f1
06/29/2021 13:11:30 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 13:11:42 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:11:42 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:11:42 - INFO - __main__ -   Epoch: 0024 | Time: 0m_11s | train_loss: 1.395 | val_loss: 1.548
06/29/2021 13:11:42 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7627118644067796, 'f1': 0.7209771077610274, 'precision': 0.7397598870056497, 'recall': 0.7117657630989132}
06/29/2021 13:11:42 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 13:11:53 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:11:53 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:11:53 - INFO - __main__ -   Epoch: 0025 | Time: 0m_11s | train_loss: 1.396 | val_loss: 1.618
06/29/2021 13:11:53 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7442218798151001, 'f1': 0.713990655198046, 'precision': 0.7149844256699095, 'recall': 0.7130661394680087}
06/29/2021 13:11:53 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 13:12:05 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:12:05 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:12:05 - INFO - __main__ -   Epoch: 0026 | Time: 0m_11s | train_loss: 1.369 | val_loss: 1.616
06/29/2021 13:12:05 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7380585516178737, 'f1': 0.7185171956322074, 'precision': 0.7141517112681648, 'recall': 0.7280891867890218}
06/29/2021 13:12:05 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 13:12:16 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:12:16 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:12:16 - INFO - __main__ -   Epoch: 0027 | Time: 0m_11s | train_loss: 1.363 | val_loss: 1.521
06/29/2021 13:12:16 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7688751926040062, 'f1': 0.7250931887495764, 'precision': 0.7498212524654833, 'recall': 0.7142502220154776}
06/29/2021 13:12:16 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 13:12:28 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:12:28 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:12:28 - INFO - __main__ -   Epoch: 0028 | Time: 0m_11s | train_loss: 1.361 | val_loss: 1.525
06/29/2021 13:12:28 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7503852080123267, 'f1': 0.6907487587359108, 'precision': 0.7345697780480389, 'recall': 0.6794413667695691}
06/29/2021 13:12:28 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 13:12:39 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:12:39 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:12:40 - INFO - __main__ -   Epoch: 0029 | Time: 0m_11s | train_loss: 1.349 | val_loss: 1.563
06/29/2021 13:12:40 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7550077041602465, 'f1': 0.7387285198135493, 'precision': 0.7338581440546537, 'recall': 0.7518818454772276}
06/29/2021 13:12:40 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 13:12:51 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:12:51 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:12:51 - INFO - __main__ -   Epoch: 0030 | Time: 0m_11s | train_loss: 1.294 | val_loss: 1.580
06/29/2021 13:12:51 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7750385208012327, 'f1': 0.745531206359437, 'precision': 0.7500819725883665, 'recall': 0.7419017211485601}
06/29/2021 13:12:51 - INFO - __main__ -   	--Found new best val f1
06/29/2021 13:12:59 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 13:13:11 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:13:11 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:13:11 - INFO - __main__ -   Epoch: 0031 | Time: 0m_11s | train_loss: 1.347 | val_loss: 1.488
06/29/2021 13:13:11 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7596302003081664, 'f1': 0.7115358315098468, 'precision': 0.7396109470069934, 'recall': 0.7006755613819935}
06/29/2021 13:13:11 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 13:13:22 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:13:22 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:13:22 - INFO - __main__ -   Epoch: 0032 | Time: 0m_11s | train_loss: 1.331 | val_loss: 1.530
06/29/2021 13:13:22 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7580893682588598, 'f1': 0.7151415863146742, 'precision': 0.7341437632135306, 'recall': 0.7060726519220197}
06/29/2021 13:13:22 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 13:13:34 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:13:34 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:13:34 - INFO - __main__ -   Epoch: 0033 | Time: 0m_11s | train_loss: 1.308 | val_loss: 1.496
06/29/2021 13:13:34 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7565485362095532, 'f1': 0.7121030052558286, 'precision': 0.7328471851168212, 'recall': 0.7027159893432571}
06/29/2021 13:13:34 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 13:13:45 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:13:45 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:13:45 - INFO - __main__ -   Epoch: 0034 | Time: 0m_11s | train_loss: 1.313 | val_loss: 1.539
06/29/2021 13:13:45 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7642526964560863, 'f1': 0.731060595801385, 'precision': 0.7381180400890869, 'recall': 0.7260646170761619}
06/29/2021 13:13:45 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 13:13:57 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:13:57 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:13:57 - INFO - __main__ -   Epoch: 0035 | Time: 0m_11s | train_loss: 1.276 | val_loss: 1.549
06/29/2021 13:13:57 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7519260400616333, 'f1': 0.729202787561195, 'precision': 0.72570293398533, 'recall': 0.7342263289212163}
06/29/2021 13:13:57 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 13:14:09 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:14:09 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:14:09 - INFO - __main__ -   Epoch: 0036 | Time: 0m_11s | train_loss: 1.294 | val_loss: 1.515
06/29/2021 13:14:09 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7596302003081664, 'f1': 0.7181403118040088, 'precision': 0.7354629739688576, 'recall': 0.7094293145007824}
06/29/2021 13:14:09 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 13:14:20 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:14:20 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:14:20 - INFO - __main__ -   Epoch: 0037 | Time: 0m_11s | train_loss: 1.269 | val_loss: 1.552
06/29/2021 13:14:20 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7550077041602465, 'f1': 0.7169413836519392, 'precision': 0.7280931085884645, 'recall': 0.7103015181629805}
06/29/2021 13:14:20 - INFO - __main__ -   	current patience value: 7/10
06/29/2021 13:14:32 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:14:32 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:14:32 - INFO - __main__ -   Epoch: 0038 | Time: 0m_11s | train_loss: 1.272 | val_loss: 1.542
06/29/2021 13:14:32 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7550077041602465, 'f1': 0.7183997598548213, 'precision': 0.7276991050186926, 'recall': 0.7124899564426778}
06/29/2021 13:14:32 - INFO - __main__ -   	current patience value: 8/10
06/29/2021 13:14:44 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:14:44 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:14:44 - INFO - __main__ -   Epoch: 0039 | Time: 0m_11s | train_loss: 1.283 | val_loss: 1.590
06/29/2021 13:14:44 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7704160246533128, 'f1': 0.7257152744095281, 'precision': 0.7528436728279578, 'recall': 0.7143242271746945}
06/29/2021 13:14:44 - INFO - __main__ -   	current patience value: 9/10
06/29/2021 13:14:55 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:14:55 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:14:55 - INFO - __main__ -   Epoch: 0040 | Time: 0m_11s | train_loss: 1.229 | val_loss: 1.648
06/29/2021 13:14:55 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7257318952234206, 'f1': 0.71294032283715, 'precision': 0.7115225863426059, 'recall': 0.7329682412145304}
06/29/2021 13:14:55 - INFO - __main__ -   	current patience value: 10/10
06/29/2021 13:14:55 - INFO - __main__ -   	--STOPPING EARLY
06/29/2021 13:14:55 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/GermEval2021/models/cv_fold_C_multitask/bert-base-multilingual-cased/trg_fc512_lr0.0005_frozen
06/29/2021 13:14:56 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/GermEval2021/models/cv_fold_C_multitask/bert-base-multilingual-cased/trg_fc512_lr0.0005_frozen
06/29/2021 13:15:00 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 13:15:00 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 13:15:00 - INFO - __main__ -   best_val_loss: 1.580
06/29/2021 13:15:00 - INFO - __main__ -   ðŸ”¥ best validation metrics ðŸ”¥ {'acc': 0.7750385208012327, 'f1': 0.745531206359437, 'precision': 0.7500819725883665, 'recall': 0.7419017211485601}
