06/29/2021 10:42:53 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

06/29/2021 10:42:53 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	train_data_dir: ../data/cross_validation/fold_B
	dev_data_dir: ../data/cross_validation/fold_B
	test_data_dir: None
	label_col_names: Sub1_Toxic,Sub2_Engaging,Sub3_FactClaiming
	eval_label_col_names: Sub3_FactClaiming
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-german-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 128
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_cv/cv_fold_B_multitask/bert-base-german-cased/trg_fc128_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/GermEval2021/models/cv_fold_B_multitask/bert-base-german-cased/trg_fc128_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-german-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

06/29/2021 10:42:54 - INFO - __main__ -   device: cuda
06/29/2021 10:42:54 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-german-cased
06/29/2021 10:42:54 - WARNING - data_utils.bert_data -   trimming sentence 110 of length 1522 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:42:55 - WARNING - data_utils.bert_data -   trimming sentence 898 of length 1615 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:42:55 - WARNING - data_utils.bert_data -   trimming sentence 1248 of length 2708 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:42:55 - WARNING - data_utils.bert_data -   trimming sentence 1969 of length 667 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:42:56 - WARNING - data_utils.bert_data -   trimming sentence 39 of length 2871 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 10:42:56 - INFO - data_utils.preprocess_bert -   num train samples: 2596
06/29/2021 10:42:56 - INFO - data_utils.preprocess_bert -   num val samples: 648
06/29/2021 10:42:56 - INFO - data_utils.preprocess_bert -   num test samples: None
06/29/2021 10:42:56 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
06/29/2021 10:42:56 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
06/29/2021 10:42:56 - INFO - data_utils.preprocess_bert -   train OOV: 528 (0.45%) out of 117560 running tokens are OOV
06/29/2021 10:42:56 - INFO - data_utils.preprocess_bert -   val OOV: 163 (0.57%) out of 28568 running tokens are OOV
06/29/2021 10:42:56 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
06/29/2021 10:42:56 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: @USER beim korrupten Erdogan oder hier?, text ids: [3, 26991, 960, 8242, 785, 6059, 16261, 47, 17671, 309, 702, 26972, 4], original labels: 0 0 1, label ids: [[0], [0], [1]]
06/29/2021 10:42:56 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: Mietpreisbremse? 2 StÃ¼hle und ein Tisch in die Butze, wird als mÃ¶bliert vermietet. Mietpreisbremse greift nicht. Ich habe eine zeitlang Mietangebote Ã¼ber 15 Euro kalt (wenn offensichtlich nicht modernisiert) zur Anzeige gebracht.... Habe die Anbieter auch darÃ¼ber informiert. Von Staatsanwalt und Wohnungsant nur Einstellungen gekommen. Is ja nicht so als hÃ¤tte ich mir irgend etwas erwartet... Aber irgend etwas will ich tun... Erbsen unter die Matratze... Etwas... HERR GOTT! Oft 20,- kalt in einer Stadt mit niederem Durchschnittseinkommen., text ids: [3, 5721, 3359, 20690, 26972, 99, 130, 6294, 42, 39, 7461, 50, 30, 17286, 416, 26918, 292, 153, 2480, 4601, 335, 1423, 3382, 26914, 5721, 3359, 20690, 10356, 149, 26914, 1671, 555, 155, 2527, 1941, 5721, 24231, 204, 659, 918, 19807, 26954, 557, 6587, 149, 20166, 321, 26955, 252, 13377, 4048, 26914, 26914, 26914, 26914, 9689, 26897, 30, 11760, 194, 2683, 10867, 26914, 1073, 5406, 42, 7926, 415, 356, 9207, 7, 3934, 26914, 1851, 3278, 149, 181, 153, 1807, 1169, 3667, 5337, 1835, 6303, 26914, 26914, 26914, 1882, 5337, 1835, 1279, 1169, 4013, 26914, 26914, 26914, 5697, 138, 267, 30, 3554, 24370, 26897, 26914, 26914, 26914, 15615, 26914, 26914, 26914, 84, 8242, 26938, 61, 26962, 26943, 26943, 26982, 13157, 148, 26918, 26935, 19807, 50, 225, 560, 114, 2702, 49, 15059, 9914, 26914, 4], original labels: 1 0 1, label ids: [[1], [0], [1]]
06/29/2021 10:42:56 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Ach so, ich trage auch keine Jeans, da bin ich sicher schon in den 80ern indoktriniert worden ...VOM ISLAM. ðŸ˜‚, text ids: [3, 5534, 181, 26918, 1169, 26031, 194, 668, 6095, 26902, 26918, 348, 4058, 1169, 2386, 764, 50, 86, 4029, 212, 2519, 493, 15146, 24357, 257, 671, 26914, 26914, 26914, 12965, 26929, 8699, 18112, 26929, 26914, 2, 4], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 10:42:56 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: @USER Sie meinen, so wie 1933? Intessant ðŸ¤”, text ids: [3, 26991, 960, 8242, 371, 9685, 26918, 181, 246, 5175, 26972, 12491, 19125, 4053, 2, 4], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 10:42:56 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: Jeder Motorrad fahrer sollte automatisch Organspender werden., text ids: [3, 8854, 13809, 5137, 6, 1547, 12494, 4774, 4780, 21748, 26900, 266, 26914, 4], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 10:42:58 - INFO - data_utils.preprocess_bert -   there are nearly 127 batches in an epoch
06/29/2021 10:43:00 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30000, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=128, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=128, out_features=2, bias=True)
    (1): Linear(in_features=128, out_features=2, bias=True)
    (2): Linear(in_features=128, out_features=2, bias=True)
  )
)
-----------------------------------------------------------------------------------------

06/29/2021 10:43:00 - INFO - __main__ -   the model has 99,206 trainable parameters
06/29/2021 10:43:00 - INFO - __main__ -   ðŸŒ‹  starting training..
06/29/2021 10:43:10 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:43:10 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:43:10 - INFO - __main__ -   Epoch: 0001 | Time: 0m_9s | train_loss: 1.732 | val_loss: 1.548
06/29/2021 10:43:10 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7283950617283951, 'f1': 0.7130174834677054, 'precision': 0.7098386155940113, 'recall': 0.7292268479184367}
06/29/2021 10:43:10 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:43:10 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:43:20 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:43:20 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:43:20 - INFO - __main__ -   Epoch: 0002 | Time: 0m_9s | train_loss: 1.561 | val_loss: 1.651
06/29/2021 10:43:20 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7530864197530864, 'f1': 0.6577540106951871, 'precision': 0.7936356865016966, 'recall': 0.6507221750212404}
06/29/2021 10:43:20 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 10:43:30 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:43:30 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:43:30 - INFO - __main__ -   Epoch: 0003 | Time: 0m_9s | train_loss: 1.535 | val_loss: 1.594
06/29/2021 10:43:30 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7391975308641975, 'f1': 0.6940176528277214, 'precision': 0.7092887517718669, 'recall': 0.6865972812234494}
06/29/2021 10:43:30 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 10:43:39 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:43:39 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:43:39 - INFO - __main__ -   Epoch: 0004 | Time: 0m_9s | train_loss: 1.492 | val_loss: 1.601
06/29/2021 10:43:39 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7638888888888888, 'f1': 0.7101586549846081, 'precision': 0.7501916584847548, 'recall': 0.6975573491928632}
06/29/2021 10:43:39 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 10:43:49 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:43:49 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:43:49 - INFO - __main__ -   Epoch: 0005 | Time: 0m_9s | train_loss: 1.425 | val_loss: 1.777
06/29/2021 10:43:49 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.6620370370370371, 'f1': 0.651820610771303, 'precision': 0.6586436284273829, 'recall': 0.6767841971113}
06/29/2021 10:43:49 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 10:43:59 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:43:59 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:43:59 - INFO - __main__ -   Epoch: 0006 | Time: 0m_9s | train_loss: 1.392 | val_loss: 1.544
06/29/2021 10:43:59 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7577160493827161, 'f1': 0.7188238448080968, 'precision': 0.731187722574733, 'recall': 0.711661002548853}
06/29/2021 10:43:59 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:44:02 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:44:12 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:44:12 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:44:12 - INFO - __main__ -   Epoch: 0007 | Time: 0m_9s | train_loss: 1.353 | val_loss: 1.661
06/29/2021 10:44:12 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.75, 'f1': 0.693608078921254, 'precision': 0.7302008032128514, 'recall': 0.682625318606627}
06/29/2021 10:44:12 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 10:44:22 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:44:22 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:44:22 - INFO - __main__ -   Epoch: 0008 | Time: 0m_9s | train_loss: 1.327 | val_loss: 1.811
06/29/2021 10:44:22 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.75, 'f1': 0.7139649704090418, 'precision': 0.7210101010101011, 'recall': 0.7091333899745115}
06/29/2021 10:44:22 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 10:44:31 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:44:31 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:44:31 - INFO - __main__ -   Epoch: 0009 | Time: 0m_9s | train_loss: 1.305 | val_loss: 1.664
06/29/2021 10:44:31 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7592592592592593, 'f1': 0.6901688182720953, 'precision': 0.7604251075235304, 'recall': 0.6774851316907391}
06/29/2021 10:44:31 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 10:44:41 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:44:41 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:44:41 - INFO - __main__ -   Epoch: 0010 | Time: 0m_9s | train_loss: 1.266 | val_loss: 1.662
06/29/2021 10:44:41 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7731481481481481, 'f1': 0.7275901612621862, 'precision': 0.7568085510087914, 'recall': 0.7156117247238742}
06/29/2021 10:44:41 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:44:44 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:44:54 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:44:54 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:44:54 - INFO - __main__ -   Epoch: 0011 | Time: 0m_9s | train_loss: 1.223 | val_loss: 1.690
06/29/2021 10:44:54 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7623456790123457, 'f1': 0.7238279736536226, 'precision': 0.7369780756877531, 'recall': 0.7162701784197112}
06/29/2021 10:44:54 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 10:45:04 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:45:04 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:45:04 - INFO - __main__ -   Epoch: 0012 | Time: 0m_9s | train_loss: 1.173 | val_loss: 1.747
06/29/2021 10:45:04 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7716049382716049, 'f1': 0.7218787337455195, 'precision': 0.7585835217414165, 'recall': 0.7089209855564995}
06/29/2021 10:45:04 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 10:45:13 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:45:13 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:45:13 - INFO - __main__ -   Epoch: 0013 | Time: 0m_9s | train_loss: 1.175 | val_loss: 1.669
06/29/2021 10:45:13 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7731481481481481, 'f1': 0.7308049907447967, 'precision': 0.7539997793225202, 'recall': 0.7200297366185217}
06/29/2021 10:45:13 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:45:19 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:45:29 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:45:29 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:45:29 - INFO - __main__ -   Epoch: 0014 | Time: 0m_9s | train_loss: 1.146 | val_loss: 1.782
06/29/2021 10:45:29 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7716049382716049, 'f1': 0.7060575968222442, 'precision': 0.7806208315153027, 'recall': 0.6912489379779099}
06/29/2021 10:45:29 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 10:45:38 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:45:38 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:45:38 - INFO - __main__ -   Epoch: 0015 | Time: 0m_9s | train_loss: 1.172 | val_loss: 1.790
06/29/2021 10:45:38 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7623456790123457, 'f1': 0.7344573234984195, 'precision': 0.7349903989758908, 'recall': 0.7339422259983008}
06/29/2021 10:45:38 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:45:42 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:45:52 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:45:52 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:45:52 - INFO - __main__ -   Epoch: 0016 | Time: 0m_9s | train_loss: 1.117 | val_loss: 1.753
06/29/2021 10:45:52 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7561728395061729, 'f1': 0.7174085850556439, 'precision': 0.7291859389454209, 'recall': 0.7104927782497876}
06/29/2021 10:45:52 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 10:46:01 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:46:01 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:46:01 - INFO - __main__ -   Epoch: 0017 | Time: 0m_9s | train_loss: 1.074 | val_loss: 1.840
06/29/2021 10:46:01 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7716049382716049, 'f1': 0.7338720419127114, 'precision': 0.748688155922039, 'recall': 0.7254885301614273}
06/29/2021 10:46:01 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 10:46:11 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:46:11 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:46:11 - INFO - __main__ -   Epoch: 0018 | Time: 0m_9s | train_loss: 1.065 | val_loss: 1.834
06/29/2021 10:46:11 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7746913580246914, 'f1': 0.725637129235445, 'precision': 0.7628424207371576, 'recall': 0.7123619371282923}
06/29/2021 10:46:11 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 10:46:21 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:46:21 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:46:21 - INFO - __main__ -   Epoch: 0019 | Time: 0m_9s | train_loss: 1.016 | val_loss: 1.962
06/29/2021 10:46:21 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7700617283950617, 'f1': 0.7213208914083178, 'precision': 0.7551143513173427, 'recall': 0.708857264231096}
06/29/2021 10:46:21 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 10:46:30 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:46:30 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:46:30 - INFO - __main__ -   Epoch: 0020 | Time: 0m_9s | train_loss: 1.056 | val_loss: 1.807
06/29/2021 10:46:30 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7561728395061729, 'f1': 0.7135342637463487, 'precision': 0.730695672961989, 'recall': 0.7049702633814783}
06/29/2021 10:46:30 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 10:46:40 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:46:40 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:46:40 - INFO - __main__ -   Epoch: 0021 | Time: 0m_9s | train_loss: 1.016 | val_loss: 1.975
06/29/2021 10:46:40 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7268518518518519, 'f1': 0.7058888390281428, 'precision': 0.7018260739410268, 'recall': 0.714804587935429}
06/29/2021 10:46:40 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 10:46:50 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:46:50 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:46:50 - INFO - __main__ -   Epoch: 0022 | Time: 0m_9s | train_loss: 0.949 | val_loss: 2.185
06/29/2021 10:46:50 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7654320987654321, 'f1': 0.7014404190309909, 'precision': 0.7655048076923077, 'recall': 0.6876805437553102}
06/29/2021 10:46:50 - INFO - __main__ -   	current patience value: 7/10
06/29/2021 10:46:59 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:46:59 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:46:59 - INFO - __main__ -   Epoch: 0023 | Time: 0m_9s | train_loss: 0.970 | val_loss: 2.147
06/29/2021 10:46:59 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7685185185185185, 'f1': 0.6986607142857143, 'precision': 0.7815011667098781, 'recall': 0.6844944774851317}
06/29/2021 10:46:59 - INFO - __main__ -   	current patience value: 8/10
06/29/2021 10:47:09 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:47:09 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:47:09 - INFO - __main__ -   Epoch: 0024 | Time: 0m_9s | train_loss: 0.958 | val_loss: 1.994
06/29/2021 10:47:09 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7716049382716049, 'f1': 0.7345879227320529, 'precision': 0.7482893450635386, 'recall': 0.7265930331350892}
06/29/2021 10:47:09 - INFO - __main__ -   	--Found new best val f1
06/29/2021 10:47:12 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 10:47:22 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:47:22 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:47:22 - INFO - __main__ -   Epoch: 0025 | Time: 0m_9s | train_loss: 0.902 | val_loss: 1.948
06/29/2021 10:47:22 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7716049382716049, 'f1': 0.7082324307879526, 'precision': 0.7769567597153804, 'recall': 0.6934579439252336}
06/29/2021 10:47:22 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 10:47:32 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:47:32 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:47:32 - INFO - __main__ -   Epoch: 0026 | Time: 0m_9s | train_loss: 0.950 | val_loss: 2.082
06/29/2021 10:47:32 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.779320987654321, 'f1': 0.7154534706975173, 'precision': 0.7942901500776264, 'recall': 0.6992990654205608}
06/29/2021 10:47:32 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 10:47:41 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:47:41 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:47:41 - INFO - __main__ -   Epoch: 0027 | Time: 0m_9s | train_loss: 0.936 | val_loss: 1.885
06/29/2021 10:47:41 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7546296296296297, 'f1': 0.7236377291686225, 'precision': 0.726165041699654, 'recall': 0.7214740866610025}
06/29/2021 10:47:41 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 10:47:51 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:47:51 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:47:51 - INFO - __main__ -   Epoch: 0028 | Time: 0m_9s | train_loss: 0.914 | val_loss: 2.363
06/29/2021 10:47:51 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7577160493827161, 'f1': 0.7180695847362514, 'precision': 0.7314634288716362, 'recall': 0.7105564995751912}
06/29/2021 10:47:51 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 10:48:01 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:48:01 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:48:01 - INFO - __main__ -   Epoch: 0029 | Time: 0m_9s | train_loss: 0.916 | val_loss: 1.973
06/29/2021 10:48:01 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.75, 'f1': 0.7029037187977586, 'precision': 0.7244154565591927, 'recall': 0.6936703483432456}
06/29/2021 10:48:01 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 10:48:11 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:48:11 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:48:11 - INFO - __main__ -   Epoch: 0030 | Time: 0m_9s | train_loss: 0.867 | val_loss: 2.339
06/29/2021 10:48:11 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7330246913580247, 'f1': 0.6831922680193865, 'precision': 0.7023612490345361, 'recall': 0.6752973661852166}
06/29/2021 10:48:11 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 10:48:20 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:48:20 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:48:20 - INFO - __main__ -   Epoch: 0031 | Time: 0m_9s | train_loss: 0.902 | val_loss: 2.023
06/29/2021 10:48:20 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7530864197530864, 'f1': 0.7174962670706586, 'precision': 0.7246464646464646, 'recall': 0.7125743415463042}
06/29/2021 10:48:20 - INFO - __main__ -   	current patience value: 7/10
06/29/2021 10:48:30 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:48:30 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:48:30 - INFO - __main__ -   Epoch: 0032 | Time: 0m_9s | train_loss: 0.866 | val_loss: 2.129
06/29/2021 10:48:30 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.75, 'f1': 0.7079034358409296, 'precision': 0.7223741923312739, 'recall': 0.7002973661852167}
06/29/2021 10:48:30 - INFO - __main__ -   	current patience value: 8/10
06/29/2021 10:48:40 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:48:40 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:48:40 - INFO - __main__ -   Epoch: 0033 | Time: 0m_9s | train_loss: 0.908 | val_loss: 2.055
06/29/2021 10:48:40 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7546296296296297, 'f1': 0.7016807817589577, 'precision': 0.73479683308251, 'recall': 0.6905480033984707}
06/29/2021 10:48:40 - INFO - __main__ -   	current patience value: 9/10
06/29/2021 10:48:49 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:48:49 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:48:49 - INFO - __main__ -   Epoch: 0034 | Time: 0m_9s | train_loss: 0.901 | val_loss: 1.986
06/29/2021 10:48:49 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7515432098765432, 'f1': 0.713918267846517, 'precision': 0.7231281671696179, 'recall': 0.7080926083262532}
06/29/2021 10:48:49 - INFO - __main__ -   	current patience value: 10/10
06/29/2021 10:48:49 - INFO - __main__ -   	--STOPPING EARLY
06/29/2021 10:48:49 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/GermEval2021/models/cv_fold_B_multitask/bert-base-german-cased/trg_fc128_lr0.005_frozen
06/29/2021 10:48:50 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/GermEval2021/models/cv_fold_B_multitask/bert-base-german-cased/trg_fc128_lr0.005_frozen
06/29/2021 10:48:53 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 10:48:53 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 10:48:53 - INFO - __main__ -   best_val_loss: 1.994
06/29/2021 10:48:53 - INFO - __main__ -   ðŸ”¥ best validation metrics ðŸ”¥ {'acc': 0.7716049382716049, 'f1': 0.7345879227320529, 'precision': 0.7482893450635386, 'recall': 0.7265930331350892}
