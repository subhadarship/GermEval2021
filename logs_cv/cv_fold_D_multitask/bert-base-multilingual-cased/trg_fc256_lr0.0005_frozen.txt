06/29/2021 12:12:32 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

06/29/2021 12:12:32 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	train_data_dir: ../data/cross_validation/fold_D
	dev_data_dir: ../data/cross_validation/fold_D
	test_data_dir: None
	label_col_names: Sub1_Toxic,Sub2_Engaging,Sub3_FactClaiming
	eval_label_col_names: Sub3_FactClaiming
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 256
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_cv/cv_fold_D_multitask/bert-base-multilingual-cased/trg_fc256_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/GermEval2021/models/cv_fold_D_multitask/bert-base-multilingual-cased/trg_fc256_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

06/29/2021 12:12:32 - INFO - __main__ -   device: cuda
06/29/2021 12:12:33 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
06/29/2021 12:12:33 - WARNING - data_utils.bert_data -   trimming sentence 110 of length 1550 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 12:12:33 - WARNING - data_utils.bert_data -   trimming sentence 688 of length 2626 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 12:12:34 - WARNING - data_utils.bert_data -   trimming sentence 1546 of length 1645 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 12:12:34 - WARNING - data_utils.bert_data -   trimming sentence 1896 of length 2491 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 12:12:34 - WARNING - data_utils.bert_data -   trimming sentence 1968 of length 752 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 12:12:34 - WARNING - data_utils.bert_data -   trimming sentence 510 of length 516 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/29/2021 12:12:34 - INFO - data_utils.preprocess_bert -   num train samples: 2595
06/29/2021 12:12:34 - INFO - data_utils.preprocess_bert -   num val samples: 649
06/29/2021 12:12:34 - INFO - data_utils.preprocess_bert -   num test samples: None
06/29/2021 12:12:34 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
06/29/2021 12:12:34 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
06/29/2021 12:12:35 - INFO - data_utils.preprocess_bert -   train OOV: 520 (0.40%) out of 131388 running tokens are OOV
06/29/2021 12:12:35 - INFO - data_utils.preprocess_bert -   val OOV: 97 (0.30%) out of 32211 running tokens are OOV
06/29/2021 12:12:35 - INFO - data_utils.preprocess_bert -   look at some train samples ðŸ‘€
06/29/2021 12:12:35 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: @USER beim korrupten Erdogan oder hier?, text ids: [101, 137, 10808, 24093, 12632, 33705, 46791, 10136, 10915, 62039, 10206, 10760, 13329, 136, 102], original labels: 0 0 1, label ids: [[0], [0], [1]]
06/29/2021 12:12:35 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: Mietpreisbremse? 2 StÃ¼hle und ein Tisch in die Butze, wird als mÃ¶bliert vermietet. Mietpreisbremse greift nicht. Ich habe eine zeitlang Mietangebote Ã¼ber 15 Euro kalt (wenn offensichtlich nicht modernisiert) zur Anzeige gebracht.... Habe die Anbieter auch darÃ¼ber informiert. Von Staatsanwalt und Wohnungsant nur Einstellungen gekommen. Is ja nicht so als hÃ¤tte ich mir irgend etwas erwartet... Aber irgend etwas will ich tun... Erbsen unter die Matratze... Etwas... HERR GOTT! Oft 20,- kalt in einer Stadt mit niederem Durchschnittseinkommen., text ids: [101, 19803, 10308, 27516, 13724, 71799, 136, 123, 10838, 94284, 10130, 10290, 29033, 12044, 10106, 10128, 16976, 10870, 117, 10790, 10223, 11522, 48850, 11605, 16719, 18485, 12392, 119, 19803, 10308, 27516, 13724, 71799, 30518, 11998, 12961, 10726, 119, 21023, 21404, 10359, 10941, 10486, 17356, 19803, 18451, 10525, 25022, 10112, 10848, 10208, 17526, 32383, 113, 16082, 84646, 65381, 10726, 84984, 56109, 114, 10736, 10313, 53228, 10525, 28989, 119, 119, 119, 119, 13740, 11044, 10128, 10313, 93760, 10165, 10515, 35159, 26978, 76936, 11605, 119, 12273, 28435, 14434, 57710, 10130, 79427, 31271, 11354, 104731, 10136, 70195, 119, 12034, 10201, 10726, 10380, 10223, 43667, 12979, 36077, 10478, 62589, 23942, 10163, 102775, 119, 119, 119, 52567, 10478, 62589, 23942, 11337, 12979, 53100, 119, 119, 119, 10915, 19528, 10136, 11124, 10128, 57471, 12553, 10870, 119, 119, 119, 76195, 10107, 119, 119, 119, 145, 24093, 11273, 41525, 11090, 11090, 106, 12610, 10123, 10197, 117, 118, 32383, 10106, 10599, 11878, 10221, 63694, 10451, 17400, 51577, 83866, 20271, 119, 102], original labels: 1 0 1, label ids: [[1], [0], [1]]
06/29/2021 12:12:35 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Ach so, ich trage auch keine Jeans, da bin ich sicher schon in den 80ern indoktriniert worden ...VOM ISLAM. ðŸ˜‚, text ids: [101, 138, 10269, 10380, 117, 12979, 11264, 10525, 10515, 14618, 10766, 10107, 117, 10143, 16292, 12979, 78963, 16363, 10106, 10140, 10832, 13979, 74502, 12495, 24387, 11605, 11425, 119, 119, 119, 159, 37079, 40214, 44376, 11517, 119, 100, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 12:12:35 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: @USER Sie meinen, so wie 1933? Intessant ðŸ¤”, text ids: [101, 137, 10808, 24093, 11583, 99864, 10115, 117, 10380, 10953, 11247, 136, 81687, 18621, 10368, 100, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 12:12:35 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: Jeder Motorrad fahrer sollte automatisch Organspender werden., text ids: [101, 105818, 19440, 18599, 12211, 50935, 17799, 51055, 72154, 54609, 27323, 10615, 119, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/29/2021 12:12:37 - INFO - data_utils.preprocess_bert -   there are nearly 142 batches in an epoch
06/29/2021 12:12:40 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=256, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=256, out_features=2, bias=True)
    (1): Linear(in_features=256, out_features=2, bias=True)
    (2): Linear(in_features=256, out_features=2, bias=True)
  )
)
-----------------------------------------------------------------------------------------

06/29/2021 12:12:40 - INFO - __main__ -   the model has 198,406 trainable parameters
06/29/2021 12:12:40 - INFO - __main__ -   ðŸŒ‹  starting training..
06/29/2021 12:12:52 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:12:52 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:12:52 - INFO - __main__ -   Epoch: 0001 | Time: 0m_11s | train_loss: 1.895 | val_loss: 1.969
06/29/2021 12:12:52 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.551617873651772, 'f1': 0.5493539496760801, 'precision': 0.658794454490657, 'recall': 0.6392565653148391}
06/29/2021 12:12:52 - INFO - __main__ -   	--Found new best val f1
06/29/2021 12:12:53 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 12:13:05 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:13:05 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:13:05 - INFO - __main__ -   Epoch: 0002 | Time: 0m_11s | train_loss: 1.766 | val_loss: 2.253
06/29/2021 12:13:05 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.46533127889060094, 'f1': 0.4457455631932703, 'precision': 0.6472727272727272, 'recall': 0.5847781959656616}
06/29/2021 12:13:05 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 12:13:17 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:13:17 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:13:17 - INFO - __main__ -   Epoch: 0003 | Time: 0m_11s | train_loss: 1.729 | val_loss: 1.912
06/29/2021 12:13:17 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.6933744221879815, 'f1': 0.6884000801009464, 'precision': 0.7048398481466643, 'recall': 0.7270372563115829}
06/29/2021 12:13:17 - INFO - __main__ -   	--Found new best val f1
06/29/2021 12:13:24 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 12:13:36 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:13:36 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:13:36 - INFO - __main__ -   Epoch: 0004 | Time: 0m_11s | train_loss: 1.656 | val_loss: 1.667
06/29/2021 12:13:36 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7565485362095532, 'f1': 0.7219275409480421, 'precision': 0.7291457286432161, 'recall': 0.716940838161289}
06/29/2021 12:13:36 - INFO - __main__ -   	--Found new best val f1
06/29/2021 12:13:44 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 12:13:56 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:13:56 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:13:56 - INFO - __main__ -   Epoch: 0005 | Time: 0m_11s | train_loss: 1.645 | val_loss: 1.725
06/29/2021 12:13:56 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7303543913713405, 'f1': 0.7179697297028842, 'precision': 0.7165544299911746, 'recall': 0.7386613523914238}
06/29/2021 12:13:56 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 12:14:08 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:14:08 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:14:08 - INFO - __main__ -   Epoch: 0006 | Time: 0m_11s | train_loss: 1.613 | val_loss: 1.596
06/29/2021 12:14:08 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7380585516178737, 'f1': 0.7143426748689907, 'precision': 0.7109927996094703, 'recall': 0.719335433670233}
06/29/2021 12:14:08 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 12:14:20 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:14:20 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:14:20 - INFO - __main__ -   Epoch: 0007 | Time: 0m_11s | train_loss: 1.574 | val_loss: 1.787
06/29/2021 12:14:20 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.6949152542372882, 'f1': 0.6903267784846733, 'precision': 0.7081423113658071, 'recall': 0.7303939188903454}
06/29/2021 12:14:20 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 12:14:31 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:14:31 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:14:31 - INFO - __main__ -   Epoch: 0008 | Time: 0m_11s | train_loss: 1.577 | val_loss: 1.552
06/29/2021 12:14:31 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7334360554699538, 'f1': 0.7066839087216061, 'precision': 0.704601835772761, 'recall': 0.7092654459339451}
06/29/2021 12:14:31 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 12:14:43 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:14:43 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:14:43 - INFO - __main__ -   Epoch: 0009 | Time: 0m_11s | train_loss: 1.566 | val_loss: 1.532
06/29/2021 12:14:43 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7334360554699538, 'f1': 0.7060788435511274, 'precision': 0.7043218844038601, 'recall': 0.7081712267940965}
06/29/2021 12:14:43 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 12:14:55 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:14:55 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:14:55 - INFO - __main__ -   Epoch: 0010 | Time: 0m_11s | train_loss: 1.528 | val_loss: 1.729
06/29/2021 12:14:55 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7642526964560863, 'f1': 0.702333738027789, 'precision': 0.7617666021921341, 'recall': 0.6888611663213092}
06/29/2021 12:14:55 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 12:15:07 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:15:07 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:15:07 - INFO - __main__ -   Epoch: 0011 | Time: 0m_11s | train_loss: 1.574 | val_loss: 1.661
06/29/2021 12:15:07 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.736517719568567, 'f1': 0.7224727109043849, 'precision': 0.7193943610257599, 'recall': 0.7400515921681396}
06/29/2021 12:15:07 - INFO - __main__ -   	--Found new best val f1
06/29/2021 12:15:15 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 12:15:27 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:15:27 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:15:27 - INFO - __main__ -   Epoch: 0012 | Time: 0m_11s | train_loss: 1.536 | val_loss: 1.680
06/29/2021 12:15:27 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7395993836671803, 'f1': 0.7287144973670607, 'precision': 0.7280970955467599, 'recall': 0.752236013024908}
06/29/2021 12:15:27 - INFO - __main__ -   	--Found new best val f1
06/29/2021 12:15:34 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 12:15:46 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:15:46 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:15:46 - INFO - __main__ -   Epoch: 0013 | Time: 0m_11s | train_loss: 1.494 | val_loss: 1.626
06/29/2021 12:15:46 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7288135593220338, 'f1': 0.7064857642100935, 'precision': 0.7026807228915662, 'recall': 0.713420307015689}
06/29/2021 12:15:46 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 12:15:58 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:15:58 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:15:58 - INFO - __main__ -   Epoch: 0014 | Time: 0m_11s | train_loss: 1.528 | val_loss: 1.635
06/29/2021 12:15:58 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7180277349768875, 'f1': 0.7080464403971475, 'precision': 0.7104629241726016, 'recall': 0.7336924345582949}
06/29/2021 12:15:58 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 12:16:10 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:16:10 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:16:10 - INFO - __main__ -   Epoch: 0015 | Time: 0m_11s | train_loss: 1.525 | val_loss: 1.582
06/29/2021 12:16:10 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.74884437596302, 'f1': 0.6474906446915497, 'precision': 0.7976823374340949, 'recall': 0.6432581299953483}
06/29/2021 12:16:10 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 12:16:21 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:16:21 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:16:21 - INFO - __main__ -   Epoch: 0016 | Time: 0m_11s | train_loss: 1.502 | val_loss: 1.542
06/29/2021 12:16:21 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7642526964560863, 'f1': 0.7290261840112431, 'precision': 0.7387277670782826, 'recall': 0.7227819596566161}
06/29/2021 12:16:21 - INFO - __main__ -   	--Found new best val f1
06/29/2021 12:16:29 - INFO - __main__ -   	current patience value: 0/10
06/29/2021 12:16:41 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:16:41 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:16:41 - INFO - __main__ -   Epoch: 0017 | Time: 0m_11s | train_loss: 1.490 | val_loss: 1.629
06/29/2021 12:16:41 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7349768875192604, 'f1': 0.7104181799315139, 'precision': 0.7073527911011328, 'recall': 0.714810546792405}
06/29/2021 12:16:41 - INFO - __main__ -   	current patience value: 1/10
06/29/2021 12:16:52 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:16:52 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:16:53 - INFO - __main__ -   Epoch: 0018 | Time: 0m_11s | train_loss: 1.457 | val_loss: 1.661
06/29/2021 12:16:53 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7411402157164869, 'f1': 0.7182460927809476, 'precision': 0.7146252711386811, 'recall': 0.723860320548061}
06/29/2021 12:16:53 - INFO - __main__ -   	current patience value: 2/10
06/29/2021 12:17:04 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:17:04 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:17:04 - INFO - __main__ -   Epoch: 0019 | Time: 0m_11s | train_loss: 1.487 | val_loss: 1.535
06/29/2021 12:17:04 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7395993836671803, 'f1': 0.7140484663616337, 'precision': 0.7115796519410977, 'recall': 0.7172210005497526}
06/29/2021 12:17:04 - INFO - __main__ -   	current patience value: 3/10
06/29/2021 12:17:16 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:17:16 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:17:16 - INFO - __main__ -   Epoch: 0020 | Time: 0m_11s | train_loss: 1.461 | val_loss: 1.530
06/29/2021 12:17:16 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7673343605546995, 'f1': 0.7212016898763887, 'precision': 0.7494908222278098, 'recall': 0.7097993402968664}
06/29/2021 12:17:16 - INFO - __main__ -   	current patience value: 4/10
06/29/2021 12:17:28 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:17:28 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:17:28 - INFO - __main__ -   Epoch: 0021 | Time: 0m_11s | train_loss: 1.470 | val_loss: 1.571
06/29/2021 12:17:28 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7611710323574731, 'f1': 0.7075021007975761, 'precision': 0.7467735470941883, 'recall': 0.6952784708419673}
06/29/2021 12:17:28 - INFO - __main__ -   	current patience value: 5/10
06/29/2021 12:17:40 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:17:40 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:17:40 - INFO - __main__ -   Epoch: 0022 | Time: 0m_11s | train_loss: 1.447 | val_loss: 1.540
06/29/2021 12:17:40 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.765793528505393, 'f1': 0.71893234865062, 'precision': 0.747803529500871, 'recall': 0.7075368968579524}
06/29/2021 12:17:40 - INFO - __main__ -   	current patience value: 6/10
06/29/2021 12:17:52 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:17:52 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:17:52 - INFO - __main__ -   Epoch: 0023 | Time: 0m_11s | train_loss: 1.425 | val_loss: 1.792
06/29/2021 12:17:52 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.6147919876733436, 'f1': 0.6146373672309944, 'precision': 0.6975023983952555, 'recall': 0.6915306381359158}
06/29/2021 12:17:52 - INFO - __main__ -   	current patience value: 7/10
06/29/2021 12:18:04 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:18:04 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:18:04 - INFO - __main__ -   Epoch: 0024 | Time: 0m_11s | train_loss: 1.446 | val_loss: 1.555
06/29/2021 12:18:04 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7627118644067796, 'f1': 0.7116986661743665, 'precision': 0.7467284837403683, 'recall': 0.6997293525605786}
06/29/2021 12:18:04 - INFO - __main__ -   	current patience value: 8/10
06/29/2021 12:18:16 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:18:16 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:18:16 - INFO - __main__ -   Epoch: 0025 | Time: 0m_11s | train_loss: 1.412 | val_loss: 1.659
06/29/2021 12:18:16 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7349768875192604, 'f1': 0.7152056332278804, 'precision': 0.7109306757722544, 'recall': 0.7246585190510424}
06/29/2021 12:18:16 - INFO - __main__ -   	current patience value: 9/10
06/29/2021 12:18:28 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:18:28 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:18:28 - INFO - __main__ -   Epoch: 0026 | Time: 0m_11s | train_loss: 1.437 | val_loss: 1.523
06/29/2021 12:18:28 - INFO - __main__ -   ðŸ”¥ val metrics ðŸ”¥ {'acc': 0.7473035439137135, 'f1': 0.7099140938426652, 'precision': 0.7184513724161301, 'recall': 0.7044603966676534}
06/29/2021 12:18:28 - INFO - __main__ -   	current patience value: 10/10
06/29/2021 12:18:28 - INFO - __main__ -   	--STOPPING EARLY
06/29/2021 12:18:28 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/GermEval2021/models/cv_fold_D_multitask/bert-base-multilingual-cased/trg_fc256_lr0.0005_frozen
06/29/2021 12:18:28 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/GermEval2021/models/cv_fold_D_multitask/bert-base-multilingual-cased/trg_fc256_lr0.0005_frozen
06/29/2021 12:18:32 - INFO - training_utils.train_loop -   postprocessing targets..
06/29/2021 12:18:32 - INFO - training_utils.train_loop -   postprocessing predictions..
06/29/2021 12:18:32 - INFO - __main__ -   best_val_loss: 1.542
06/29/2021 12:18:32 - INFO - __main__ -   ðŸ”¥ best validation metrics ðŸ”¥ {'acc': 0.7642526964560863, 'f1': 0.7290261840112431, 'precision': 0.7387277670782826, 'recall': 0.7227819596566161}
