06/28/2021 03:43:17 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

06/28/2021 03:43:17 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	train_data_dir: ../data/GermEval21_Toxic_Train/
	dev_data_dir: ../data/GermEval21_Toxic_Train/
	test_data_dir: None
	label_col_names: Sub1_Toxic,Sub2_Engaging,Sub3_FactClaiming
	eval_label_col_names: Sub3_FactClaiming
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 128
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs/multitask/bert-base-multilingual-cased/trg_fc128_lr0.05_frozen.txt
	random_seed: 123
	lr: 0.05
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/GermEval2021/models/multitask/bert-base-multilingual-cased/trg_fc128_lr0.05_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

06/28/2021 03:43:18 - INFO - __main__ -   device: cuda
06/28/2021 03:43:18 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
06/28/2021 03:43:18 - WARNING - data_utils.bert_data -   trimming sentence 38 of length 2491 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 03:43:18 - WARNING - data_utils.bert_data -   trimming sentence 252 of length 752 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 03:43:19 - WARNING - data_utils.bert_data -   trimming sentence 332 of length 1645 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 03:43:19 - WARNING - data_utils.bert_data -   trimming sentence 1735 of length 2626 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 03:43:20 - WARNING - data_utils.bert_data -   trimming sentence 2479 of length 516 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 03:43:20 - WARNING - data_utils.bert_data -   trimming sentence 110 of length 1550 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 03:43:20 - INFO - data_utils.preprocess_bert -   num train samples: 2595
06/28/2021 03:43:20 - INFO - data_utils.preprocess_bert -   num val samples: 649
06/28/2021 03:43:20 - INFO - data_utils.preprocess_bert -   num test samples: None
06/28/2021 03:43:20 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
06/28/2021 03:43:20 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
06/28/2021 03:43:21 - INFO - data_utils.preprocess_bert -   train OOV: 505 (0.39%) out of 130793 running tokens are OOV
06/28/2021 03:43:21 - INFO - data_utils.preprocess_bert -   val OOV: 112 (0.34%) out of 32806 running tokens are OOV
06/28/2021 03:43:21 - INFO - data_utils.preprocess_bert -   look at some train samples üëÄ
06/28/2021 03:43:21 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: Es sollte doch hei√üen Sie wissen doch. Wissen ist Macht. Nichts wissen macht nix.Nun den quasseln kann Jeder. Handeln ist angesagt., text ids: [101, 10912, 17799, 21131, 10261, 10116, 20284, 11583, 16512, 10917, 21131, 119, 77783, 10298, 42601, 119, 52397, 10107, 16512, 10917, 26433, 10414, 10686, 119, 34289, 10140, 14517, 49235, 10115, 12382, 105818, 119, 41077, 10115, 10298, 110576, 50804, 119, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/28/2021 03:43:21 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: Das ist doch wieder eine l√§cherliches Gequatsche,wo nix bei rauskommt., text ids: [101, 10672, 10298, 21131, 12426, 10359, 180, 105623, 37179, 144, 10112, 32973, 41290, 10112, 117, 12796, 10414, 10686, 10492, 11859, 106239, 45011, 119, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/28/2021 03:43:21 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Der Hank geht mir derma√üen auf die Eier., text ids: [101, 10445, 42342, 21952, 36077, 10118, 10369, 20284, 10329, 10128, 35278, 10165, 119, 102], original labels: 1 0 0, label ids: [[1], [0], [0]]
06/28/2021 03:43:21 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: Verfassungsschonendere Variante? Seit wann hat unsere Verfassung G√ºltigkeit f√ºr Tote? Wir haben noch nicht mal Tierrecht in unserer Verfassung von rechten f√ºr Tote ganz zu Schweigen. Die Verfassung wird durch Spahn seinen Vorschlag ja nicht mal anger√ºhrt., text ids: [101, 61585, 13420, 56238, 27323, 10112, 57674, 136, 14050, 11471, 13538, 11250, 15826, 12122, 61585, 144, 23389, 25425, 10307, 22768, 10112, 136, 51732, 13289, 11230, 10726, 15189, 66655, 20913, 10106, 15826, 22981, 61585, 10166, 35320, 10307, 22768, 10112, 22762, 10304, 55260, 10237, 61512, 11280, 119, 10236, 61585, 10790, 10714, 64766, 15797, 12724, 28099, 51429, 10201, 10726, 15189, 46464, 12369, 30525, 119, 102], original labels: 0 1 1, label ids: [[0], [1], [1]]
06/28/2021 03:43:21 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: @USER ......sag doch bitte einfach genau, WEN und WAS du ansprichst!, text ids: [101, 137, 10808, 24093, 119, 119, 119, 119, 119, 119, 10148, 10240, 21131, 17684, 10216, 54068, 46871, 117, 160, 50655, 10130, 160, 38025, 10168, 11744, 101319, 42008, 10123, 106, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/28/2021 03:43:22 - INFO - data_utils.preprocess_bert -   there are nearly 141 batches in an epoch
06/28/2021 03:43:26 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=128, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=128, out_features=2, bias=True)
    (1): Linear(in_features=128, out_features=2, bias=True)
    (2): Linear(in_features=128, out_features=2, bias=True)
  )
)
-----------------------------------------------------------------------------------------

06/28/2021 03:43:26 - INFO - __main__ -   the model has 99,206 trainable parameters
06/28/2021 03:43:26 - INFO - __main__ -   üåã  starting training..
06/28/2021 03:43:37 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:43:37 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:43:37 - INFO - __main__ -   Epoch: 0001 | Time: 0m_11s | train_loss: 4.036 | val_loss: 3.040
06/28/2021 03:43:37 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.3405238828967643, 'f1': 0.2540229885057471, 'precision': 0.17026194144838214, 'recall': 0.5}
06/28/2021 03:43:37 - INFO - __main__ -   	--Found new best val f1
06/28/2021 03:43:38 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 03:43:49 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:43:49 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:43:49 - INFO - __main__ -   Epoch: 0002 | Time: 0m_11s | train_loss: 2.381 | val_loss: 2.632
06/28/2021 03:43:49 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.423728813559322, 'f1': 0.386931703374419, 'precision': 0.6525800956201572, 'recall': 0.5587072355901382}
06/28/2021 03:43:49 - INFO - __main__ -   	--Found new best val f1
06/28/2021 03:44:01 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 03:44:12 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:44:12 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:44:12 - INFO - __main__ -   Epoch: 0003 | Time: 0m_11s | train_loss: 2.067 | val_loss: 3.048
06/28/2021 03:44:12 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.34514637904468415, 'f1': 0.2618625176288613, 'precision': 0.6710526315789473, 'recall': 0.5035046728971962}
06/28/2021 03:44:12 - INFO - __main__ -   	current patience value: 1/10
06/28/2021 03:44:24 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:44:24 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:44:24 - INFO - __main__ -   Epoch: 0004 | Time: 0m_11s | train_loss: 2.267 | val_loss: 2.600
06/28/2021 03:44:24 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.34514637904468415, 'f1': 0.2618625176288613, 'precision': 0.6710526315789473, 'recall': 0.5035046728971962}
06/28/2021 03:44:24 - INFO - __main__ -   	current patience value: 2/10
06/28/2021 03:44:35 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:44:35 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:44:35 - INFO - __main__ -   Epoch: 0005 | Time: 0m_11s | train_loss: 2.102 | val_loss: 2.570
06/28/2021 03:44:35 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.3436055469953775, 'f1': 0.2592594577215732, 'precision': 0.6707882534775889, 'recall': 0.5023364485981309}
06/28/2021 03:44:35 - INFO - __main__ -   	current patience value: 3/10
06/28/2021 03:44:47 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:44:47 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:44:47 - INFO - __main__ -   Epoch: 0006 | Time: 0m_11s | train_loss: 2.010 | val_loss: 3.002
06/28/2021 03:44:47 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.34668721109399075, 'f1': 0.2644555641091438, 'precision': 0.6713178294573643, 'recall': 0.5046728971962616}
06/28/2021 03:44:47 - INFO - __main__ -   	current patience value: 4/10
06/28/2021 03:44:59 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:44:59 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:44:59 - INFO - __main__ -   Epoch: 0007 | Time: 0m_11s | train_loss: 2.057 | val_loss: 3.472
06/28/2021 03:44:59 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.3405238828967643, 'f1': 0.2540229885057471, 'precision': 0.17026194144838214, 'recall': 0.5}
06/28/2021 03:44:59 - INFO - __main__ -   	current patience value: 5/10
06/28/2021 03:45:11 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:45:11 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:45:11 - INFO - __main__ -   Epoch: 0008 | Time: 0m_11s | train_loss: 2.079 | val_loss: 2.737
06/28/2021 03:45:11 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.3420647149460709, 'f1': 0.25664630727921867, 'precision': 0.6705246913580247, 'recall': 0.5011682242990654}
06/28/2021 03:45:11 - INFO - __main__ -   	current patience value: 6/10
06/28/2021 03:45:22 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:45:22 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:45:22 - INFO - __main__ -   Epoch: 0009 | Time: 0m_11s | train_loss: 2.400 | val_loss: 2.676
06/28/2021 03:45:22 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.3405238828967643, 'f1': 0.2540229885057471, 'precision': 0.17026194144838214, 'recall': 0.5}
06/28/2021 03:45:22 - INFO - __main__ -   	current patience value: 7/10
06/28/2021 03:45:34 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:45:34 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:45:34 - INFO - __main__ -   Epoch: 0010 | Time: 0m_11s | train_loss: 2.048 | val_loss: 2.843
06/28/2021 03:45:34 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.3405238828967643, 'f1': 0.2540229885057471, 'precision': 0.17026194144838214, 'recall': 0.5}
06/28/2021 03:45:34 - INFO - __main__ -   	current patience value: 8/10
06/28/2021 03:45:46 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:45:46 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:45:46 - INFO - __main__ -   Epoch: 0011 | Time: 0m_11s | train_loss: 2.041 | val_loss: 2.754
06/28/2021 03:45:46 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.3405238828967643, 'f1': 0.2540229885057471, 'precision': 0.17026194144838214, 'recall': 0.5}
06/28/2021 03:45:46 - INFO - __main__ -   	current patience value: 9/10
06/28/2021 03:45:58 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:45:58 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:45:58 - INFO - __main__ -   Epoch: 0012 | Time: 0m_11s | train_loss: 2.045 | val_loss: 2.835
06/28/2021 03:45:58 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.3405238828967643, 'f1': 0.2540229885057471, 'precision': 0.17026194144838214, 'recall': 0.5}
06/28/2021 03:45:58 - INFO - __main__ -   	current patience value: 10/10
06/28/2021 03:45:58 - INFO - __main__ -   	--STOPPING EARLY
06/28/2021 03:45:58 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/GermEval2021/models/multitask/bert-base-multilingual-cased/trg_fc128_lr0.05_frozen
06/28/2021 03:45:58 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/GermEval2021/models/multitask/bert-base-multilingual-cased/trg_fc128_lr0.05_frozen
06/28/2021 03:46:02 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:46:02 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:46:02 - INFO - __main__ -   best_val_loss: 2.632
06/28/2021 03:46:02 - INFO - __main__ -   üî• best validation metrics üî• {'acc': 0.423728813559322, 'f1': 0.386931703374419, 'precision': 0.6525800956201572, 'recall': 0.5587072355901382}
