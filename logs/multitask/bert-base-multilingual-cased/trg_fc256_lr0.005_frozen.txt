06/28/2021 03:49:48 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

06/28/2021 03:49:48 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	train_data_dir: ../data/GermEval21_Toxic_Train/
	dev_data_dir: ../data/GermEval21_Toxic_Train/
	test_data_dir: None
	label_col_names: Sub1_Toxic,Sub2_Engaging,Sub3_FactClaiming
	eval_label_col_names: Sub3_FactClaiming
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-multilingual-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 256
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs/multitask/bert-base-multilingual-cased/trg_fc256_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/GermEval2021/models/multitask/bert-base-multilingual-cased/trg_fc256_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-multilingual-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

06/28/2021 03:49:49 - INFO - __main__ -   device: cuda
06/28/2021 03:49:49 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-multilingual-cased
06/28/2021 03:49:49 - WARNING - data_utils.bert_data -   trimming sentence 38 of length 2491 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 03:49:49 - WARNING - data_utils.bert_data -   trimming sentence 252 of length 752 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 03:49:49 - WARNING - data_utils.bert_data -   trimming sentence 332 of length 1645 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 03:49:50 - WARNING - data_utils.bert_data -   trimming sentence 1735 of length 2626 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 03:49:51 - WARNING - data_utils.bert_data -   trimming sentence 2479 of length 516 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 03:49:51 - WARNING - data_utils.bert_data -   trimming sentence 110 of length 1550 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 03:49:51 - INFO - data_utils.preprocess_bert -   num train samples: 2595
06/28/2021 03:49:51 - INFO - data_utils.preprocess_bert -   num val samples: 649
06/28/2021 03:49:51 - INFO - data_utils.preprocess_bert -   num test samples: None
06/28/2021 03:49:51 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
06/28/2021 03:49:51 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
06/28/2021 03:49:51 - INFO - data_utils.preprocess_bert -   train OOV: 505 (0.39%) out of 130793 running tokens are OOV
06/28/2021 03:49:52 - INFO - data_utils.preprocess_bert -   val OOV: 112 (0.34%) out of 32806 running tokens are OOV
06/28/2021 03:49:52 - INFO - data_utils.preprocess_bert -   look at some train samples üëÄ
06/28/2021 03:49:52 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: Es sollte doch hei√üen Sie wissen doch. Wissen ist Macht. Nichts wissen macht nix.Nun den quasseln kann Jeder. Handeln ist angesagt., text ids: [101, 10912, 17799, 21131, 10261, 10116, 20284, 11583, 16512, 10917, 21131, 119, 77783, 10298, 42601, 119, 52397, 10107, 16512, 10917, 26433, 10414, 10686, 119, 34289, 10140, 14517, 49235, 10115, 12382, 105818, 119, 41077, 10115, 10298, 110576, 50804, 119, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/28/2021 03:49:52 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: Das ist doch wieder eine l√§cherliches Gequatsche,wo nix bei rauskommt., text ids: [101, 10672, 10298, 21131, 12426, 10359, 180, 105623, 37179, 144, 10112, 32973, 41290, 10112, 117, 12796, 10414, 10686, 10492, 11859, 106239, 45011, 119, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/28/2021 03:49:52 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Der Hank geht mir derma√üen auf die Eier., text ids: [101, 10445, 42342, 21952, 36077, 10118, 10369, 20284, 10329, 10128, 35278, 10165, 119, 102], original labels: 1 0 0, label ids: [[1], [0], [0]]
06/28/2021 03:49:52 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: Verfassungsschonendere Variante? Seit wann hat unsere Verfassung G√ºltigkeit f√ºr Tote? Wir haben noch nicht mal Tierrecht in unserer Verfassung von rechten f√ºr Tote ganz zu Schweigen. Die Verfassung wird durch Spahn seinen Vorschlag ja nicht mal anger√ºhrt., text ids: [101, 61585, 13420, 56238, 27323, 10112, 57674, 136, 14050, 11471, 13538, 11250, 15826, 12122, 61585, 144, 23389, 25425, 10307, 22768, 10112, 136, 51732, 13289, 11230, 10726, 15189, 66655, 20913, 10106, 15826, 22981, 61585, 10166, 35320, 10307, 22768, 10112, 22762, 10304, 55260, 10237, 61512, 11280, 119, 10236, 61585, 10790, 10714, 64766, 15797, 12724, 28099, 51429, 10201, 10726, 15189, 46464, 12369, 30525, 119, 102], original labels: 0 1 1, label ids: [[0], [1], [1]]
06/28/2021 03:49:52 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: @USER ......sag doch bitte einfach genau, WEN und WAS du ansprichst!, text ids: [101, 137, 10808, 24093, 119, 119, 119, 119, 119, 119, 10148, 10240, 21131, 17684, 10216, 54068, 46871, 117, 160, 50655, 10130, 160, 38025, 10168, 11744, 101319, 42008, 10123, 106, 102], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/28/2021 03:49:53 - INFO - data_utils.preprocess_bert -   there are nearly 141 batches in an epoch
06/28/2021 03:49:56 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(119547, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=256, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=256, out_features=2, bias=True)
    (1): Linear(in_features=256, out_features=2, bias=True)
    (2): Linear(in_features=256, out_features=2, bias=True)
  )
)
-----------------------------------------------------------------------------------------

06/28/2021 03:49:56 - INFO - __main__ -   the model has 198,406 trainable parameters
06/28/2021 03:49:56 - INFO - __main__ -   üåã  starting training..
06/28/2021 03:50:08 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:50:08 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:50:08 - INFO - __main__ -   Epoch: 0001 | Time: 0m_11s | train_loss: 1.925 | val_loss: 2.115
06/28/2021 03:50:08 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6764252696456087, 'f1': 0.6710450095580143, 'precision': 0.6872473302822273, 'recall': 0.7076214741827715}
06/28/2021 03:50:08 - INFO - __main__ -   	--Found new best val f1
06/28/2021 03:50:09 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 03:50:20 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:50:20 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:50:20 - INFO - __main__ -   Epoch: 0002 | Time: 0m_11s | train_loss: 1.758 | val_loss: 2.589
06/28/2021 03:50:20 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.5639445300462249, 'f1': 0.5631313671901945, 'precision': 0.6538326061267158, 'recall': 0.6431312640081195}
06/28/2021 03:50:20 - INFO - __main__ -   	current patience value: 1/10
06/28/2021 03:50:32 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:50:32 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:50:32 - INFO - __main__ -   Epoch: 0003 | Time: 0m_11s | train_loss: 1.751 | val_loss: 2.111
06/28/2021 03:50:32 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.5993836671802774, 'f1': 0.5990400152076799, 'precision': 0.6861087115422952, 'recall': 0.6776599568655644}
06/28/2021 03:50:32 - INFO - __main__ -   	current patience value: 2/10
06/28/2021 03:50:43 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:50:43 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:50:43 - INFO - __main__ -   Epoch: 0004 | Time: 0m_11s | train_loss: 1.693 | val_loss: 1.861
06/28/2021 03:50:43 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7257318952234206, 'f1': 0.71294032283715, 'precision': 0.7115225863426059, 'recall': 0.7329682412145304}
06/28/2021 03:50:43 - INFO - __main__ -   	--Found new best val f1
06/28/2021 03:50:54 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 03:51:06 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:51:06 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:51:06 - INFO - __main__ -   Epoch: 0005 | Time: 0m_11s | train_loss: 1.648 | val_loss: 1.547
06/28/2021 03:51:06 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7580893682588598, 'f1': 0.7253743009231184, 'precision': 0.7306785635602555, 'recall': 0.7213917198799003}
06/28/2021 03:51:06 - INFO - __main__ -   	--Found new best val f1
06/28/2021 03:51:13 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 03:51:25 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:51:25 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:51:25 - INFO - __main__ -   Epoch: 0006 | Time: 0m_11s | train_loss: 1.601 | val_loss: 2.121
06/28/2021 03:51:25 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.674884437596302, 'f1': 0.6739896915806639, 'precision': 0.7190902757041904, 'recall': 0.7327145092400726}
06/28/2021 03:51:25 - INFO - __main__ -   	current patience value: 1/10
06/28/2021 03:51:36 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:51:36 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:51:36 - INFO - __main__ -   Epoch: 0007 | Time: 0m_11s | train_loss: 1.604 | val_loss: 1.628
06/28/2021 03:51:36 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.736517719568567, 'f1': 0.7281292487843118, 'precision': 0.7315999619735716, 'recall': 0.7575590984057174}
06/28/2021 03:51:36 - INFO - __main__ -   	--Found new best val f1
06/28/2021 03:51:47 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 03:51:58 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:51:58 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:51:58 - INFO - __main__ -   Epoch: 0008 | Time: 0m_11s | train_loss: 1.609 | val_loss: 1.527
06/28/2021 03:51:58 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.765793528505393, 'f1': 0.7344402808287032, 'precision': 0.7395517468688201, 'recall': 0.7305154987947731}
06/28/2021 03:51:58 - INFO - __main__ -   	--Found new best val f1
06/28/2021 03:52:04 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 03:52:16 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:52:16 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:52:16 - INFO - __main__ -   Epoch: 0009 | Time: 0m_11s | train_loss: 1.576 | val_loss: 1.515
06/28/2021 03:52:16 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7812018489984591, 'f1': 0.739754885349599, 'precision': 0.7658222386587772, 'recall': 0.7279728929673954}
06/28/2021 03:52:16 - INFO - __main__ -   	--Found new best val f1
06/28/2021 03:52:24 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 03:52:35 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:52:35 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:52:35 - INFO - __main__ -   Epoch: 0010 | Time: 0m_11s | train_loss: 1.555 | val_loss: 1.524
06/28/2021 03:52:35 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7827426810477658, 'f1': 0.7476567476567477, 'precision': 0.7624944843122228, 'recall': 0.7389890895250983}
06/28/2021 03:52:35 - INFO - __main__ -   	--Found new best val f1
06/28/2021 03:52:46 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 03:52:57 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:52:57 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:52:57 - INFO - __main__ -   Epoch: 0011 | Time: 0m_11s | train_loss: 1.608 | val_loss: 1.785
06/28/2021 03:52:57 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7288135593220338, 'f1': 0.7200227464360649, 'precision': 0.7234424920127795, 'recall': 0.7484353194908445}
06/28/2021 03:52:57 - INFO - __main__ -   	current patience value: 1/10
06/28/2021 03:53:08 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:53:08 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:53:08 - INFO - __main__ -   Epoch: 0012 | Time: 0m_11s | train_loss: 1.562 | val_loss: 1.637
06/28/2021 03:53:08 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7519260400616333, 'f1': 0.7302430649679226, 'precision': 0.7262902246508804, 'recall': 0.7364147672009134}
06/28/2021 03:53:08 - INFO - __main__ -   	current patience value: 2/10
06/28/2021 03:53:20 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:53:20 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:53:20 - INFO - __main__ -   Epoch: 0013 | Time: 0m_11s | train_loss: 1.573 | val_loss: 1.511
06/28/2021 03:53:20 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7750385208012327, 'f1': 0.7193970623075101, 'precision': 0.7731273804485823, 'recall': 0.7046982703937075}
06/28/2021 03:53:20 - INFO - __main__ -   	current patience value: 3/10
06/28/2021 03:53:31 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:53:31 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:53:32 - INFO - __main__ -   Epoch: 0014 | Time: 0m_11s | train_loss: 1.516 | val_loss: 1.648
06/28/2021 03:53:32 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7688751926040062, 'f1': 0.7426999196515414, 'precision': 0.7426999196515414, 'recall': 0.7426999196515414}
06/28/2021 03:53:32 - INFO - __main__ -   	current patience value: 4/10
06/28/2021 03:53:43 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:53:43 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:53:43 - INFO - __main__ -   Epoch: 0015 | Time: 0m_11s | train_loss: 1.574 | val_loss: 1.620
06/28/2021 03:53:43 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7149460708782742, 'f1': 0.7052006374040274, 'precision': 0.708235797887525, 'recall': 0.7313559859601642}
06/28/2021 03:53:43 - INFO - __main__ -   	current patience value: 5/10
06/28/2021 03:53:55 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:53:55 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:53:55 - INFO - __main__ -   Epoch: 0016 | Time: 0m_11s | train_loss: 1.525 | val_loss: 1.565
06/28/2021 03:53:55 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7534668721109399, 'f1': 0.737724792887452, 'precision': 0.7330072392878106, 'recall': 0.7518078403180107}
06/28/2021 03:53:55 - INFO - __main__ -   	current patience value: 6/10
06/28/2021 03:54:07 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:54:07 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:54:07 - INFO - __main__ -   Epoch: 0017 | Time: 0m_11s | train_loss: 1.551 | val_loss: 1.636
06/28/2021 03:54:07 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7919876733436055, 'f1': 0.7522207233576828, 'precision': 0.7802630927630927, 'recall': 0.7394331204803992}
06/28/2021 03:54:07 - INFO - __main__ -   	--Found new best val f1
06/28/2021 03:54:17 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 03:54:29 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:54:29 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:54:29 - INFO - __main__ -   Epoch: 0018 | Time: 0m_11s | train_loss: 1.514 | val_loss: 1.574
06/28/2021 03:54:29 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7796610169491526, 'f1': 0.7283779710077061, 'precision': 0.775211743239195, 'recall': 0.7136740389901468}
06/28/2021 03:54:29 - INFO - __main__ -   	current patience value: 1/10
06/28/2021 03:54:40 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:54:40 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:54:40 - INFO - __main__ -   Epoch: 0019 | Time: 0m_11s | train_loss: 1.558 | val_loss: 1.634
06/28/2021 03:54:40 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7719568567026194, 'f1': 0.7165202814374085, 'precision': 0.7672278997040263, 'recall': 0.7023618217955766}
06/28/2021 03:54:40 - INFO - __main__ -   	current patience value: 2/10
06/28/2021 03:54:52 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:54:52 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:54:52 - INFO - __main__ -   Epoch: 0020 | Time: 0m_11s | train_loss: 1.523 | val_loss: 1.600
06/28/2021 03:54:52 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7580893682588598, 'f1': 0.7285784685872592, 'precision': 0.7305134815769685, 'recall': 0.7268628155791432}
06/28/2021 03:54:52 - INFO - __main__ -   	current patience value: 3/10
06/28/2021 03:55:03 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:55:03 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:55:03 - INFO - __main__ -   Epoch: 0021 | Time: 0m_11s | train_loss: 1.531 | val_loss: 1.689
06/28/2021 03:55:03 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7673343605546995, 'f1': 0.7195035735036939, 'precision': 0.7509905419222904, 'recall': 0.7076109020171693}
06/28/2021 03:55:03 - INFO - __main__ -   	current patience value: 4/10
06/28/2021 03:55:15 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:55:15 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:55:15 - INFO - __main__ -   Epoch: 0022 | Time: 0m_11s | train_loss: 1.535 | val_loss: 1.767
06/28/2021 03:55:15 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6856702619414484, 'f1': 0.6816424284395199, 'precision': 0.7024480214621059, 'recall': 0.7233845730959529}
06/28/2021 03:55:15 - INFO - __main__ -   	current patience value: 5/10
06/28/2021 03:55:27 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:55:27 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:55:27 - INFO - __main__ -   Epoch: 0023 | Time: 0m_11s | train_loss: 1.497 | val_loss: 1.531
06/28/2021 03:55:27 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7796610169491526, 'f1': 0.7274750767152652, 'precision': 0.7765057755775577, 'recall': 0.7125798198502982}
06/28/2021 03:55:27 - INFO - __main__ -   	current patience value: 6/10
06/28/2021 03:55:39 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:55:39 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:55:39 - INFO - __main__ -   Epoch: 0024 | Time: 0m_11s | train_loss: 1.484 | val_loss: 1.623
06/28/2021 03:55:39 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.765793528505393, 'f1': 0.7381119252415844, 'precision': 0.739215309779826, 'recall': 0.7370808136338648}
06/28/2021 03:55:39 - INFO - __main__ -   	current patience value: 7/10
06/28/2021 03:55:50 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:55:50 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:55:50 - INFO - __main__ -   Epoch: 0025 | Time: 0m_11s | train_loss: 1.500 | val_loss: 1.548
06/28/2021 03:55:50 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7642526964560863, 'f1': 0.731060595801385, 'precision': 0.7381180400890869, 'recall': 0.7260646170761619}
06/28/2021 03:55:50 - INFO - __main__ -   	current patience value: 8/10
06/28/2021 03:56:02 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:56:02 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:56:02 - INFO - __main__ -   Epoch: 0026 | Time: 0m_11s | train_loss: 1.513 | val_loss: 1.564
06/28/2021 03:56:02 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7719568567026194, 'f1': 0.74204533247395, 'precision': 0.7465352919317114, 'recall': 0.7384710534105806}
06/28/2021 03:56:02 - INFO - __main__ -   	current patience value: 9/10
06/28/2021 03:56:14 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:56:14 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:56:14 - INFO - __main__ -   Epoch: 0027 | Time: 0m_11s | train_loss: 1.482 | val_loss: 1.679
06/28/2021 03:56:14 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7596302003081664, 'f1': 0.7335628118486706, 'precision': 0.7325995807127883, 'recall': 0.7345963547173002}
06/28/2021 03:56:14 - INFO - __main__ -   	current patience value: 10/10
06/28/2021 03:56:14 - INFO - __main__ -   	--STOPPING EARLY
06/28/2021 03:56:14 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/GermEval2021/models/multitask/bert-base-multilingual-cased/trg_fc256_lr0.005_frozen
06/28/2021 03:56:14 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/GermEval2021/models/multitask/bert-base-multilingual-cased/trg_fc256_lr0.005_frozen
06/28/2021 03:56:18 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 03:56:18 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 03:56:18 - INFO - __main__ -   best_val_loss: 1.636
06/28/2021 03:56:18 - INFO - __main__ -   üî• best validation metrics üî• {'acc': 0.7919876733436055, 'f1': 0.7522207233576828, 'precision': 0.7802630927630927, 'recall': 0.7394331204803992}
