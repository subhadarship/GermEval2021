06/28/2021 01:43:50 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

06/28/2021 01:43:50 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	train_data_dir: ../data/GermEval21_Toxic_Train/
	dev_data_dir: ../data/GermEval21_Toxic_Train/
	test_data_dir: None
	label_col_names: Sub3_FactClaiming
	eval_label_col_names: Sub3_FactClaiming
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-german-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 128
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs/monotask/bert-base-german-cased/trg_fc128_lr0.005_frozen.txt
	random_seed: 123
	lr: 0.005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/GermEval2021/models/monotask/bert-base-german-cased/trg_fc128_lr0.005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-german-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

06/28/2021 01:43:51 - INFO - __main__ -   device: cuda
06/28/2021 01:43:51 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-german-cased
06/28/2021 01:43:51 - WARNING - data_utils.bert_data -   trimming sentence 38 of length 2708 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 01:43:52 - WARNING - data_utils.bert_data -   trimming sentence 252 of length 667 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 01:43:52 - WARNING - data_utils.bert_data -   trimming sentence 332 of length 1615 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 01:43:52 - WARNING - data_utils.bert_data -   trimming sentence 1735 of length 2871 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 01:43:53 - WARNING - data_utils.bert_data -   trimming sentence 110 of length 1522 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 01:43:53 - INFO - data_utils.preprocess_bert -   num train samples: 2595
06/28/2021 01:43:53 - INFO - data_utils.preprocess_bert -   num val samples: 649
06/28/2021 01:43:53 - INFO - data_utils.preprocess_bert -   num test samples: None
06/28/2021 01:43:53 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
06/28/2021 01:43:53 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
06/28/2021 01:43:54 - INFO - data_utils.preprocess_bert -   train OOV: 567 (0.49%) out of 116734 running tokens are OOV
06/28/2021 01:43:54 - INFO - data_utils.preprocess_bert -   val OOV: 124 (0.42%) out of 29394 running tokens are OOV
06/28/2021 01:43:54 - INFO - data_utils.preprocess_bert -   look at some train samples üëÄ
06/28/2021 01:43:54 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: Es sollte doch hei√üen Sie wissen doch. Wissen ist Macht. Nichts wissen macht nix.Nun den quasseln kann Jeder. Handeln ist angesagt., text ids: [3, 482, 1547, 1575, 11619, 371, 5029, 1575, 26914, 6311, 127, 4129, 26914, 14838, 5029, 2241, 53, 2713, 26914, 4692, 86, 2510, 7731, 26898, 479, 8854, 26914, 11013, 127, 3452, 1063, 26914, 4], original labels: 0, label ids: [[0]]
06/28/2021 01:43:54 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: Das ist doch wieder eine l√§cherliches Gequatsche,wo nix bei rauskommt., text ids: [3, 295, 127, 1575, 525, 155, 1567, 1319, 2279, 241, 633, 15833, 26897, 26918, 743, 53, 2713, 178, 12227, 6886, 26914, 4], original labels: 0, label ids: [[0]]
06/28/2021 01:43:54 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Der Hank geht mir derma√üen auf die Eier., text ids: [3, 233, 5198, 26917, 1398, 3667, 21, 7012, 115, 30, 11903, 26914, 4], original labels: 0, label ids: [[0]]
06/28/2021 01:43:54 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: Verfassungsschonendere Variante? Seit wann hat unsere Verfassung G√ºltigkeit f√ºr Tote? Wir haben noch nicht mal Tierrecht in unserer Verfassung von rechten f√ºr Tote ganz zu Schweigen. Die Verfassung wird durch Spahn seinen Vorschlag ja nicht mal anger√ºhrt., text ids: [3, 5290, 25297, 6638, 26897, 10336, 26972, 1232, 10118, 193, 6712, 8178, 22699, 142, 16847, 26972, 655, 474, 357, 149, 2723, 3817, 652, 50, 8174, 8178, 88, 6642, 142, 16847, 1346, 81, 26551, 26914, 125, 8178, 292, 261, 276, 558, 800, 10021, 3278, 149, 2723, 19365, 8843, 26914, 4], original labels: 1, label ids: [[1]]
06/28/2021 01:43:54 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: @USER ......sag doch bitte einfach genau, WEN und WAS du ansprichst!, text ids: [3, 26991, 960, 8242, 26914, 26914, 26914, 26914, 26914, 26914, 24925, 26908, 1575, 18976, 2774, 2971, 26918, 79, 14972, 42, 79, 12312, 4547, 9460, 737, 20, 13, 26982, 4], original labels: 0, label ids: [[0]]
06/28/2021 01:43:56 - INFO - data_utils.preprocess_bert -   there are nearly 126 batches in an epoch
06/28/2021 01:43:58 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30000, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=128, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=128, out_features=2, bias=True)
  )
)
-----------------------------------------------------------------------------------------

06/28/2021 01:43:58 - INFO - __main__ -   the model has 98,690 trainable parameters
06/28/2021 01:43:58 - INFO - __main__ -   üåã  starting training..
06/28/2021 01:44:07 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:44:07 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:44:07 - INFO - __main__ -   Epoch: 0001 | Time: 0m_9s | train_loss: 0.580 | val_loss: 0.865
06/28/2021 01:44:07 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.50231124807396, 'f1': 0.48813660304197176, 'precision': 0.6847262580900806, 'recall': 0.6182866748424747}
06/28/2021 01:44:07 - INFO - __main__ -   	--Found new best val f1
06/28/2021 01:44:08 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 01:44:17 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:44:17 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:44:17 - INFO - __main__ -   Epoch: 0002 | Time: 0m_9s | train_loss: 0.491 | val_loss: 0.550
06/28/2021 01:44:17 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7796610169491526, 'f1': 0.759478252305906, 'precision': 0.7554553789731051, 'recall': 0.7651023385630312}
06/28/2021 01:44:17 - INFO - __main__ -   	--Found new best val f1
06/28/2021 01:44:22 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 01:44:32 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:44:32 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:44:32 - INFO - __main__ -   Epoch: 0003 | Time: 0m_9s | train_loss: 0.462 | val_loss: 0.525
06/28/2021 01:44:32 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7565485362095532, 'f1': 0.6695519348268839, 'precision': 0.7876306289188676, 'recall': 0.6600414428891614}
06/28/2021 01:44:32 - INFO - __main__ -   	current patience value: 1/10
06/28/2021 01:44:41 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:44:41 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:44:41 - INFO - __main__ -   Epoch: 0004 | Time: 0m_9s | train_loss: 0.462 | val_loss: 0.684
06/28/2021 01:44:41 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7272727272727273, 'f1': 0.584997886568329, 'precision': 0.8335759844703272, 'recall': 0.6017359495919145}
06/28/2021 01:44:41 - INFO - __main__ -   	current patience value: 2/10
06/28/2021 01:44:51 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:44:51 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:44:51 - INFO - __main__ -   Epoch: 0005 | Time: 0m_9s | train_loss: 0.445 | val_loss: 0.500
06/28/2021 01:44:51 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7904468412942989, 'f1': 0.7469785575048733, 'precision': 0.7826273905788731, 'recall': 0.7327938004820908}
06/28/2021 01:44:51 - INFO - __main__ -   	current patience value: 3/10
06/28/2021 01:45:01 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:45:01 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:45:01 - INFO - __main__ -   Epoch: 0006 | Time: 0m_9s | train_loss: 0.459 | val_loss: 0.503
06/28/2021 01:45:01 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7796610169491526, 'f1': 0.7088873623357518, 'precision': 0.8122561100842063, 'recall': 0.6928838753330232}
06/28/2021 01:45:01 - INFO - __main__ -   	current patience value: 4/10
06/28/2021 01:45:10 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:45:10 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:45:10 - INFO - __main__ -   Epoch: 0007 | Time: 0m_9s | train_loss: 0.410 | val_loss: 0.660
06/28/2021 01:45:10 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7750385208012327, 'f1': 0.694649256232437, 'precision': 0.8246247387421622, 'recall': 0.6806254493170382}
06/28/2021 01:45:10 - INFO - __main__ -   	current patience value: 5/10
06/28/2021 01:45:20 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:45:20 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:45:20 - INFO - __main__ -   Epoch: 0008 | Time: 0m_9s | train_loss: 0.399 | val_loss: 0.638
06/28/2021 01:45:20 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7580893682588598, 'f1': 0.6588796154013545, 'precision': 0.8237796937446675, 'recall': 0.652455914069438}
06/28/2021 01:45:20 - INFO - __main__ -   	current patience value: 6/10
06/28/2021 01:45:30 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:45:30 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:45:30 - INFO - __main__ -   Epoch: 0009 | Time: 0m_9s | train_loss: 0.391 | val_loss: 0.564
06/28/2021 01:45:30 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7750385208012327, 'f1': 0.7240389095992544, 'precision': 0.7668389261744967, 'recall': 0.7101693660929504}
06/28/2021 01:45:30 - INFO - __main__ -   	current patience value: 7/10
06/28/2021 01:45:39 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:45:39 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:45:39 - INFO - __main__ -   Epoch: 0010 | Time: 0m_9s | train_loss: 0.386 | val_loss: 0.624
06/28/2021 01:45:39 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7688751926040062, 'f1': 0.6964566339893736, 'precision': 0.7890920660437388, 'recall': 0.682517866959868}
06/28/2021 01:45:39 - INFO - __main__ -   	current patience value: 8/10
06/28/2021 01:45:49 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:45:49 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:45:49 - INFO - __main__ -   Epoch: 0011 | Time: 0m_9s | train_loss: 0.349 | val_loss: 0.559
06/28/2021 01:45:49 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7966101694915254, 'f1': 0.7566471229888192, 'precision': 0.7877410468319559, 'recall': 0.7429377933775955}
06/28/2021 01:45:49 - INFO - __main__ -   	current patience value: 9/10
06/28/2021 01:45:59 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:45:59 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:45:59 - INFO - __main__ -   Epoch: 0012 | Time: 0m_9s | train_loss: 0.343 | val_loss: 0.684
06/28/2021 01:45:59 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7442218798151001, 'f1': 0.7295833333333334, 'precision': 0.7257142579868794, 'recall': 0.7458927136634668}
06/28/2021 01:45:59 - INFO - __main__ -   	current patience value: 10/10
06/28/2021 01:45:59 - INFO - __main__ -   	--STOPPING EARLY
06/28/2021 01:45:59 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/GermEval2021/models/monotask/bert-base-german-cased/trg_fc128_lr0.005_frozen
06/28/2021 01:45:59 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/GermEval2021/models/monotask/bert-base-german-cased/trg_fc128_lr0.005_frozen
06/28/2021 01:46:02 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:46:02 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:46:02 - INFO - __main__ -   best_val_loss: 0.550
06/28/2021 01:46:02 - INFO - __main__ -   üî• best validation metrics üî• {'acc': 0.7796610169491526, 'f1': 0.759478252305906, 'precision': 0.7554553789731051, 'recall': 0.7651023385630312}
