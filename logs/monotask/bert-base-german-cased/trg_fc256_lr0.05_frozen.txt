06/28/2021 01:59:42 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

06/28/2021 01:59:42 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	train_data_dir: ../data/GermEval21_Toxic_Train/
	dev_data_dir: ../data/GermEval21_Toxic_Train/
	test_data_dir: None
	label_col_names: Sub3_FactClaiming
	eval_label_col_names: Sub3_FactClaiming
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-german-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 256
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs/monotask/bert-base-german-cased/trg_fc256_lr0.05_frozen.txt
	random_seed: 123
	lr: 0.05
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/GermEval2021/models/monotask/bert-base-german-cased/trg_fc256_lr0.05_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-german-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

06/28/2021 01:59:42 - INFO - __main__ -   device: cuda
06/28/2021 01:59:42 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-german-cased
06/28/2021 01:59:43 - WARNING - data_utils.bert_data -   trimming sentence 38 of length 2708 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 01:59:43 - WARNING - data_utils.bert_data -   trimming sentence 252 of length 667 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 01:59:43 - WARNING - data_utils.bert_data -   trimming sentence 332 of length 1615 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 01:59:44 - WARNING - data_utils.bert_data -   trimming sentence 1735 of length 2871 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 01:59:44 - WARNING - data_utils.bert_data -   trimming sentence 110 of length 1522 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 01:59:45 - INFO - data_utils.preprocess_bert -   num train samples: 2595
06/28/2021 01:59:45 - INFO - data_utils.preprocess_bert -   num val samples: 649
06/28/2021 01:59:45 - INFO - data_utils.preprocess_bert -   num test samples: None
06/28/2021 01:59:45 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
06/28/2021 01:59:45 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
06/28/2021 01:59:45 - INFO - data_utils.preprocess_bert -   train OOV: 567 (0.49%) out of 116734 running tokens are OOV
06/28/2021 01:59:45 - INFO - data_utils.preprocess_bert -   val OOV: 124 (0.42%) out of 29394 running tokens are OOV
06/28/2021 01:59:45 - INFO - data_utils.preprocess_bert -   look at some train samples üëÄ
06/28/2021 01:59:45 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: Es sollte doch hei√üen Sie wissen doch. Wissen ist Macht. Nichts wissen macht nix.Nun den quasseln kann Jeder. Handeln ist angesagt., text ids: [3, 482, 1547, 1575, 11619, 371, 5029, 1575, 26914, 6311, 127, 4129, 26914, 14838, 5029, 2241, 53, 2713, 26914, 4692, 86, 2510, 7731, 26898, 479, 8854, 26914, 11013, 127, 3452, 1063, 26914, 4], original labels: 0, label ids: [[0]]
06/28/2021 01:59:45 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: Das ist doch wieder eine l√§cherliches Gequatsche,wo nix bei rauskommt., text ids: [3, 295, 127, 1575, 525, 155, 1567, 1319, 2279, 241, 633, 15833, 26897, 26918, 743, 53, 2713, 178, 12227, 6886, 26914, 4], original labels: 0, label ids: [[0]]
06/28/2021 01:59:45 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Der Hank geht mir derma√üen auf die Eier., text ids: [3, 233, 5198, 26917, 1398, 3667, 21, 7012, 115, 30, 11903, 26914, 4], original labels: 0, label ids: [[0]]
06/28/2021 01:59:45 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: Verfassungsschonendere Variante? Seit wann hat unsere Verfassung G√ºltigkeit f√ºr Tote? Wir haben noch nicht mal Tierrecht in unserer Verfassung von rechten f√ºr Tote ganz zu Schweigen. Die Verfassung wird durch Spahn seinen Vorschlag ja nicht mal anger√ºhrt., text ids: [3, 5290, 25297, 6638, 26897, 10336, 26972, 1232, 10118, 193, 6712, 8178, 22699, 142, 16847, 26972, 655, 474, 357, 149, 2723, 3817, 652, 50, 8174, 8178, 88, 6642, 142, 16847, 1346, 81, 26551, 26914, 125, 8178, 292, 261, 276, 558, 800, 10021, 3278, 149, 2723, 19365, 8843, 26914, 4], original labels: 1, label ids: [[1]]
06/28/2021 01:59:45 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: @USER ......sag doch bitte einfach genau, WEN und WAS du ansprichst!, text ids: [3, 26991, 960, 8242, 26914, 26914, 26914, 26914, 26914, 26914, 24925, 26908, 1575, 18976, 2774, 2971, 26918, 79, 14972, 42, 79, 12312, 4547, 9460, 737, 20, 13, 26982, 4], original labels: 0, label ids: [[0]]
06/28/2021 01:59:47 - INFO - data_utils.preprocess_bert -   there are nearly 126 batches in an epoch
06/28/2021 01:59:49 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30000, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=256, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=256, out_features=2, bias=True)
  )
)
-----------------------------------------------------------------------------------------

06/28/2021 01:59:49 - INFO - __main__ -   the model has 197,378 trainable parameters
06/28/2021 01:59:49 - INFO - __main__ -   üåã  starting training..
06/28/2021 01:59:59 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:59:59 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:59:59 - INFO - __main__ -   Epoch: 0001 | Time: 0m_9s | train_loss: 2.548 | val_loss: 0.905
06/28/2021 01:59:59 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7288135593220338, 'f1': 0.6981012390578085, 'precision': 0.6981012390578085, 'recall': 0.6981012390578085}
06/28/2021 01:59:59 - INFO - __main__ -   	--Found new best val f1
06/28/2021 01:59:59 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 02:00:09 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:00:09 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:00:09 - INFO - __main__ -   Epoch: 0002 | Time: 0m_9s | train_loss: 0.768 | val_loss: 1.168
06/28/2021 02:00:09 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7195685670261941, 'f1': 0.7104780673372944, 'precision': 0.7141858740301232, 'recall': 0.7381433162769062}
06/28/2021 02:00:09 - INFO - __main__ -   	--Found new best val f1
06/28/2021 02:00:14 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 02:00:23 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:00:23 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:00:23 - INFO - __main__ -   Epoch: 0003 | Time: 0m_9s | train_loss: 0.782 | val_loss: 3.448
06/28/2021 02:00:23 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.3405238828967643, 'f1': 0.2540229885057471, 'precision': 0.17026194144838214, 'recall': 0.5}
06/28/2021 02:00:23 - INFO - __main__ -   	current patience value: 1/10
06/28/2021 02:00:33 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:00:33 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:00:33 - INFO - __main__ -   Epoch: 0004 | Time: 0m_9s | train_loss: 1.047 | val_loss: 0.818
06/28/2021 02:00:33 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6718027734976888, 'f1': 0.4429184549356223, 'precision': 0.751046572475144, 'recall': 0.5202879857910094}
06/28/2021 02:00:33 - INFO - __main__ -   	current patience value: 2/10
06/28/2021 02:00:43 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:00:43 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:00:43 - INFO - __main__ -   Epoch: 0005 | Time: 0m_9s | train_loss: 0.795 | val_loss: 1.098
06/28/2021 02:00:43 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.3405238828967643, 'f1': 0.27359358982405485, 'precision': 0.4172, 'recall': 0.4868693703218167}
06/28/2021 02:00:43 - INFO - __main__ -   	current patience value: 3/10
06/28/2021 02:00:52 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:00:52 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:00:52 - INFO - __main__ -   Epoch: 0006 | Time: 0m_9s | train_loss: 0.893 | val_loss: 0.661
06/28/2021 02:00:52 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7426810477657936, 'f1': 0.6245891134549107, 'precision': 0.8224759615384616, 'recall': 0.6276430414006005}
06/28/2021 02:00:52 - INFO - __main__ -   	current patience value: 4/10
06/28/2021 02:01:02 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:01:02 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:01:02 - INFO - __main__ -   Epoch: 0007 | Time: 0m_9s | train_loss: 0.566 | val_loss: 0.621
06/28/2021 02:01:02 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7503852080123267, 'f1': 0.643812505081714, 'precision': 0.8175061834094368, 'recall': 0.6411436968748678}
06/28/2021 02:01:02 - INFO - __main__ -   	current patience value: 5/10
06/28/2021 02:01:12 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:01:12 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:01:12 - INFO - __main__ -   Epoch: 0008 | Time: 0m_9s | train_loss: 0.613 | val_loss: 0.671
06/28/2021 02:01:12 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.6810477657935285, 'f1': 0.4657416576193942, 'precision': 0.8060327804107426, 'recall': 0.532768427284645}
06/28/2021 02:01:12 - INFO - __main__ -   	current patience value: 6/10
06/28/2021 02:01:21 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:01:21 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:01:21 - INFO - __main__ -   Epoch: 0009 | Time: 0m_9s | train_loss: 0.584 | val_loss: 1.015
06/28/2021 02:01:21 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7750385208012327, 'f1': 0.716454802259887, 'precision': 0.7776053505857667, 'recall': 0.7014156129741616}
06/28/2021 02:01:21 - INFO - __main__ -   	--Found new best val f1
06/28/2021 02:01:30 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 02:01:40 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:01:40 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:01:40 - INFO - __main__ -   Epoch: 0010 | Time: 0m_9s | train_loss: 0.651 | val_loss: 0.594
06/28/2021 02:01:40 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7503852080123267, 'f1': 0.643812505081714, 'precision': 0.8175061834094368, 'recall': 0.6411436968748678}
06/28/2021 02:01:40 - INFO - __main__ -   	current patience value: 1/10
06/28/2021 02:01:50 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:01:50 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:01:50 - INFO - __main__ -   Epoch: 0011 | Time: 0m_9s | train_loss: 0.588 | val_loss: 0.669
06/28/2021 02:01:50 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7611710323574731, 'f1': 0.6722830885107686, 'precision': 0.8054263565891473, 'recall': 0.662451896646509}
06/28/2021 02:01:50 - INFO - __main__ -   	current patience value: 2/10
06/28/2021 02:01:59 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:01:59 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:01:59 - INFO - __main__ -   Epoch: 0012 | Time: 0m_9s | train_loss: 0.586 | val_loss: 0.943
06/28/2021 02:01:59 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7812018489984591, 'f1': 0.7251902478589661, 'precision': 0.7854013546620551, 'recall': 0.7093711675899691}
06/28/2021 02:01:59 - INFO - __main__ -   	--Found new best val f1
06/28/2021 02:02:07 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 02:02:17 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:02:17 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:02:17 - INFO - __main__ -   Epoch: 0013 | Time: 0m_9s | train_loss: 0.874 | val_loss: 0.590
06/28/2021 02:02:17 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7673343605546995, 'f1': 0.6778859901984309, 'precision': 0.8264901482919575, 'recall': 0.6671247938427708}
06/28/2021 02:02:17 - INFO - __main__ -   	current patience value: 1/10
06/28/2021 02:02:26 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:02:26 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:02:26 - INFO - __main__ -   Epoch: 0014 | Time: 0m_9s | train_loss: 0.525 | val_loss: 0.894
06/28/2021 02:02:26 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7704160246533128, 'f1': 0.7069640027030548, 'precision': 0.7762223436219612, 'recall': 0.6924398443777223}
06/28/2021 02:02:26 - INFO - __main__ -   	current patience value: 2/10
06/28/2021 02:02:36 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:02:36 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:02:36 - INFO - __main__ -   Epoch: 0015 | Time: 0m_9s | train_loss: 0.533 | val_loss: 6.889
06/28/2021 02:02:36 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.4899845916795069, 'f1': 0.4828934223987483, 'precision': 0.6126778872468528, 'recall': 0.5870564976529793}
06/28/2021 02:02:36 - INFO - __main__ -   	current patience value: 3/10
06/28/2021 02:02:46 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:02:46 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:02:46 - INFO - __main__ -   Epoch: 0016 | Time: 0m_9s | train_loss: 0.681 | val_loss: 0.767
06/28/2021 02:02:46 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7796610169491526, 'f1': 0.7065159301130525, 'precision': 0.8182339449541285, 'recall': 0.690695437053326}
06/28/2021 02:02:46 - INFO - __main__ -   	current patience value: 4/10
06/28/2021 02:02:55 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:02:55 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:02:55 - INFO - __main__ -   Epoch: 0017 | Time: 0m_9s | train_loss: 0.678 | val_loss: 0.599
06/28/2021 02:02:55 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7627118644067796, 'f1': 0.6707450453299599, 'precision': 0.8185127242386316, 'recall': 0.6614316826658773}
06/28/2021 02:02:55 - INFO - __main__ -   	current patience value: 5/10
06/28/2021 02:03:05 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:03:05 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:03:05 - INFO - __main__ -   Epoch: 0018 | Time: 0m_9s | train_loss: 0.527 | val_loss: 0.579
06/28/2021 02:03:05 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7457627118644068, 'f1': 0.6290850522159297, 'precision': 0.8311431623931624, 'recall': 0.63107370913858}
06/28/2021 02:03:05 - INFO - __main__ -   	current patience value: 6/10
06/28/2021 02:03:15 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:03:15 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:03:15 - INFO - __main__ -   Epoch: 0019 | Time: 0m_9s | train_loss: 0.543 | val_loss: 0.607
06/28/2021 02:03:15 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7719568567026194, 'f1': 0.7016796282952766, 'precision': 0.7921014397041342, 'recall': 0.6870427538376961}
06/28/2021 02:03:15 - INFO - __main__ -   	current patience value: 7/10
06/28/2021 02:03:24 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:03:24 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:03:24 - INFO - __main__ -   Epoch: 0020 | Time: 0m_9s | train_loss: 0.579 | val_loss: 0.694
06/28/2021 02:03:24 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7596302003081664, 'f1': 0.6679653679653679, 'precision': 0.807778050476541, 'recall': 0.6590952340677465}
06/28/2021 02:03:24 - INFO - __main__ -   	current patience value: 8/10
06/28/2021 02:03:34 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:03:34 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:03:34 - INFO - __main__ -   Epoch: 0021 | Time: 0m_9s | train_loss: 0.520 | val_loss: 0.765
06/28/2021 02:03:34 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.3405238828967643, 'f1': 0.2540229885057471, 'precision': 0.17026194144838214, 'recall': 0.5}
06/28/2021 02:03:34 - INFO - __main__ -   	current patience value: 9/10
06/28/2021 02:03:44 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:03:44 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:03:44 - INFO - __main__ -   Epoch: 0022 | Time: 0m_9s | train_loss: 0.568 | val_loss: 0.709
06/28/2021 02:03:44 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7503852080123267, 'f1': 0.6471879194630873, 'precision': 0.8078171828171827, 'recall': 0.6433321351545651}
06/28/2021 02:03:44 - INFO - __main__ -   	current patience value: 10/10
06/28/2021 02:03:44 - INFO - __main__ -   	--STOPPING EARLY
06/28/2021 02:03:44 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/GermEval2021/models/monotask/bert-base-german-cased/trg_fc256_lr0.05_frozen
06/28/2021 02:03:44 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/GermEval2021/models/monotask/bert-base-german-cased/trg_fc256_lr0.05_frozen
06/28/2021 02:03:47 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 02:03:47 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 02:03:47 - INFO - __main__ -   best_val_loss: 0.943
06/28/2021 02:03:47 - INFO - __main__ -   üî• best validation metrics üî• {'acc': 0.7812018489984591, 'f1': 0.7251902478589661, 'precision': 0.7854013546620551, 'recall': 0.7093711675899691}
