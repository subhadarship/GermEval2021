06/28/2021 01:53:03 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

06/28/2021 01:53:03 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	train_data_dir: ../data/GermEval21_Toxic_Train/
	dev_data_dir: ../data/GermEval21_Toxic_Train/
	test_data_dir: None
	label_col_names: Sub3_FactClaiming
	eval_label_col_names: Sub3_FactClaiming
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-german-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 256
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs/monotask/bert-base-german-cased/trg_fc256_lr0.0005_frozen.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: /mnt/backup/panda/GermEval2021/models/monotask/bert-base-german-cased/trg_fc256_lr0.0005_frozen
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-german-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

06/28/2021 01:53:04 - INFO - __main__ -   device: cuda
06/28/2021 01:53:04 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-german-cased
06/28/2021 01:53:05 - WARNING - data_utils.bert_data -   trimming sentence 38 of length 2708 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 01:53:05 - WARNING - data_utils.bert_data -   trimming sentence 252 of length 667 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 01:53:05 - WARNING - data_utils.bert_data -   trimming sentence 332 of length 1615 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 01:53:05 - WARNING - data_utils.bert_data -   trimming sentence 1735 of length 2871 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 01:53:06 - WARNING - data_utils.bert_data -   trimming sentence 110 of length 1522 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/28/2021 01:53:06 - INFO - data_utils.preprocess_bert -   num train samples: 2595
06/28/2021 01:53:06 - INFO - data_utils.preprocess_bert -   num val samples: 649
06/28/2021 01:53:06 - INFO - data_utils.preprocess_bert -   num test samples: None
06/28/2021 01:53:06 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
06/28/2021 01:53:06 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
06/28/2021 01:53:07 - INFO - data_utils.preprocess_bert -   train OOV: 567 (0.49%) out of 116734 running tokens are OOV
06/28/2021 01:53:07 - INFO - data_utils.preprocess_bert -   val OOV: 124 (0.42%) out of 29394 running tokens are OOV
06/28/2021 01:53:07 - INFO - data_utils.preprocess_bert -   look at some train samples üëÄ
06/28/2021 01:53:07 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: Es sollte doch hei√üen Sie wissen doch. Wissen ist Macht. Nichts wissen macht nix.Nun den quasseln kann Jeder. Handeln ist angesagt., text ids: [3, 482, 1547, 1575, 11619, 371, 5029, 1575, 26914, 6311, 127, 4129, 26914, 14838, 5029, 2241, 53, 2713, 26914, 4692, 86, 2510, 7731, 26898, 479, 8854, 26914, 11013, 127, 3452, 1063, 26914, 4], original labels: 0, label ids: [[0]]
06/28/2021 01:53:07 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: Das ist doch wieder eine l√§cherliches Gequatsche,wo nix bei rauskommt., text ids: [3, 295, 127, 1575, 525, 155, 1567, 1319, 2279, 241, 633, 15833, 26897, 26918, 743, 53, 2713, 178, 12227, 6886, 26914, 4], original labels: 0, label ids: [[0]]
06/28/2021 01:53:07 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Der Hank geht mir derma√üen auf die Eier., text ids: [3, 233, 5198, 26917, 1398, 3667, 21, 7012, 115, 30, 11903, 26914, 4], original labels: 0, label ids: [[0]]
06/28/2021 01:53:07 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: Verfassungsschonendere Variante? Seit wann hat unsere Verfassung G√ºltigkeit f√ºr Tote? Wir haben noch nicht mal Tierrecht in unserer Verfassung von rechten f√ºr Tote ganz zu Schweigen. Die Verfassung wird durch Spahn seinen Vorschlag ja nicht mal anger√ºhrt., text ids: [3, 5290, 25297, 6638, 26897, 10336, 26972, 1232, 10118, 193, 6712, 8178, 22699, 142, 16847, 26972, 655, 474, 357, 149, 2723, 3817, 652, 50, 8174, 8178, 88, 6642, 142, 16847, 1346, 81, 26551, 26914, 125, 8178, 292, 261, 276, 558, 800, 10021, 3278, 149, 2723, 19365, 8843, 26914, 4], original labels: 1, label ids: [[1]]
06/28/2021 01:53:07 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: @USER ......sag doch bitte einfach genau, WEN und WAS du ansprichst!, text ids: [3, 26991, 960, 8242, 26914, 26914, 26914, 26914, 26914, 26914, 24925, 26908, 1575, 18976, 2774, 2971, 26918, 79, 14972, 42, 79, 12312, 4547, 9460, 737, 20, 13, 26982, 4], original labels: 0, label ids: [[0]]
06/28/2021 01:53:08 - INFO - data_utils.preprocess_bert -   there are nearly 126 batches in an epoch
06/28/2021 01:53:10 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30000, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=256, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=256, out_features=2, bias=True)
  )
)
-----------------------------------------------------------------------------------------

06/28/2021 01:53:10 - INFO - __main__ -   the model has 197,378 trainable parameters
06/28/2021 01:53:10 - INFO - __main__ -   üåã  starting training..
06/28/2021 01:53:20 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:53:20 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:53:20 - INFO - __main__ -   Epoch: 0001 | Time: 0m_9s | train_loss: 0.546 | val_loss: 0.480
06/28/2021 01:53:20 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7704160246533128, 'f1': 0.7478888845436888, 'precision': 0.7449953660797035, 'recall': 0.751527677929547}
06/28/2021 01:53:20 - INFO - __main__ -   	--Found new best val f1
06/28/2021 01:53:21 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 01:53:30 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:53:30 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:53:30 - INFO - __main__ -   Epoch: 0002 | Time: 0m_9s | train_loss: 0.467 | val_loss: 0.534
06/28/2021 01:53:30 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7426810477657936, 'f1': 0.7338838186295813, 'precision': 0.7360262632029688, 'recall': 0.7622319956019791}
06/28/2021 01:53:30 - INFO - __main__ -   	current patience value: 1/10
06/28/2021 01:53:40 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:53:40 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:53:40 - INFO - __main__ -   Epoch: 0003 | Time: 0m_9s | train_loss: 0.457 | val_loss: 0.490
06/28/2021 01:53:40 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7889060092449923, 'f1': 0.7334622360118112, 'precision': 0.7998065764023211, 'recall': 0.7163065082251449}
06/28/2021 01:53:40 - INFO - __main__ -   	current patience value: 2/10
06/28/2021 01:53:49 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:53:49 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:53:49 - INFO - __main__ -   Epoch: 0004 | Time: 0m_9s | train_loss: 0.446 | val_loss: 0.600
06/28/2021 01:53:49 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7550077041602465, 'f1': 0.6561411810181375, 'precision': 0.8119398066783832, 'recall': 0.6501194654713072}
06/28/2021 01:53:49 - INFO - __main__ -   	current patience value: 3/10
06/28/2021 01:53:59 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:53:59 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:53:59 - INFO - __main__ -   Epoch: 0005 | Time: 0m_9s | train_loss: 0.426 | val_loss: 0.457
06/28/2021 01:53:59 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7950693374422187, 'f1': 0.7514033011056487, 'precision': 0.7906199615124565, 'recall': 0.736298473379287}
06/28/2021 01:53:59 - INFO - __main__ -   	--Found new best val f1
06/28/2021 01:54:05 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 01:54:15 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:54:15 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:54:15 - INFO - __main__ -   Epoch: 0006 | Time: 0m_9s | train_loss: 0.425 | val_loss: 0.463
06/28/2021 01:54:15 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7981510015408321, 'f1': 0.749505752714309, 'precision': 0.804900408367364, 'recall': 0.7320696071383263}
06/28/2021 01:54:15 - INFO - __main__ -   	current patience value: 1/10
06/28/2021 01:54:25 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:54:25 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:54:25 - INFO - __main__ -   Epoch: 0007 | Time: 0m_9s | train_loss: 0.379 | val_loss: 0.497
06/28/2021 01:54:25 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7904468412942989, 'f1': 0.732039636663914, 'precision': 0.8093129770992367, 'recall': 0.7141920751046644}
06/28/2021 01:54:25 - INFO - __main__ -   	current patience value: 2/10
06/28/2021 01:54:34 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:54:34 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:54:34 - INFO - __main__ -   Epoch: 0008 | Time: 0m_9s | train_loss: 0.363 | val_loss: 0.728
06/28/2021 01:54:34 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7534668721109399, 'f1': 0.6482098815621866, 'precision': 0.8252235540334856, 'recall': 0.6445743646128473}
06/28/2021 01:54:34 - INFO - __main__ -   	current patience value: 3/10
06/28/2021 01:54:44 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:54:44 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:54:44 - INFO - __main__ -   Epoch: 0009 | Time: 0m_9s | train_loss: 0.366 | val_loss: 0.465
06/28/2021 01:54:44 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.8073959938366718, 'f1': 0.7738367052224555, 'precision': 0.7956594861518643, 'recall': 0.7620575548695394}
06/28/2021 01:54:44 - INFO - __main__ -   	--Found new best val f1
06/28/2021 01:54:49 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 01:54:59 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:54:59 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:54:59 - INFO - __main__ -   Epoch: 0010 | Time: 0m_9s | train_loss: 0.339 | val_loss: 0.539
06/28/2021 01:54:59 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7950693374422187, 'f1': 0.7374667335796949, 'precision': 0.8178955453149002, 'recall': 0.7187909671417093}
06/28/2021 01:54:59 - INFO - __main__ -   	current patience value: 1/10
06/28/2021 01:55:08 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:55:08 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:55:08 - INFO - __main__ -   Epoch: 0011 | Time: 0m_9s | train_loss: 0.310 | val_loss: 0.497
06/28/2021 01:55:08 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.8120184899845917, 'f1': 0.7776997888684246, 'precision': 0.8037778695293146, 'recall': 0.7644680086268871}
06/28/2021 01:55:08 - INFO - __main__ -   	--Found new best val f1
06/28/2021 01:55:13 - INFO - __main__ -   	current patience value: 0/10
06/28/2021 01:55:23 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:55:23 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:55:23 - INFO - __main__ -   Epoch: 0012 | Time: 0m_9s | train_loss: 0.294 | val_loss: 0.553
06/28/2021 01:55:23 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7673343605546995, 'f1': 0.7493150860139413, 'precision': 0.744214093491478, 'recall': 0.7590392015900537}
06/28/2021 01:55:23 - INFO - __main__ -   	current patience value: 1/10
06/28/2021 01:55:32 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:55:32 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:55:32 - INFO - __main__ -   Epoch: 0013 | Time: 0m_9s | train_loss: 0.282 | val_loss: 0.499
06/28/2021 01:55:32 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7966101694915254, 'f1': 0.7559149343544858, 'precision': 0.7887664419702592, 'recall': 0.7418435742377468}
06/28/2021 01:55:32 - INFO - __main__ -   	current patience value: 2/10
06/28/2021 01:55:42 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:55:42 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:55:42 - INFO - __main__ -   Epoch: 0014 | Time: 0m_9s | train_loss: 0.264 | val_loss: 0.540
06/28/2021 01:55:42 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7827426810477658, 'f1': 0.7637532432327769, 'precision': 0.7591277069419146, 'recall': 0.7707214445807079}
06/28/2021 01:55:42 - INFO - __main__ -   	current patience value: 3/10
06/28/2021 01:55:52 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:55:52 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:55:52 - INFO - __main__ -   Epoch: 0015 | Time: 0m_9s | train_loss: 0.242 | val_loss: 0.598
06/28/2021 01:55:52 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7473035439137135, 'f1': 0.7362259362794663, 'precision': 0.7347457627118644, 'recall': 0.7591713536600837}
06/28/2021 01:55:52 - INFO - __main__ -   	current patience value: 4/10
06/28/2021 01:56:01 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:56:01 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:56:01 - INFO - __main__ -   Epoch: 0016 | Time: 0m_9s | train_loss: 0.245 | val_loss: 0.563
06/28/2021 01:56:01 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7842835130970724, 'f1': 0.7542145469497283, 'precision': 0.7614605543710021, 'recall': 0.7489110669429526}
06/28/2021 01:56:01 - INFO - __main__ -   	current patience value: 5/10
06/28/2021 01:56:11 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:56:11 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:56:11 - INFO - __main__ -   Epoch: 0017 | Time: 0m_9s | train_loss: 0.233 | val_loss: 0.584
06/28/2021 01:56:11 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7842835130970724, 'f1': 0.7281073446327684, 'precision': 0.7917905228186746, 'recall': 0.7117076161881}
06/28/2021 01:56:11 - INFO - __main__ -   	current patience value: 6/10
06/28/2021 01:56:21 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:56:21 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:56:21 - INFO - __main__ -   Epoch: 0018 | Time: 0m_9s | train_loss: 0.211 | val_loss: 0.591
06/28/2021 01:56:21 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7889060092449923, 'f1': 0.7485499192592782, 'precision': 0.7762474012474012, 'recall': 0.7360024527424198}
06/28/2021 01:56:21 - INFO - __main__ -   	current patience value: 7/10
06/28/2021 01:56:30 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:56:30 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:56:30 - INFO - __main__ -   Epoch: 0019 | Time: 0m_9s | train_loss: 0.191 | val_loss: 0.644
06/28/2021 01:56:30 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7519260400616333, 'f1': 0.7375287932338098, 'precision': 0.7333022496794499, 'recall': 0.7539222734384912}
06/28/2021 01:56:30 - INFO - __main__ -   	current patience value: 8/10
06/28/2021 01:56:40 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:56:40 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:56:40 - INFO - __main__ -   Epoch: 0020 | Time: 0m_9s | train_loss: 0.174 | val_loss: 0.614
06/28/2021 01:56:40 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7796610169491526, 'f1': 0.7510548523206751, 'precision': 0.7553146258503401, 'recall': 0.7475948323254535}
06/28/2021 01:56:40 - INFO - __main__ -   	current patience value: 9/10
06/28/2021 01:56:50 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:56:50 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:56:50 - INFO - __main__ -   Epoch: 0021 | Time: 0m_9s | train_loss: 0.169 | val_loss: 0.623
06/28/2021 01:56:50 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7827426810477658, 'f1': 0.7469785575048733, 'precision': 0.7629967274427303, 'recall': 0.7378948703852497}
06/28/2021 01:56:50 - INFO - __main__ -   	current patience value: 10/10
06/28/2021 01:56:50 - INFO - __main__ -   	--STOPPING EARLY
06/28/2021 01:56:50 - INFO - __main__ -   load checkpoint from /mnt/backup/panda/GermEval2021/models/monotask/bert-base-german-cased/trg_fc256_lr0.0005_frozen
06/28/2021 01:56:50 - INFO - __main__ -   load model weights from checkpoint in /mnt/backup/panda/GermEval2021/models/monotask/bert-base-german-cased/trg_fc256_lr0.0005_frozen
06/28/2021 01:56:53 - INFO - training_utils.train_loop -   postprocessing targets..
06/28/2021 01:56:53 - INFO - training_utils.train_loop -   postprocessing predictions..
06/28/2021 01:56:53 - INFO - __main__ -   best_val_loss: 0.497
06/28/2021 01:56:53 - INFO - __main__ -   üî• best validation metrics üî• {'acc': 0.8120184899845917, 'f1': 0.7776997888684246, 'precision': 0.8037778695293146, 'recall': 0.7644680086268871}
