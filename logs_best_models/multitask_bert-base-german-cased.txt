06/30/2021 23:10:29 - INFO - __main__ -   

*****************
***RUN STARTED***
*****************

06/30/2021 23:10:29 - INFO - __main__ -   args
-----------------------------------------------------------------------------------------
	train_data_dir: ../data/cross_validation/fold_A
	dev_data_dir: ../data/cross_validation/fold_A
	test_data_dir: None
	label_col_names: Sub1_Toxic,Sub2_Engaging,Sub3_FactClaiming
	eval_label_col_names: Sub3_FactClaiming
	batch_size: 1024
	max_vocab_size: None
	tokenization: bert-base-german-cased
	hid_dim: 128
	num_enc_layers: 3
	num_enc_heads: 8
	enc_pf_dim: 256
	enc_dropout: 0.1
	fc_dim: 64
	bert_fc_dim: 512
	logistic_regression_hid_dim: 128
	logistic_regression_dropout: 0.1
	log_file_path: ../logs_best_models/multitask_bert-base-german-cased.txt
	random_seed: 123
	lr: 0.0005
	clip: 1.0
	max_epochs: 999
	model_dir: ../models/best_models/multitask_bert-base-german-cased
	no_xavier_initialization: False
	early_stopping_patience: 10
	model_name: bert-base-german-cased
	freeze_bert: True
-----------------------------------------------------------------------------------------

06/30/2021 23:10:30 - INFO - __main__ -   device: cuda
06/30/2021 23:10:30 - INFO - data_utils.preprocess_bert -   tokenization: bert-base-german-cased
06/30/2021 23:10:30 - WARNING - data_utils.bert_data -   trimming sentence 38 of length 2708 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/30/2021 23:10:31 - WARNING - data_utils.bert_data -   trimming sentence 252 of length 667 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/30/2021 23:10:31 - WARNING - data_utils.bert_data -   trimming sentence 332 of length 1615 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/30/2021 23:10:31 - WARNING - data_utils.bert_data -   trimming sentence 1735 of length 2871 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/30/2021 23:10:32 - WARNING - data_utils.bert_data -   trimming sentence 110 of length 1522 to 512 tokens (trimmed tokens include [CLS] and [SEP] tokens)
06/30/2021 23:10:32 - INFO - data_utils.preprocess_bert -   num train samples: 2595
06/30/2021 23:10:32 - INFO - data_utils.preprocess_bert -   num val samples: 649
06/30/2021 23:10:32 - INFO - data_utils.preprocess_bert -   num test samples: None
06/30/2021 23:10:32 - INFO - data_utils.preprocess_bert -   train sentence max len: 512
06/30/2021 23:10:32 - INFO - data_utils.preprocess_bert -   val sentence max len: 512
06/30/2021 23:10:33 - INFO - data_utils.preprocess_bert -   train OOV: 567 (0.49%) out of 116734 running tokens are OOV
06/30/2021 23:10:33 - INFO - data_utils.preprocess_bert -   val OOV: 124 (0.42%) out of 29394 running tokens are OOV
06/30/2021 23:10:33 - INFO - data_utils.preprocess_bert -   look at some train samples üëÄ
06/30/2021 23:10:33 - INFO - data_utils.preprocess_bert -   sample idx: 0, original text: Es sollte doch hei√üen Sie wissen doch. Wissen ist Macht. Nichts wissen macht nix.Nun den quasseln kann Jeder. Handeln ist angesagt., text ids: [3, 482, 1547, 1575, 11619, 371, 5029, 1575, 26914, 6311, 127, 4129, 26914, 14838, 5029, 2241, 53, 2713, 26914, 4692, 86, 2510, 7731, 26898, 479, 8854, 26914, 11013, 127, 3452, 1063, 26914, 4], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/30/2021 23:10:33 - INFO - data_utils.preprocess_bert -   sample idx: 1, original text: Das ist doch wieder eine l√§cherliches Gequatsche,wo nix bei rauskommt., text ids: [3, 295, 127, 1575, 525, 155, 1567, 1319, 2279, 241, 633, 15833, 26897, 26918, 743, 53, 2713, 178, 12227, 6886, 26914, 4], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/30/2021 23:10:33 - INFO - data_utils.preprocess_bert -   sample idx: 2, original text: Der Hank geht mir derma√üen auf die Eier., text ids: [3, 233, 5198, 26917, 1398, 3667, 21, 7012, 115, 30, 11903, 26914, 4], original labels: 1 0 0, label ids: [[1], [0], [0]]
06/30/2021 23:10:33 - INFO - data_utils.preprocess_bert -   sample idx: 3, original text: Verfassungsschonendere Variante? Seit wann hat unsere Verfassung G√ºltigkeit f√ºr Tote? Wir haben noch nicht mal Tierrecht in unserer Verfassung von rechten f√ºr Tote ganz zu Schweigen. Die Verfassung wird durch Spahn seinen Vorschlag ja nicht mal anger√ºhrt., text ids: [3, 5290, 25297, 6638, 26897, 10336, 26972, 1232, 10118, 193, 6712, 8178, 22699, 142, 16847, 26972, 655, 474, 357, 149, 2723, 3817, 652, 50, 8174, 8178, 88, 6642, 142, 16847, 1346, 81, 26551, 26914, 125, 8178, 292, 261, 276, 558, 800, 10021, 3278, 149, 2723, 19365, 8843, 26914, 4], original labels: 0 1 1, label ids: [[0], [1], [1]]
06/30/2021 23:10:33 - INFO - data_utils.preprocess_bert -   sample idx: 4, original text: @USER ......sag doch bitte einfach genau, WEN und WAS du ansprichst!, text ids: [3, 26991, 960, 8242, 26914, 26914, 26914, 26914, 26914, 26914, 24925, 26908, 1575, 18976, 2774, 2971, 26918, 79, 14972, 42, 79, 12312, 4547, 9460, 737, 20, 13, 26982, 4], original labels: 0 0 0, label ids: [[0], [0], [0]]
06/30/2021 23:10:34 - INFO - data_utils.preprocess_bert -   there are nearly 126 batches in an epoch
06/30/2021 23:10:36 - INFO - __main__ -   model
-----------------------------------------------------------------------------------------
MultitaskBertClassificationModel(
  (encoder): BERT(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(30000, 768, padding_idx=0)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (1): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (2): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (3): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (4): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (5): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (6): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (7): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (8): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (9): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (10): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
          (11): BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm(torch.Size([768]), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
  )
  (fc): Linear(in_features=768, out_features=512, bias=True)
  (clfs): ModuleList(
    (0): Linear(in_features=512, out_features=2, bias=True)
    (1): Linear(in_features=512, out_features=2, bias=True)
    (2): Linear(in_features=512, out_features=2, bias=True)
  )
)
-----------------------------------------------------------------------------------------

06/30/2021 23:10:36 - INFO - __main__ -   the model has 396,806 trainable parameters
06/30/2021 23:10:36 - INFO - __main__ -   üåã  starting training..
06/30/2021 23:10:46 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:10:46 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:10:46 - INFO - __main__ -   Epoch: 0001 | Time: 0m_9s | train_loss: 1.674 | val_loss: 1.981
06/30/2021 23:10:46 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7688751926040062, 'f1': 0.7567320379033224, 'precision': 0.7526115584390507, 'recall': 0.7766207129868483}
06/30/2021 23:10:46 - INFO - __main__ -   	--Found new best val f1
06/30/2021 23:10:47 - INFO - __main__ -   	current patience value: 0/10
06/30/2021 23:10:56 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:10:56 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:10:56 - INFO - __main__ -   Epoch: 0002 | Time: 0m_9s | train_loss: 1.518 | val_loss: 1.625
06/30/2021 23:10:56 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7349768875192604, 'f1': 0.7278534092682165, 'precision': 0.7342447149993352, 'recall': 0.7607677506660464}
06/30/2021 23:10:56 - INFO - __main__ -   	current patience value: 1/10
06/30/2021 23:11:06 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:11:06 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:11:06 - INFO - __main__ -   Epoch: 0003 | Time: 0m_9s | train_loss: 1.434 | val_loss: 1.552
06/30/2021 23:11:06 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7935285053929122, 'f1': 0.7378963230861966, 'precision': 0.8099508050089446, 'recall': 0.7198111811223411}
06/30/2021 23:11:06 - INFO - __main__ -   	current patience value: 2/10
06/30/2021 23:11:16 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:11:16 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:11:16 - INFO - __main__ -   Epoch: 0004 | Time: 0m_9s | train_loss: 1.383 | val_loss: 1.758
06/30/2021 23:11:16 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7596302003081664, 'f1': 0.6634086012925876, 'precision': 0.8203355938097723, 'recall': 0.6558125766482006}
06/30/2021 23:11:16 - INFO - __main__ -   	current patience value: 3/10
06/30/2021 23:11:26 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:11:26 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:11:26 - INFO - __main__ -   Epoch: 0005 | Time: 0m_9s | train_loss: 1.330 | val_loss: 1.477
06/30/2021 23:11:26 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.8058551617873652, 'f1': 0.7697492904446547, 'precision': 0.796838679683868, 'recall': 0.7565124540110797}
06/30/2021 23:11:26 - INFO - __main__ -   	--Found new best val f1
06/30/2021 23:11:27 - INFO - __main__ -   	current patience value: 0/10
06/30/2021 23:11:37 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:11:37 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:11:37 - INFO - __main__ -   Epoch: 0006 | Time: 0m_9s | train_loss: 1.255 | val_loss: 1.528
06/30/2021 23:11:37 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7996918335901386, 'f1': 0.7466305496828751, 'precision': 0.8174865159597984, 'recall': 0.7277667357381485}
06/30/2021 23:11:37 - INFO - __main__ -   	current patience value: 1/10
06/30/2021 23:11:47 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:11:47 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:11:47 - INFO - __main__ -   Epoch: 0007 | Time: 0m_9s | train_loss: 1.204 | val_loss: 1.532
06/30/2021 23:11:47 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.8058551617873652, 'f1': 0.7633689839572192, 'precision': 0.8074465001054185, 'recall': 0.7466644817524422}
06/30/2021 23:11:47 - INFO - __main__ -   	current patience value: 2/10
06/30/2021 23:11:56 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:11:56 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:11:56 - INFO - __main__ -   Epoch: 0008 | Time: 0m_9s | train_loss: 1.160 | val_loss: 1.664
06/30/2021 23:11:56 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7719568567026194, 'f1': 0.6904663693315115, 'precision': 0.8184590537716132, 'recall': 0.6771947815790587}
06/30/2021 23:11:56 - INFO - __main__ -   	current patience value: 3/10
06/30/2021 23:12:06 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:12:06 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:12:06 - INFO - __main__ -   Epoch: 0009 | Time: 0m_9s | train_loss: 1.095 | val_loss: 1.594
06/30/2021 23:12:06 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.810477657935285, 'f1': 0.7780715435491539, 'precision': 0.798691068467188, 'recall': 0.7665824417473674}
06/30/2021 23:12:06 - INFO - __main__ -   	--Found new best val f1
06/30/2021 23:12:08 - INFO - __main__ -   	current patience value: 0/10
06/30/2021 23:12:18 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:12:18 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:12:18 - INFO - __main__ -   Epoch: 0010 | Time: 0m_9s | train_loss: 1.049 | val_loss: 1.553
06/30/2021 23:12:18 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7966101694915254, 'f1': 0.7573694346890224, 'precision': 0.7867605038884886, 'recall': 0.7440320125174441}
06/30/2021 23:12:18 - INFO - __main__ -   	current patience value: 1/10
06/30/2021 23:12:27 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:12:27 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:12:27 - INFO - __main__ -   Epoch: 0011 | Time: 0m_9s | train_loss: 0.999 | val_loss: 1.789
06/30/2021 23:12:27 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.8120184899845917, 'f1': 0.7801783493248045, 'precision': 0.8002018699532512, 'recall': 0.7688448851862815}
06/30/2021 23:12:27 - INFO - __main__ -   	--Found new best val f1
06/30/2021 23:12:29 - INFO - __main__ -   	current patience value: 0/10
06/30/2021 23:12:39 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:12:39 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:12:39 - INFO - __main__ -   Epoch: 0012 | Time: 0m_9s | train_loss: 0.959 | val_loss: 1.769
06/30/2021 23:12:39 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7950693374422187, 'f1': 0.7638418079096045, 'precision': 0.7759618891320204, 'recall': 0.7559944178965619}
06/30/2021 23:12:39 - INFO - __main__ -   	current patience value: 1/10
06/30/2021 23:12:48 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:12:48 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:12:48 - INFO - __main__ -   Epoch: 0013 | Time: 0m_9s | train_loss: 0.885 | val_loss: 1.638
06/30/2021 23:12:48 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.8043143297380585, 'f1': 0.7587692469788718, 'precision': 0.8105612897954737, 'recall': 0.7411193808939823}
06/30/2021 23:12:48 - INFO - __main__ -   	current patience value: 2/10
06/30/2021 23:12:58 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:12:58 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:12:58 - INFO - __main__ -   Epoch: 0014 | Time: 0m_9s | train_loss: 0.841 | val_loss: 1.764
06/30/2021 23:12:58 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7688751926040062, 'f1': 0.7529037301764574, 'precision': 0.7475423077680805, 'recall': 0.7656785215883621}
06/30/2021 23:12:58 - INFO - __main__ -   	current patience value: 3/10
06/30/2021 23:13:08 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:13:08 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:13:08 - INFO - __main__ -   Epoch: 0015 | Time: 0m_9s | train_loss: 0.798 | val_loss: 1.998
06/30/2021 23:13:08 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7565485362095532, 'f1': 0.7477813852813853, 'precision': 0.7486713526487228, 'recall': 0.7760286717131137}
06/30/2021 23:13:08 - INFO - __main__ -   	current patience value: 4/10
06/30/2021 23:13:18 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:13:18 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:13:18 - INFO - __main__ -   Epoch: 0016 | Time: 0m_9s | train_loss: 0.758 | val_loss: 1.828
06/30/2021 23:13:18 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7796610169491526, 'f1': 0.7527816624711978, 'precision': 0.7549145987753787, 'recall': 0.7508774897449993}
06/30/2021 23:13:18 - INFO - __main__ -   	current patience value: 5/10
06/30/2021 23:13:27 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:13:27 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:13:27 - INFO - __main__ -   Epoch: 0017 | Time: 0m_9s | train_loss: 0.721 | val_loss: 1.893
06/30/2021 23:13:27 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7873651771956857, 'f1': 0.7356743164754214, 'precision': 0.7898796560004469, 'recall': 0.7195151604854738}
06/30/2021 23:13:27 - INFO - __main__ -   	current patience value: 6/10
06/30/2021 23:13:37 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:13:37 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:13:37 - INFO - __main__ -   Epoch: 0018 | Time: 0m_9s | train_loss: 0.651 | val_loss: 1.925
06/30/2021 23:13:37 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7935285053929122, 'f1': 0.7522166757840991, 'precision': 0.7846701507233205, 'recall': 0.7384129064997674}
06/30/2021 23:13:37 - INFO - __main__ -   	current patience value: 7/10
06/30/2021 23:13:47 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:13:47 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:13:47 - INFO - __main__ -   Epoch: 0019 | Time: 0m_9s | train_loss: 0.621 | val_loss: 1.970
06/30/2021 23:13:47 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7704160246533128, 'f1': 0.7429921569565483, 'precision': 0.7444187836797536, 'recall': 0.7416797056709097}
06/30/2021 23:13:47 - INFO - __main__ -   	current patience value: 8/10
06/30/2021 23:13:57 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:13:57 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:13:57 - INFO - __main__ -   Epoch: 0020 | Time: 0m_9s | train_loss: 0.600 | val_loss: 1.961
06/30/2021 23:13:57 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7935285053929122, 'f1': 0.7491403978400333, 'precision': 0.7891080057463759, 'recall': 0.734036029940373}
06/30/2021 23:13:57 - INFO - __main__ -   	current patience value: 9/10
06/30/2021 23:14:06 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:14:06 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:14:06 - INFO - __main__ -   Epoch: 0021 | Time: 0m_9s | train_loss: 0.531 | val_loss: 2.007
06/30/2021 23:14:06 - INFO - __main__ -   üî• val metrics üî• {'acc': 0.7842835130970724, 'f1': 0.7510903153696115, 'precision': 0.7632261825830494, 'recall': 0.7434399712437096}
06/30/2021 23:14:06 - INFO - __main__ -   	current patience value: 10/10
06/30/2021 23:14:06 - INFO - __main__ -   	--STOPPING EARLY
06/30/2021 23:14:06 - INFO - __main__ -   load checkpoint from ../models/best_models/multitask_bert-base-german-cased
06/30/2021 23:14:07 - INFO - __main__ -   load model weights from checkpoint in ../models/best_models/multitask_bert-base-german-cased
06/30/2021 23:14:10 - INFO - training_utils.train_loop -   postprocessing targets..
06/30/2021 23:14:10 - INFO - training_utils.train_loop -   postprocessing predictions..
06/30/2021 23:14:10 - INFO - __main__ -   best_val_loss: 1.789
06/30/2021 23:14:10 - INFO - __main__ -   üî• best validation metrics üî• {'acc': 0.8120184899845917, 'f1': 0.7801783493248045, 'precision': 0.8002018699532512, 'recall': 0.7688448851862815}
